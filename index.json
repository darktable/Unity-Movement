{
  "api/Oculus.Movement.AnimationRigging.AnimationUtilities.html": {
    "href": "api/Oculus.Movement.AnimationRigging.AnimationUtilities.html",
    "title": "Class AnimationUtilities | Unity-Movement Documentation",
    "keywords": "Class AnimationUtilities Provides convenient algorithms to assist with animation rigging work. Inheritance System.Object AnimationUtilities Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public static class AnimationUtilities Methods GetRotationChange(Vector3, Vector3, Vector3, Vector3) Fix rotation of joint to match new target position. Declaration public static Quaternion GetRotationChange(Vector3 oldJointPosition, Vector3 oldJointTargetPosition, Vector3 newJointPosition, Vector3 newTargetPosition) Parameters Type Name Description Vector3 oldJointPosition Old joint position. Vector3 oldJointTargetPosition Old target position. Vector3 newJointPosition New joint position. Vector3 newTargetPosition New joint target position. Returns Type Description Quaternion SolveCCDIK(Transform[], Vector3, Single, Single) Cyclic Coordinate Descent IK algorithm implementation. This rotates each bone in the chain so that the effector bone will reach the target position. An example of this usage is rotating the entire arm so that the specified hand can match the tracked hand position. Declaration public static bool SolveCCDIK(Transform[] bones, Vector3 targetPosition, float tolerance, float maxIterations) Parameters Type Name Description Transform [] bones The bones in the chain. Vector3 targetPosition The target position. System.Single tolerance The maximum distance allowed between the effector and target position. System.Single maxIterations The maximum number of iterations Returns Type Description System.Boolean True if the IK was successful at positioning the effector at the target position. SolveFABRIK(Transform[], Single[], Vector3, Single, Int32, Boolean) Runs FABRIK, or Forward And Backward Reaching Inverse Kinematics, algorithm on joints so that the end effector moves to the desired target, and its children move with it. The joints can be an IK chain representing a finger, where the tip moves toward the target and the joints behind it are translated as well. Rotations are solved for. From: Aristidou A, Lasenby J. FABRIK: A fast, iterative solver for the Inverse Kinematics problem. Graphical Models 2011; 73(5): 243â€“260. Declaration public static bool SolveFABRIK(Transform[] joints, float[] distanceToNextJoint, Vector3 target, float targetTolerance, int maxIterations = 10, bool solveRotations = false) Parameters Type Name Description Transform [] joints Joint transforms. System.Single [] distanceToNextJoint Distances from current joint to following. Vector3 target Target position. System.Single targetTolerance If target is reachable, the max distance between end effector and target. System.Int32 maxIterations Max iterations to run. System.Boolean solveRotations Returns Type Description System.Boolean True if successful, false if not. UpdateToAnimatorPose(Animator, Boolean) Update animator to the pose stored in the avatar's human description. Declaration public static void UpdateToAnimatorPose(Animator sourceAnimator, bool isRuntimeInstance = false) Parameters Type Name Description Animator sourceAnimator The animator that contains the human description. System.Boolean isRuntimeInstance If called during runtime."
  },
  "api/Oculus.Movement.AnimationRigging.AvatarMaskExtensionMethods.html": {
    "href": "api/Oculus.Movement.AnimationRigging.AvatarMaskExtensionMethods.html",
    "title": "Class AvatarMaskExtensionMethods | Unity-Movement Documentation",
    "keywords": "Class AvatarMaskExtensionMethods Inheritance System.Object AvatarMaskExtensionMethods Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public static class AvatarMaskExtensionMethods Fields AvatarMaskBodyParts Declaration public static AvatarMaskBodyPart[] AvatarMaskBodyParts Field Value Type Description AvatarMaskBodyPart [] Methods CopyOtherMaskBodyActiveValues(AvatarMask, AvatarMask) Copies all active values from another onto the current one. Declaration public static void CopyOtherMaskBodyActiveValues(this AvatarMask avatarMask, AvatarMask otherMask) Parameters Type Name Description AvatarMask avatarMask to affect. AvatarMask otherMask to copy from. InitializeDefaultValues(AvatarMask, Boolean) Sets every of to a specified active value. Declaration public static void InitializeDefaultValues(this AvatarMask avatarMask, bool defaultActiveValue) Parameters Type Name Description AvatarMask avatarMask under consideration. System.Boolean defaultActiveValue Active value to set."
  },
  "api/Oculus.Movement.AnimationRigging.BoneMappingsExtension.html": {
    "href": "api/Oculus.Movement.AnimationRigging.BoneMappingsExtension.html",
    "title": "Class BoneMappingsExtension | Unity-Movement Documentation",
    "keywords": "Class BoneMappingsExtension Contains extra mappins not yet available in the SDK. Inheritance System.Object BoneMappingsExtension Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class BoneMappingsExtension Fields HumanBoneToAvatarBodyPart Maps HumanBodyBones to avatar mask body part. Includes legs as well. Declaration public static readonly Dictionary<HumanBodyBones, AvatarMaskBodyPart> HumanBoneToAvatarBodyPart Field Value Type Description Dictionary < HumanBodyBones , AvatarMaskBodyPart > HumanBoneToAvatarBodyPartArray Maps HumanBodyBones to avatar mask body part. Includes legs as well. Declaration public static readonly AvatarMaskBodyPart[] HumanBoneToAvatarBodyPartArray Field Value Type Description AvatarMaskBodyPart [] OVRSkeletonBoneIdToAvatarBodyPart Maps OVRSkeletonBoneId to avatar mask body part. Declaration public static readonly Dictionary<OVRSkeleton.BoneId, AvatarMaskBodyPart> OVRSkeletonBoneIdToAvatarBodyPart Field Value Type Description Dictionary < OVRSkeleton.BoneId , AvatarMaskBodyPart > OVRSkeletonFullBodyBoneIdToAvatarBodyPart Maps OVRSkeleton.BoneId.FullBody* to avatar mask body part. Declaration public static readonly Dictionary<OVRSkeleton.BoneId, AvatarMaskBodyPart> OVRSkeletonFullBodyBoneIdToAvatarBodyPart Field Value Type Description Dictionary < OVRSkeleton.BoneId , AvatarMaskBodyPart >"
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationConstraint.html",
    "title": "Class CaptureAnimationConstraint | Unity-Movement Documentation",
    "keywords": "Class CaptureAnimationConstraint Capture animation constraint. Captures the current animator's reference pose and current pose, to be used to blend animation playback and tracking in another animation job. Inheritance System.Object CaptureAnimationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CaptureAnimationConstraint : RigConstraint<CaptureAnimationJob, CaptureAnimationData, CaptureAnimationJobBinder<CaptureAnimationData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationConstraintEditor.html",
    "title": "Class CaptureAnimationConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class CaptureAnimationConstraintEditor Custom editor for the capture animation constraint. Inheritance System.Object CaptureAnimationConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CaptureAnimationConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationData.html",
    "title": "Struct CaptureAnimationData | Unity-Movement Documentation",
    "keywords": "Struct CaptureAnimationData Data to store captured bone data from the current animation. Implements ICaptureAnimationData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct CaptureAnimationData : ICaptureAnimationData Methods AssignAnimator(Animator) Assign the animator. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator The animator to be assigned. GetBonePositionDelta(HumanBodyBones) Return the position delta for a bone between the reference and current pose. Declaration public Vector3 GetBonePositionDelta(HumanBodyBones humanBodyBones) Parameters Type Name Description HumanBodyBones humanBodyBones The bone to check. Returns Type Description Vector3 The position delta for a bone between the reference and current pose. GetBoneRotationDelta(HumanBodyBones) Return the rotation delta for a bone between the reference and current pose. Declaration public Quaternion GetBoneRotationDelta(HumanBodyBones humanBodyBones) Parameters Type Name Description HumanBodyBones humanBodyBones The bone to check. Returns Type Description Quaternion The rotation delta for a bone between the reference and current pose. SetupPoseArrays() Setup the reference and current pose arrays. Declaration public void SetupPoseArrays() Explicit Interface Implementations ICaptureAnimationData.ConstraintAnimator The animator used by the constraint. Declaration readonly Animator ICaptureAnimationData.ConstraintAnimator { get; } Returns Type Description Animator ICaptureAnimationData.CurrentAnimatorStateInfoHash The current animator state info hash. Declaration int ICaptureAnimationData.CurrentAnimatorStateInfoHash { get; set; } Returns Type Description System.Int32 ICaptureAnimationData.CurrentPose The bone data for the current pose. Declaration readonly CaptureAnimationData.PoseBone[] ICaptureAnimationData.CurrentPose { get; } Returns Type Description CaptureAnimationData.PoseBone [] ICaptureAnimationData.ReferencePose The bone data for the reference pose. Declaration readonly CaptureAnimationData.PoseBone[] ICaptureAnimationData.ReferencePose { get; } Returns Type Description CaptureAnimationData.PoseBone [] ICaptureAnimationData.ReferencePoseTime The normalized time from which the reference pose should be captured from. Declaration readonly float ICaptureAnimationData.ReferencePoseTime { get; } Returns Type Description System.Single ICaptureAnimationData.TargetAnimatorLayer The target animator layer to capture animations on. Declaration readonly int ICaptureAnimationData.TargetAnimatorLayer { get; } Returns Type Description System.Int32 Implements ICaptureAnimationData"
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationData.PoseBone.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationData.PoseBone.html",
    "title": "Class CaptureAnimationData.PoseBone | Unity-Movement Documentation",
    "keywords": "Class CaptureAnimationData.PoseBone The bone information for a bone in a pose. Inheritance System.Object CaptureAnimationData.PoseBone Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class PoseBone Fields Bone The bone in the pose. Declaration public HumanBodyBones Bone Field Value Type Description HumanBodyBones Position The position of the bone. Declaration public Vector3 Position Field Value Type Description Vector3 Rotation The rotation of the bone. Declaration public Quaternion Rotation Field Value Type Description Quaternion"
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationJob.html",
    "title": "Struct CaptureAnimationJob | Unity-Movement Documentation",
    "keywords": "Struct CaptureAnimationJob The capture animation job, which will write bone position and rotation data into accessible native arrays. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct CaptureAnimationJob Fields BonePositions The array of bone positions to write to. Declaration public NativeArray<Vector3> BonePositions Field Value Type Description NativeArray < Vector3 > BoneRotations The array of bone rotations to write to. Declaration public NativeArray<Quaternion> BoneRotations Field Value Type Description NativeArray < Quaternion > Bones The array of read write transform handles for animator bones. Declaration public NativeArray<ReadWriteTransformHandle> Bones Field Value Type Description NativeArray < ReadWriteTransformHandle > Properties jobWeight Job weight. Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Defines what to do when processing the animation. Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on. ProcessRootMotion(AnimationStream) Defines what to do when processing the root motion. Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on."
  },
  "api/Oculus.Movement.AnimationRigging.CaptureAnimationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CaptureAnimationJobBinder-1.html",
    "title": "Class CaptureAnimationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class CaptureAnimationJobBinder<T> The capture animation job binder. Inheritance System.Object CaptureAnimationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CaptureAnimationJobBinder<T> : AnimationJobBinder<CaptureAnimationJob, T> where T : struct, IAnimationJobData, ICaptureAnimationData Type Parameters Name Description T Type to be used for the job. Methods Create(Animator, ref T, Component) Declaration public override CaptureAnimationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description CaptureAnimationJob Destroy(CaptureAnimationJob) Declaration public override void Destroy(CaptureAnimationJob job) Parameters Type Name Description CaptureAnimationJob job Update(CaptureAnimationJob, ref T) Declaration public override void Update(CaptureAnimationJob job, ref T data) Parameters Type Name Description CaptureAnimationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.CopyPoseConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CopyPoseConstraint.html",
    "title": "Class CopyPoseConstraint | Unity-Movement Documentation",
    "keywords": "Class CopyPoseConstraint The CopyPose constraint, used to copy the current humanoid animator pose information to be used when correcting positions in RetargetingLayer. Inheritance System.Object CopyPoseConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CopyPoseConstraint : RigConstraint<CopyPoseJob, CopyPoseData, CopyPoseJobBinder<CopyPoseData>>, IOVRSkeletonConstraint Methods OnValidate() Declaration protected override void OnValidate() RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.CopyPoseData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CopyPoseData.html",
    "title": "Struct CopyPoseData | Unity-Movement Documentation",
    "keywords": "Struct CopyPoseData Copy pose data used by the copy pose job. Implements the copy pose data interface. Implements ICopyPoseData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct CopyPoseData : ICopyPoseData Properties AnimatorBones The array of humanoid animator bones. Declaration public readonly Transform[] AnimatorBones { get; } Property Value Type Description Transform [] CopyPoseToOriginal True if the pose being copied is the original pose. If false, the copied pose is assumed to be the final pose. Declaration public bool CopyPoseToOriginal { get; set; } Property Value Type Description System.Boolean RetargetingLayerComp The retargeting layer component. Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer Methods Setup() Caches the array of humanoid animator bones to be copied. Declaration public void Setup() Implements ICopyPoseData"
  },
  "api/Oculus.Movement.AnimationRigging.CopyPoseJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CopyPoseJob.html",
    "title": "Struct CopyPoseJob | Unity-Movement Documentation",
    "keywords": "Struct CopyPoseJob The CopyPose job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct CopyPoseJob Fields Bones The array of bone positions to be read. Declaration public NativeArray<ReadOnlyTransformHandle> Bones Field Value Type Description NativeArray < ReadOnlyTransformHandle > Positions The stored positions of read bones. Declaration public NativeArray<Vector3> Positions Field Value Type Description NativeArray < Vector3 > Properties jobWeight Job weight. Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Defines what to do when processing the animation. Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on. ProcessRootMotion(AnimationStream) Defines what to do when processing the root motion. Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on."
  },
  "api/Oculus.Movement.AnimationRigging.CopyPoseJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.CopyPoseJobBinder-1.html",
    "title": "Class CopyPoseJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class CopyPoseJobBinder<T> The CopyPose job binder. Inheritance System.Object CopyPoseJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class CopyPoseJobBinder<T> : AnimationJobBinder<CopyPoseJob, T> where T : struct, IAnimationJobData, ICopyPoseData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override CopyPoseJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description CopyPoseJob Destroy(CopyPoseJob) Destroy the job and clean up arrays. Declaration public override void Destroy(CopyPoseJob job) Parameters Type Name Description CopyPoseJob job The job that is being destroyed. Update(CopyPoseJob, ref T) Update job with component information. Declaration public override void Update(CopyPoseJob job, ref T data) Parameters Type Name Description CopyPoseJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationUtilities.ArmPosData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationUtilities.ArmPosData.html",
    "title": "Struct DeformationUtilities.ArmPosData | Unity-Movement Documentation",
    "keywords": "Struct DeformationUtilities.ArmPosData Information about the positioning of an arm. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct ArmPosData Fields HandBone The hand transform. Declaration public Transform HandBone Field Value Type Description Transform LowerArmBone The lower arm transform. Declaration public Transform LowerArmBone Field Value Type Description Transform LowerArmToHandAxis The axis of the lower arm to the hand. Declaration public Vector3 LowerArmToHandAxis Field Value Type Description Vector3 ShoulderBone The shoulder transform. Declaration public Transform ShoulderBone Field Value Type Description Transform ShoulderLocalPos The local position of the shoulder. Declaration public Vector3 ShoulderLocalPos Field Value Type Description Vector3 ShoulderLocalRot The local rotation of the shoulder. Declaration public Quaternion ShoulderLocalRot Field Value Type Description Quaternion UpperArmBone The upper arm transform. Declaration public Transform UpperArmBone Field Value Type Description Transform Properties IsInitialized Indicates if initialized or not. Declaration public readonly bool IsInitialized { get; } Property Value Type Description System.Boolean Methods ClearTransformData() Resets all tracked transforms to null. Declaration public void ClearTransformData()"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationUtilities.BoneAdjustmentData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationUtilities.BoneAdjustmentData.html",
    "title": "Struct DeformationUtilities.BoneAdjustmentData | Unity-Movement Documentation",
    "keywords": "Struct DeformationUtilities.BoneAdjustmentData Information about an adjustment to be applied on a bone. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct BoneAdjustmentData Fields Adjustment The adjustment to be applied to the bone. Declaration public Quaternion Adjustment Field Value Type Description Quaternion Bone The HumanBodyBones bone. Declaration public HumanBodyBones Bone Field Value Type Description HumanBodyBones ChildBone1 The first child bone. Will be HumanBodyBones.LastBone if invalid. The Unity Humanoid has only three possible relevant child bones for deformation: two arms or two legs, and a child spine bone. Declaration public HumanBodyBones ChildBone1 Field Value Type Description HumanBodyBones ChildBone2 The second child bone. Will be HumanBodyBones.LastBone if invalid. The Unity Humanoid has only three possible relevant child bones for deformation: two arms or two legs, and a child spine bone. Declaration public HumanBodyBones ChildBone2 Field Value Type Description HumanBodyBones ChildBone3 The third child bone. Will be HumanBodyBones.LastBone if invalid. The Unity Humanoid has only three possible relevant child bones for deformation: two arms or two legs, and a child spine bone. Declaration public HumanBodyBones ChildBone3 Field Value Type Description HumanBodyBones"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationUtilities.BonePairData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationUtilities.BonePairData.html",
    "title": "Struct DeformationUtilities.BonePairData | Unity-Movement Documentation",
    "keywords": "Struct DeformationUtilities.BonePairData Information about the distance between two bone transforms. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct BonePairData Fields Distance The distance between the start and end bones. Declaration public float Distance Field Value Type Description System.Single EndBone The end bone transform. Declaration public Transform EndBone Field Value Type Description Transform EndBoneLocalOffsetFromStart Start to end vector of original character, in local space of end bone. Declaration public Vector3 EndBoneLocalOffsetFromStart Field Value Type Description Vector3 HeightProportion The proportion of this bone relative to the height. Declaration public float HeightProportion Field Value Type Description System.Single LimbProportion The proportion of this bone relative to its limb. Declaration public float LimbProportion Field Value Type Description System.Single StartBone The start bone transform. Declaration public Transform StartBone Field Value Type Description Transform"
  },
  "api/Oculus.Movement.AnimationRigging.DeformationUtilities.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationUtilities.html",
    "title": "Class DeformationUtilities | Unity-Movement Documentation",
    "keywords": "Class DeformationUtilities Provides convenient algorithms to assist with deformation work. Inheritance System.Object DeformationUtilities Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public static class DeformationUtilities Methods FindChildHumanBodyBones(Animator, HumanBodyBones, Int32) Tries to find the child HumanBodyBones according to a fixed mapping. If the bone child index is not found in the mapping, go through the bones in order. Declaration public static HumanBodyBones FindChildHumanBodyBones(Animator animator, HumanBodyBones target, int childIndex = 0) Parameters Type Name Description Animator animator The animator to check for valid bones in the mapping. HumanBodyBones target The target HumanBodyBones to find the child HumanBodyBone. System.Int32 childIndex The optional childIndex, if the target HumanBodyBone has multiple children. Returns Type Description HumanBodyBones HumanBodyBones corresponding to the child index of the target HumanBodyBones. GetDeformationBoneAdjustments(Animator, RestPoseObjectHumanoid) Returns bone adjustments required for the deformation constraint. Declaration public static DeformationUtilities.BoneAdjustmentData[] GetDeformationBoneAdjustments(Animator animator, RestPoseObjectHumanoid restPoseObject) Parameters Type Name Description Animator animator The animator to calculate bone adjustments. RestPoseObjectHumanoid restPoseObject The rest pose object to calculate bone adjustments. Returns Type Description DeformationUtilities.BoneAdjustmentData [] The array of bone adjustments. GetJointAdjustments(Animator, RestPoseObjectHumanoid, FullBodyDeformationConstraint) Returns joint adjustments required for retargeting. Declaration public static JointAdjustment[] GetJointAdjustments(Animator animator, RestPoseObjectHumanoid restPoseObject, FullBodyDeformationConstraint constraint = null) Parameters Type Name Description Animator animator The animator to calculate joint adjustments. RestPoseObjectHumanoid restPoseObject The rest pose object to calculate joint adjustments. FullBodyDeformationConstraint constraint The optional deformation constraint for cached data. Returns Type Description JointAdjustment [] The array of joint adjustments. GetJointPositionSquashStretch(Vector3, Vector3, Vector3, Single, Single) When offseting a joint, limit it by stretch and squash amounts. Declaration public static Vector3 GetJointPositionSquashStretch(Vector3 jointTargetPos, Vector3 currentJointPosition, Vector3 squashStretchReferencePosition, float stretchLimit, float squashLimit) Parameters Type Name Description Vector3 jointTargetPos Target joint position. Vector3 currentJointPosition Current joint position. Vector3 squashStretchReferencePosition Reference position to measure squash or stretch against. System.Single stretchLimit Stretch limit. System.Single squashLimit Squash limit. Returns Type Description Vector3 Restricted joint position."
  },
  "api/Oculus.Movement.AnimationRigging.DeformationUtilities.LegPosData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.DeformationUtilities.LegPosData.html",
    "title": "Struct DeformationUtilities.LegPosData | Unity-Movement Documentation",
    "keywords": "Struct DeformationUtilities.LegPosData Information about the positioning of a leg. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct LegPosData Fields FootBone The foot transform. Declaration public Transform FootBone Field Value Type Description Transform FootLocalRot The local rotation of the foot. Declaration public Quaternion FootLocalRot Field Value Type Description Quaternion HipsBone The hips transform. Declaration public Transform HipsBone Field Value Type Description Transform LowerLegBone The lower leg transform. Declaration public Transform LowerLegBone Field Value Type Description Transform ToesBone The toes transform. Declaration public Transform ToesBone Field Value Type Description Transform ToesLocalPos The local position of the toes. Declaration public Vector3 ToesLocalPos Field Value Type Description Vector3 UpperLegBone The upper leg transform. Declaration public Transform UpperLegBone Field Value Type Description Transform Properties IsInitialized Indicates if initialized or not. Declaration public readonly bool IsInitialized { get; } Property Value Type Description System.Boolean Methods ClearTransformData() Resets all tracked transforms to null. Declaration public void ClearTransformData()"
  },
  "api/Oculus.Movement.AnimationRigging.EditorPrefsBool.html": {
    "href": "api/Oculus.Movement.AnimationRigging.EditorPrefsBool.html",
    "title": "Class EditorPrefsBool | Unity-Movement Documentation",
    "keywords": "Class EditorPrefsBool Saves a bool value to editor prefs. Inheritance System.Object EditorPrefsBool Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class EditorPrefsBool Properties Value Get/Set the value of this editor preference. Declaration public bool Value { get; set; } Property Value Type Description System.Boolean Methods Create<T>(String, Boolean) Creates a new editor prefs bool to be saved. Declaration public static EditorPrefsBool Create<T>(string name, bool initialValue) Parameters Type Name Description System.String name The name of the editor prefs entry. System.Boolean initialValue The initial value of the editor prefs bool. Returns Type Description EditorPrefsBool Type Parameters Name Description T The class for this specific editor prefs."
  },
  "api/Oculus.Movement.AnimationRigging.ExternalBoneTargets.BoneTarget.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ExternalBoneTargets.BoneTarget.html",
    "title": "Class ExternalBoneTargets.BoneTarget | Unity-Movement Documentation",
    "keywords": "Class ExternalBoneTargets.BoneTarget A retargeted bone target. Inheritance System.Object ExternalBoneTargets.BoneTarget Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoneTarget Fields HumanBodyBone The human body bone representation of this bone. Declaration public HumanBodyBones HumanBodyBone Field Value Type Description HumanBodyBones Target The target transform to update with body tracking bone data. Declaration public Transform Target Field Value Type Description Transform Properties BoneId The OVRSkeleton.BoneId that must be tracked. Declaration public OVRSkeleton.BoneId BoneId { get; set; } Property Value Type Description OVRSkeleton.BoneId"
  },
  "api/Oculus.Movement.AnimationRigging.ExternalBoneTargets.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ExternalBoneTargets.html",
    "title": "Class ExternalBoneTargets | Unity-Movement Documentation",
    "keywords": "Class ExternalBoneTargets Update target transforms with bone data. Inheritance System.Object ExternalBoneTargets Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class ExternalBoneTargets Fields _boneTargets The array of bone targets. Declaration protected ExternalBoneTargets.BoneTarget[] _boneTargets Field Value Type Description ExternalBoneTargets.BoneTarget [] _enabled Enables or disables functionality. Declaration protected bool _enabled Field Value Type Description System.Boolean _fullBody Is it full body (or not). Declaration protected bool _fullBody Field Value Type Description System.Boolean Properties BoneTargetsArray The array of bone targets. Declaration public ExternalBoneTargets.BoneTarget[] BoneTargetsArray { get; set; } Property Value Type Description ExternalBoneTargets.BoneTarget [] Enabled Enables or disables functionality. Declaration public bool Enabled { get; set; } Property Value Type Description System.Boolean FullBody Is it full body (or not). Declaration public bool FullBody { get; set; } Property Value Type Description System.Boolean UseJobs Whether to C# jobs or not. Declaration public bool UseJobs { get; set; } Property Value Type Description System.Boolean Methods CleanUp() Cleans up anything that needs to be manually deallocated. Declaration public void CleanUp() Complete() Complete the job. Declaration public void Complete() ProcessSkeleton(OVRSkeleton) Update the bone targets with the bone transform data. Declaration public void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationConstraint.html",
    "title": "Class FullBodyDeformationConstraint | Unity-Movement Documentation",
    "keywords": "Class FullBodyDeformationConstraint FullBodyDeformation constraint. Inheritance System.Object FullBodyDeformationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class FullBodyDeformationConstraint : RigConstraint<FullBodyDeformationJob, FullBodyDeformationData, FullBodyDeformationJobBinder<FullBodyDeformationData>>, IOVRSkeletonConstraint Methods CalculateBoneData() Initializes meta data. Declaration public void CalculateBoneData() ReadJSONConfigFromFile(String) Read JSON config from file. Declaration public void ReadJSONConfigFromFile(string filePath) Parameters Type Name Description System.String filePath File path to read from. RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() WriteJSONConfigToFile(String) Write JSON config to file. Declaration public void WriteJSONConfigToFile(string filePath) Parameters Type Name Description System.String filePath File path to write to. Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationConstraintEditor.html",
    "title": "Class FullBodyDeformationConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class FullBodyDeformationConstraintEditor Custom editor for the full body deformation constraint. Inheritance System.Object FullBodyDeformationConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class FullBodyDeformationConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.DeformationBodyType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.DeformationBodyType.html",
    "title": "Enum FullBodyDeformationData.DeformationBodyType | Unity-Movement Documentation",
    "keywords": "Enum FullBodyDeformationData.DeformationBodyType The deformation body type. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum DeformationBodyType Fields Name Description FullBody The body type used for deformation is the full body. UpperBody The body type used for deformation is the upper body."
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.html",
    "title": "Struct FullBodyDeformationData | Unity-Movement Documentation",
    "keywords": "Struct FullBodyDeformationData FullBodyDeformation data used by the FullBodyDeformation job. Implements the FullBodyDeformation data interface. Implements IFullBodyDeformationData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct FullBodyDeformationData : IFullBodyDeformationData Properties AffectArmsBySpineCorrection Declaration public bool AffectArmsBySpineCorrection { get; set; } Property Value Type Description System.Boolean AlignFeetWeight Declaration public float AlignFeetWeight { get; set; } Property Value Type Description System.Single AlignLeftLegWeight Declaration public float AlignLeftLegWeight { get; set; } Property Value Type Description System.Single AlignRightLegWeight Declaration public float AlignRightLegWeight { get; set; } Property Value Type Description System.Single ArmLengthMultiplier Declaration public float ArmLengthMultiplier { get; set; } Property Value Type Description System.Single ChestAlignmentWeight Declaration public float ChestAlignmentWeight { get; set; } Property Value Type Description System.Single DeformationBodyTypeField Declaration public FullBodyDeformationData.DeformationBodyType DeformationBodyTypeField { get; set; } Property Value Type Description FullBodyDeformationData.DeformationBodyType LeftArmWeight Declaration public float LeftArmWeight { get; set; } Property Value Type Description System.Single LeftHandWeight Declaration public float LeftHandWeight { get; set; } Property Value Type Description System.Single LeftShoulderWeight Declaration public float LeftShoulderWeight { get; set; } Property Value Type Description System.Single LeftToesWeight Declaration public float LeftToesWeight { get; set; } Property Value Type Description System.Single OriginalSpineBoneCount Declaration public int OriginalSpineBoneCount { get; set; } Property Value Type Description System.Int32 OriginalSpineFixRotations Declaration public bool OriginalSpineFixRotations { get; set; } Property Value Type Description System.Boolean OriginalSpinePositionsWeight Declaration public float OriginalSpinePositionsWeight { get; set; } Property Value Type Description System.Single OriginalSpineUseHipsToHeadToScale Declaration public bool OriginalSpineUseHipsToHeadToScale { get; set; } Property Value Type Description System.Boolean RightArmWeight Declaration public float RightArmWeight { get; set; } Property Value Type Description System.Single RightHandWeight Declaration public float RightHandWeight { get; set; } Property Value Type Description System.Single RightShoulderWeight Declaration public float RightShoulderWeight { get; set; } Property Value Type Description System.Single RightToesWeight Declaration public float RightToesWeight { get; set; } Property Value Type Description System.Single ShoulderRollWeight Declaration public float ShoulderRollWeight { get; set; } Property Value Type Description System.Single ShouldersHeightReductionWeight Declaration public float ShouldersHeightReductionWeight { get; set; } Property Value Type Description System.Single ShouldersWidthReductionWeight Declaration public float ShouldersWidthReductionWeight { get; set; } Property Value Type Description System.Single SpineLowerAlignmentWeight Declaration public float SpineLowerAlignmentWeight { get; set; } Property Value Type Description System.Single SpineTranslationCorrectionTypeField Declaration public FullBodyDeformationData.SpineTranslationCorrectionType SpineTranslationCorrectionTypeField { get; set; } Property Value Type Description FullBodyDeformationData.SpineTranslationCorrectionType SpineUpperAlignmentWeight Declaration public float SpineUpperAlignmentWeight { get; set; } Property Value Type Description System.Single SquashLimit Declaration public float SquashLimit { get; set; } Property Value Type Description System.Single StretchLimit Declaration public float StretchLimit { get; set; } Property Value Type Description System.Single Methods AssignAnimator(Animator) Assign the Animator. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator The Animator component. AssignOVRCustomSkeleton(OVRCustomSkeleton) Assign the OVR Custom Skeleton. Declaration public void AssignOVRCustomSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRCustomSkeleton component. ClearTransformData() Clears all transform data stored. Declaration public void ClearTransformData() InitializeStartingScale() Computes initial starting scale. Declaration public void InitializeStartingScale() IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration public bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not. SetUpAdjustments(RestPoseObjectHumanoid) Try to set up adjustments. Declaration public void SetUpAdjustments(RestPoseObjectHumanoid restPoseObject) Parameters Type Name Description RestPoseObjectHumanoid restPoseObject The rest pose object used to calculate adjustments. SetUpBonePairs() Sets up upper bone parts after all bones have been found. Declaration public void SetUpBonePairs() SetUpBoneTargets(Transform) Try to set up bone targets. Declaration public void SetUpBoneTargets(Transform setupParent) Parameters Type Name Description Transform setupParent The parent for the bone targets. SetUpHipsAndHeadBones() Sets up hips and head bones. Declaration public void SetUpHipsAndHeadBones() SetUpLeftArmData() Sets up left arm data. Declaration public void SetUpLeftArmData() SetUpLeftLegData() Sets up left leg data. Declaration public void SetUpLeftLegData() SetUpRightArmData() Sets up right arm data. Declaration public void SetUpRightArmData() SetUpRightLegData() Sets up right leg data. Declaration public void SetUpRightLegData() Explicit Interface Implementations IFullBodyDeformationData.AffectArmsBySpineCorrection Affect arms by spine correction bool property. Declaration readonly string IFullBodyDeformationData.AffectArmsBySpineCorrection { get; } Returns Type Description System.String IFullBodyDeformationData.AlignFeetWeightFloatProperty Align feet weight float property. Declaration readonly string IFullBodyDeformationData.AlignFeetWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ArmLengthMultiplierFloatProperty Allows stretching arms. WARNING! EXPERIMENTAL! increasing this value might cause inaccuracy wrt to body tracking. Declaration readonly string IFullBodyDeformationData.ArmLengthMultiplierFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.BodyType The deformation body type for the character. Declaration readonly int IFullBodyDeformationData.BodyType { get; } Returns Type Description System.Int32 IFullBodyDeformationData.BoneAdjustments The adjustment info for the bones. Declaration readonly BoneAdjustmentData[] IFullBodyDeformationData.BoneAdjustments { get; } Returns Type Description BoneAdjustmentData [] IFullBodyDeformationData.BonePairs The position info for the bone pairs used for FullBodyDeformation. Declaration readonly BonePairData[] IFullBodyDeformationData.BonePairs { get; } Returns Type Description BonePairData [] IFullBodyDeformationData.ChestAlignmentWeightFloatProperty The chest alignment weight float property. Declaration readonly string IFullBodyDeformationData.ChestAlignmentWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ConstraintAnimator The Animator component for the character. Declaration readonly Animator IFullBodyDeformationData.ConstraintAnimator { get; } Returns Type Description Animator IFullBodyDeformationData.ConstraintCustomSkeleton The OVRCustomSkeleton component for the character. Declaration readonly OVRCustomSkeleton IFullBodyDeformationData.ConstraintCustomSkeleton { get; } Returns Type Description OVRCustomSkeleton IFullBodyDeformationData.DeformationBodyTypeIntProperty The deformation body type int property. Declaration readonly string IFullBodyDeformationData.DeformationBodyTypeIntProperty { get; } Returns Type Description System.String IFullBodyDeformationData.FeetToToesBoneTargets The array of transform targets from the feet to the toes bones. Declaration readonly Transform[] IFullBodyDeformationData.FeetToToesBoneTargets { get; } Returns Type Description Transform [] IFullBodyDeformationData.HipsToFootDistance The distance between the hips and foot bones. Declaration readonly float IFullBodyDeformationData.HipsToFootDistance { get; } Returns Type Description System.Single IFullBodyDeformationData.HipsToHeadBones The array of transforms from the hips to the head bones. Declaration readonly Transform[] IFullBodyDeformationData.HipsToHeadBones { get; } Returns Type Description Transform [] IFullBodyDeformationData.HipsToHeadBoneTargets The array of transform targets from the hips to the head bones. Declaration readonly Transform[] IFullBodyDeformationData.HipsToHeadBoneTargets { get; } Returns Type Description Transform [] IFullBodyDeformationData.HipsToHeadDistance The distance between the hips and head bones. Declaration readonly float IFullBodyDeformationData.HipsToHeadDistance { get; } Returns Type Description System.Single IFullBodyDeformationData.LeftArm The position info for the left arm. Declaration readonly ArmPosData IFullBodyDeformationData.LeftArm { get; } Returns Type Description ArmPosData IFullBodyDeformationData.LeftArmWeightFloatProperty The left arm weight float property. Declaration readonly string IFullBodyDeformationData.LeftArmWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.LeftHandWeightFloatProperty The left hand weight float property. Declaration readonly string IFullBodyDeformationData.LeftHandWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.LeftLeg The position info for the left leg. Declaration readonly LegPosData IFullBodyDeformationData.LeftLeg { get; } Returns Type Description LegPosData IFullBodyDeformationData.LeftLegWeightFloatProperty The left leg weight float property. Declaration readonly string IFullBodyDeformationData.LeftLegWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.LeftShoulderWeightFloatProperty The left shoulder weight float property. Declaration readonly string IFullBodyDeformationData.LeftShoulderWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.LeftToesWeightFloatProperty The left toes weight float property. Declaration readonly string IFullBodyDeformationData.LeftToesWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.OriginalSpineBoneCountIntProperty Control how many bones to straighten. WARNING! EXPERIMENTAL! Declaration readonly string IFullBodyDeformationData.OriginalSpineBoneCountIntProperty { get; } Returns Type Description System.String IFullBodyDeformationData.OriginalSpineFixRotationsBoolProperty Declaration readonly string IFullBodyDeformationData.OriginalSpineFixRotationsBoolProperty { get; } Returns Type Description System.String IFullBodyDeformationData.OriginalSpinePositionsWeightProperty Attempts to match the original spine positions. Excludes heads and head. WARNING! EXPERIMENTAL!: increasing this value might cause inaccuracy wrt to body tracking. Declaration readonly string IFullBodyDeformationData.OriginalSpinePositionsWeightProperty { get; } Returns Type Description System.String IFullBodyDeformationData.OriginalSpineUseHipsToHeadScaleBoolProperty Indicates if the original spine positions should scale based on the hips to head distance (proportionally). WARNING! EXPERIMENTAL! Declaration readonly string IFullBodyDeformationData.OriginalSpineUseHipsToHeadScaleBoolProperty { get; } Returns Type Description System.String IFullBodyDeformationData.RightArm The position info for the right arm. Declaration readonly ArmPosData IFullBodyDeformationData.RightArm { get; } Returns Type Description ArmPosData IFullBodyDeformationData.RightArmWeightFloatProperty The right arm weight float property. Declaration readonly string IFullBodyDeformationData.RightArmWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.RightHandWeightFloatProperty The right hand weight float property. Declaration readonly string IFullBodyDeformationData.RightHandWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.RightLeg The position info for the right leg. Declaration readonly LegPosData IFullBodyDeformationData.RightLeg { get; } Returns Type Description LegPosData IFullBodyDeformationData.RightLegWeightFloatProperty The right leg weight float property. Declaration readonly string IFullBodyDeformationData.RightLegWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.RightShoulderWeightFloatProperty The right shoulder weight float property. Declaration readonly string IFullBodyDeformationData.RightShoulderWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.RightToesWeightFloatProperty The right toes weight float property. Declaration readonly string IFullBodyDeformationData.RightToesWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ShoulderRollFloatProperty Declaration readonly string IFullBodyDeformationData.ShoulderRollFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ShouldersHeightReductionWeightFloatProperty The shoulders height reduction weight float property. Declaration readonly string IFullBodyDeformationData.ShouldersHeightReductionWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ShouldersWidthReductionWeightFloatProperty The shoulders width reduction weight float property. Declaration readonly string IFullBodyDeformationData.ShouldersWidthReductionWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.ShouldUpdate If true, update this job. Declaration bool IFullBodyDeformationData.ShouldUpdate { get; set; } Returns Type Description System.Boolean IFullBodyDeformationData.SpineCorrectionType The type of spine translation correction that should be applied. Declaration readonly int IFullBodyDeformationData.SpineCorrectionType { get; } Returns Type Description System.Int32 IFullBodyDeformationData.SpineCorrectionTypeIntProperty The spine correction type int property. Declaration readonly string IFullBodyDeformationData.SpineCorrectionTypeIntProperty { get; } Returns Type Description System.String IFullBodyDeformationData.SpineLowerAlignmentWeightFloatProperty The spine alignment weight float property. Declaration readonly string IFullBodyDeformationData.SpineLowerAlignmentWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.SpineUpperAlignmentWeightFloatProperty The spine upper alignment weight float property. Declaration readonly string IFullBodyDeformationData.SpineUpperAlignmentWeightFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.SquashLimitFloatProperty Restricts how much the character should be squashed. WARNING: restricting too much will prevent the character from tracking the body accurately. Declaration readonly string IFullBodyDeformationData.SquashLimitFloatProperty { get; } Returns Type Description System.String IFullBodyDeformationData.StartingScale The starting scale of the character, taken from the animator transform. Declaration readonly Vector3 IFullBodyDeformationData.StartingScale { get; } Returns Type Description Vector3 IFullBodyDeformationData.StretchLimitFloatProperty Restricts how much the character should be stretched. WARNING: restricting too much will prevent the character from tracking the body accurately. Declaration readonly string IFullBodyDeformationData.StretchLimitFloatProperty { get; } Returns Type Description System.String Implements IFullBodyDeformationData"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.SpineTranslationCorrectionType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationData.SpineTranslationCorrectionType.html",
    "title": "Enum FullBodyDeformationData.SpineTranslationCorrectionType | Unity-Movement Documentation",
    "keywords": "Enum FullBodyDeformationData.SpineTranslationCorrectionType The spine translation correction type. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum SpineTranslationCorrectionType Fields Name Description AccurateHead Accurately place the head bone when applying spine translation correction. AccurateHips Accurately place the hips bone when applying spine translation correction. AccurateHipsAndHead Accurately place the hips and head bone when applying spine translation correction. None No spine translation correction applied."
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.BoneDeformationAdjustmentData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.BoneDeformationAdjustmentData.html",
    "title": "Struct FullBodyDeformationJob.BoneDeformationAdjustmentData | Unity-Movement Documentation",
    "keywords": "Struct FullBodyDeformationJob.BoneDeformationAdjustmentData Bone adjustment data for the FullBodyDeformation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct BoneDeformationAdjustmentData Fields ChildBone1 The first child bone transform handle if present. Declaration public ReadWriteTransformHandle ChildBone1 Field Value Type Description ReadWriteTransformHandle ChildBone2 The second child bone transform handle if present. Declaration public ReadWriteTransformHandle ChildBone2 Field Value Type Description ReadWriteTransformHandle ChildBone3 The third child bone transform handle if present. Declaration public ReadWriteTransformHandle ChildBone3 Field Value Type Description ReadWriteTransformHandle MainBone The main bone to be adjusted. Declaration public ReadWriteTransformHandle MainBone Field Value Type Description ReadWriteTransformHandle RotationAdjustment The rotation adjustment amount. Declaration public Quaternion RotationAdjustment Field Value Type Description Quaternion SetPosition1 True if the position should also be set when restoring the first child transform data. Declaration public bool SetPosition1 Field Value Type Description System.Boolean SetPosition2 True if the position should also be set when restoring the second child transform data. Declaration public bool SetPosition2 Field Value Type Description System.Boolean SetPosition3 True if the position should also be set when restoring the third child transform data. Declaration public bool SetPosition3 Field Value Type Description System.Boolean"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.BoneDeformationAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.BoneDeformationAnimationData.html",
    "title": "Struct FullBodyDeformationJob.BoneDeformationAnimationData | Unity-Movement Documentation",
    "keywords": "Struct FullBodyDeformationJob.BoneDeformationAnimationData Bone animation data for the FullBodyDeformation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct BoneDeformationAnimationData Fields Distance The distance between the start and end bone transforms. Declaration public float Distance Field Value Type Description System.Single HeightProportion The proportion of this bone relative to the height. Declaration public float HeightProportion Field Value Type Description System.Single LimbProportion The proportion of this bone relative to its limb. Declaration public float LimbProportion Field Value Type Description System.Single"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJob.html",
    "title": "Struct FullBodyDeformationJob | Unity-Movement Documentation",
    "keywords": "Struct FullBodyDeformationJob The FullBodyDeformation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct FullBodyDeformationJob Fields AffectArmsBySpineCorrection True if the arms should be affected by spine correction. Declaration public BoolProperty AffectArmsBySpineCorrection Field Value Type Description BoolProperty AlignFeetWeight The weight for aligning the feet. Declaration public FloatProperty AlignFeetWeight Field Value Type Description FloatProperty ArmLengthMultiplier Arm length multiplier. Advanced feature. Declaration public FloatProperty ArmLengthMultiplier Field Value Type Description FloatProperty BodyType The deformation body type. Declaration public IntProperty BodyType Field Value Type Description IntProperty BoneAdjustData The array of bone adjustment data. Declaration public NativeArray<FullBodyDeformationJob.BoneDeformationAdjustmentData> BoneAdjustData Field Value Type Description NativeArray < FullBodyDeformationJob.BoneDeformationAdjustmentData > BoneAnimData The array of bone animation data for the start and end bone pairs. Declaration public NativeArray<FullBodyDeformationJob.BoneDeformationAnimationData> BoneAnimData Field Value Type Description NativeArray < FullBodyDeformationJob.BoneDeformationAnimationData > BoneDirections The array of directions between the start and end bones. Declaration public NativeArray<Vector3> BoneDirections Field Value Type Description NativeArray < Vector3 > CachedFixedHipsToHeadPositions Declaration public NativeArray<Vector3> CachedFixedHipsToHeadPositions Field Value Type Description NativeArray < Vector3 > CachedFixedHipsToHeadRotations Declaration public NativeArray<Quaternion> CachedFixedHipsToHeadRotations Field Value Type Description NativeArray < Quaternion > ChestAlignmentWeight The weight for the chest fixup. Declaration public FloatProperty ChestAlignmentWeight Field Value Type Description FloatProperty ChestIndex The chest index in the bone pair data. Declaration public int ChestIndex Field Value Type Description System.Int32 EndBoneOffsetsLocal Original bone directions of the character. Declaration public NativeArray<Vector3> EndBoneOffsetsLocal Field Value Type Description NativeArray < Vector3 > EndBones The array of end bones for FullBodyDeformation. Declaration public NativeArray<ReadWriteTransformHandle> EndBones Field Value Type Description NativeArray < ReadWriteTransformHandle > FeetToToesBoneTargets The inclusive array of bone targets from the feet to the toes. Declaration public NativeArray<ReadOnlyTransformHandle> FeetToToesBoneTargets Field Value Type Description NativeArray < ReadOnlyTransformHandle > HeadBone The ReadWrite transform handle for the head bone. Declaration public ReadWriteTransformHandle HeadBone Field Value Type Description ReadWriteTransformHandle HeadIndex The head index in the bone pair data. Declaration public int HeadIndex Field Value Type Description System.Int32 HipsBone The ReadWrite transform handle for the hips bone. Declaration public ReadWriteTransformHandle HipsBone Field Value Type Description ReadWriteTransformHandle HipsIndex The hips index in the bone pair data. Declaration public int HipsIndex Field Value Type Description System.Int32 HipsToHeadBones The inclusive array of bones from the hips to the head. Declaration public NativeArray<ReadWriteTransformHandle> HipsToHeadBones Field Value Type Description NativeArray < ReadWriteTransformHandle > HipsToHeadBoneTargets The inclusive array of bone targets from the hips to the head. Declaration public NativeArray<ReadOnlyTransformHandle> HipsToHeadBoneTargets Field Value Type Description NativeArray < ReadOnlyTransformHandle > LeftArmOffsetWeight The weight for the left arm offset. Declaration public FloatProperty LeftArmOffsetWeight Field Value Type Description FloatProperty LeftFootBone The ReadWrite transform handle for the left foot bone. Declaration public ReadWriteTransformHandle LeftFootBone Field Value Type Description ReadWriteTransformHandle LeftFootLocalRot The left foot local rotation. Declaration public Quaternion LeftFootLocalRot Field Value Type Description Quaternion LeftHandBone The ReadWrite transform handle for the left hand bone. Declaration public ReadWriteTransformHandle LeftHandBone Field Value Type Description ReadWriteTransformHandle LeftHandOffsetWeight The weight for the left hand offset. Declaration public FloatProperty LeftHandOffsetWeight Field Value Type Description FloatProperty LeftLegOffsetWeight The weight for the left leg offset. Declaration public FloatProperty LeftLegOffsetWeight Field Value Type Description FloatProperty LeftLowerArmBone The ReadWrite transform handle for the left lower arm bone. Declaration public ReadWriteTransformHandle LeftLowerArmBone Field Value Type Description ReadWriteTransformHandle LeftLowerLegBone The ReadWrite transform handle for the left lower leg bone. Declaration public ReadWriteTransformHandle LeftLowerLegBone Field Value Type Description ReadWriteTransformHandle LeftShoulderBone The ReadWrite transform handle for the left shoulder bone. Declaration public ReadWriteTransformHandle LeftShoulderBone Field Value Type Description ReadWriteTransformHandle LeftShoulderOffsetWeight The weight of the left shoulder offset. Declaration public FloatProperty LeftShoulderOffsetWeight Field Value Type Description FloatProperty LeftShoulderOriginalLocalPos The local position of the left shoulder. Declaration public Vector3 LeftShoulderOriginalLocalPos Field Value Type Description Vector3 LeftToesBone The ReadWrite transform handle for the left toes bone. Declaration public ReadWriteTransformHandle LeftToesBone Field Value Type Description ReadWriteTransformHandle LeftToesOffsetWeight The weight for the left toe. Declaration public FloatProperty LeftToesOffsetWeight Field Value Type Description FloatProperty LeftToesOriginalLocalPos The local position of the left toes. Declaration public Vector3 LeftToesOriginalLocalPos Field Value Type Description Vector3 LeftUpperArmBone The ReadWrite transform handle for the left upper arm bone. Declaration public ReadWriteTransformHandle LeftUpperArmBone Field Value Type Description ReadWriteTransformHandle LeftUpperLegBone The ReadWrite transform handle for the left upper leg bone. Declaration public ReadWriteTransformHandle LeftUpperLegBone Field Value Type Description ReadWriteTransformHandle LowerBodyProportion The lower body proportion. Declaration public float LowerBodyProportion Field Value Type Description System.Single LowerBodyTargetPositions The array of lower body target positions. Declaration public NativeArray<Vector3> LowerBodyTargetPositions Field Value Type Description NativeArray < Vector3 > OriginalHipsToHeadDistance Hips to head distance on original character. Declaration public float OriginalHipsToHeadDistance Field Value Type Description System.Single OriginalHipsToPositions Declaration public NativeArray<Vector3> OriginalHipsToPositions Field Value Type Description NativeArray < Vector3 > OriginalSpineBoneCount Number of bones to fix when straightening the spine. Declaration public IntProperty OriginalSpineBoneCount Field Value Type Description IntProperty OriginalSpineFixRotations Allows correcting the rotations of the spine too when using original spine positions. Declaration public BoolProperty OriginalSpineFixRotations Field Value Type Description BoolProperty OriginalSpinePositionsWeight Original spine positions weight. Declaration public FloatProperty OriginalSpinePositionsWeight Field Value Type Description FloatProperty OriginalSpineUseHipsToHeadToScale Use the current hips to head to scale original spine positions. Declaration public BoolProperty OriginalSpineUseHipsToHeadToScale Field Value Type Description BoolProperty RightArmOffsetWeight The weight for the right arm offset. Declaration public FloatProperty RightArmOffsetWeight Field Value Type Description FloatProperty RightFootBone The ReadWrite transform handle for the right foot bone. Declaration public ReadWriteTransformHandle RightFootBone Field Value Type Description ReadWriteTransformHandle RightFootLocalRot The right foot local rotation. Declaration public Quaternion RightFootLocalRot Field Value Type Description Quaternion RightHandBone The ReadWrite transform handle for the right hand bone. Declaration public ReadWriteTransformHandle RightHandBone Field Value Type Description ReadWriteTransformHandle RightHandOffsetWeight The weight for the right hand offset. Declaration public FloatProperty RightHandOffsetWeight Field Value Type Description FloatProperty RightLegOffsetWeight The weight for the right leg offset. Declaration public FloatProperty RightLegOffsetWeight Field Value Type Description FloatProperty RightLowerArmBone The ReadWrite transform handle for the right lower arm bone. Declaration public ReadWriteTransformHandle RightLowerArmBone Field Value Type Description ReadWriteTransformHandle RightLowerLegBone The ReadWrite transform handle for the right lower leg bone. Declaration public ReadWriteTransformHandle RightLowerLegBone Field Value Type Description ReadWriteTransformHandle RightShoulderBone The ReadWrite transform handle for the right shoulder bone. Declaration public ReadWriteTransformHandle RightShoulderBone Field Value Type Description ReadWriteTransformHandle RightShoulderOffsetWeight The weight of the right shoulder offset. Declaration public FloatProperty RightShoulderOffsetWeight Field Value Type Description FloatProperty RightShoulderOriginalLocalPos The local position of the right shoulder. Declaration public Vector3 RightShoulderOriginalLocalPos Field Value Type Description Vector3 RightToesBone The ReadWrite transform handle for the right toes bone. Declaration public ReadWriteTransformHandle RightToesBone Field Value Type Description ReadWriteTransformHandle RightToesOffsetWeight The weight for the right toe. Declaration public FloatProperty RightToesOffsetWeight Field Value Type Description FloatProperty RightToesOriginalLocalPos The local position of the right toes. Declaration public Vector3 RightToesOriginalLocalPos Field Value Type Description Vector3 RightUpperArmBone The ReadWrite transform handle for the right upper arm bone. Declaration public ReadWriteTransformHandle RightUpperArmBone Field Value Type Description ReadWriteTransformHandle RightUpperLegBone The ReadWrite transform handle for the right upper leg bone. Declaration public ReadWriteTransformHandle RightUpperLegBone Field Value Type Description ReadWriteTransformHandle ScaleFactor The array containing 1 element for the current scale ratio. Declaration public NativeArray<Vector3> ScaleFactor Field Value Type Description NativeArray < Vector3 > ShoulderRollWeight Shoulder roll weight. Declaration public FloatProperty ShoulderRollWeight Field Value Type Description FloatProperty ShouldersHeightReductionWeight The weight to reduce the height of the shoulders. Declaration public FloatProperty ShouldersHeightReductionWeight Field Value Type Description FloatProperty ShouldersParentIndex The index of the spine bone that is the parent of the shoulders. Declaration public int ShouldersParentIndex Field Value Type Description System.Int32 ShouldersWidthReductionWeight The weight to reduce the width of the shoulders. Declaration public FloatProperty ShouldersWidthReductionWeight Field Value Type Description FloatProperty SpineCorrectionType The spine correction type. Declaration public IntProperty SpineCorrectionType Field Value Type Description IntProperty SpineLowerAlignmentWeight The weight for the spine lower fixup. Declaration public FloatProperty SpineLowerAlignmentWeight Field Value Type Description FloatProperty SpineLowerIndex The spine index in the bone pair data. Declaration public int SpineLowerIndex Field Value Type Description System.Int32 SpineUpperAlignmentWeight The weight for the spine upper fixup. Declaration public FloatProperty SpineUpperAlignmentWeight Field Value Type Description FloatProperty SpineUpperIndex The spine upper index in the bone pair data. Declaration public int SpineUpperIndex Field Value Type Description System.Int32 SquashLimit The limit for squashing characters. Declaration public FloatProperty SquashLimit Field Value Type Description FloatProperty StartBones The array of start bones for FullBodyDeformation. Declaration public NativeArray<ReadWriteTransformHandle> StartBones Field Value Type Description NativeArray < ReadWriteTransformHandle > StretchLimit The limit for stretching characters. Declaration public FloatProperty StretchLimit Field Value Type Description FloatProperty UpperBodyOffsets The array of upper body offsets. Declaration public NativeArray<Vector3> UpperBodyOffsets Field Value Type Description NativeArray < Vector3 > UpperBodyTargetPositions The array of upper body target positions. Declaration public NativeArray<Vector3> UpperBodyTargetPositions Field Value Type Description NativeArray < Vector3 > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty LeftShoulderOriginalLocalRot Declaration public Quaternion LeftShoulderOriginalLocalRot { readonly get; set; } Property Value Type Description Quaternion RightShoulderOriginalLocalRot Declaration public Quaternion RightShoulderOriginalLocalRot { readonly get; set; } Property Value Type Description Quaternion Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.FullBodyDeformationJobBinder-1.html",
    "title": "Class FullBodyDeformationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class FullBodyDeformationJobBinder<T> The FullBodyDeformation job binder. Inheritance System.Object FullBodyDeformationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class FullBodyDeformationJobBinder<T> : AnimationJobBinder<FullBodyDeformationJob, T> where T : struct, IAnimationJobData, IFullBodyDeformationData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override FullBodyDeformationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description FullBodyDeformationJob Destroy(FullBodyDeformationJob) Declaration public override void Destroy(FullBodyDeformationJob job) Parameters Type Name Description FullBodyDeformationJob job Update(FullBodyDeformationJob, ref T) Declaration public override void Update(FullBodyDeformationJob job, ref T data) Parameters Type Name Description FullBodyDeformationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingConstraint.html",
    "title": "Class GroundingConstraint | Unity-Movement Documentation",
    "keywords": "Class GroundingConstraint Grounding constraint. Inheritance System.Object GroundingConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class GroundingConstraint : RigConstraint<GroundingJob, GroundingData, GroundingJobBinder<GroundingData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingConstraintEditor.html",
    "title": "Class GroundingConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class GroundingConstraintEditor Custom editor for the twist distribution constraint. Inheritance System.Object GroundingConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class GroundingConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingData.html",
    "title": "Struct GroundingData | Unity-Movement Documentation",
    "keywords": "Struct GroundingData Grounding data used by grounding job. TODO: allow for case where rig can be enabled, this means sync transform arrays must not be null by default Implements IGroundingData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct GroundingData : IGroundingData Properties ComputedOffsets Declaration public readonly bool ComputedOffsets { get; } Property Value Type Description System.Boolean Methods AssignAnimator(Animator) Assign the Animator component. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator The Animator to be assigned. AssignHips(Transform) Assign the hips transform. Declaration public void AssignHips(Transform hipsTransform) Parameters Type Name Description Transform hipsTransform The hips transform to be assigned. AssignOVRSkeleton(OVRCustomSkeleton) Assign the OVR Skeleton component. Declaration public void AssignOVRSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRSkeleton to be assigned. ComputeOffsets() Computes offsets necessary for initialization. Declaration public void ComputeOffsets() FinishedMoving() Returns true if the move progress is lower than the threshold move progress. Declaration public bool FinishedMoving() Returns Type Description System.Boolean True if the joint has finished moving. GenerateThresholdMoveProgress() Generates a new value for the threshold move progress. Declaration public void GenerateThresholdMoveProgress() IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration public bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not. IsValid() Returns true if valid. Declaration public bool IsValid() Returns Type Description System.Boolean SetDefaultValues() Set default values. Declaration public void SetDefaultValues() Explicit Interface Implementations IGroundingData.ConstraintAnimator The Animator component for the character. Declaration readonly Animator IGroundingData.ConstraintAnimator { get; } Returns Type Description Animator IGroundingData.ConstraintSkeleton The original skeleton for the character. Declaration readonly OVRCustomSkeleton IGroundingData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton IGroundingData.FootRotationOffset The initial rotation offset for the feet. Declaration readonly Quaternion IGroundingData.FootRotationOffset { get; } Returns Type Description Quaternion IGroundingData.FootTarget The foot target for the leg. Declaration readonly Transform IGroundingData.FootTarget { get; } Returns Type Description Transform IGroundingData.GroundLayers The layers that the raycast will check against for grounding. Declaration readonly LayerMask IGroundingData.GroundLayers { get; } Returns Type Description LayerMask IGroundingData.GroundOffset The height offset from the grounded floor to be applied to the foot. Declaration readonly float IGroundingData.GroundOffset { get; } Returns Type Description System.Single IGroundingData.GroundRaycastDist The maximum distance that the raycast will go when checking for grounding. Declaration readonly float IGroundingData.GroundRaycastDist { get; } Returns Type Description System.Single IGroundingData.GroundRaycastHit The ground raycast hit. Declaration RaycastHit IGroundingData.GroundRaycastHit { get; set; } Returns Type Description RaycastHit IGroundingData.Hips The hips transform. Declaration readonly Transform IGroundingData.Hips { get; } Returns Type Description Transform IGroundingData.HipsTarget The hips target transform. Declaration readonly Transform IGroundingData.HipsTarget { get; } Returns Type Description Transform IGroundingData.KneeTarget The knee target for the leg. Declaration readonly Transform IGroundingData.KneeTarget { get; } Returns Type Description Transform IGroundingData.Leg The leg upper transform. Declaration readonly Transform IGroundingData.Leg { get; } Returns Type Description Transform IGroundingData.LegPosOffset The initial position offset for the leg. Declaration readonly Vector3 IGroundingData.LegPosOffset { get; } Returns Type Description Vector3 IGroundingData.LegRotOffset The initial rotation offset for the leg. Declaration readonly Quaternion IGroundingData.LegRotOffset { get; } Returns Type Description Quaternion IGroundingData.Pair Optional. The other leg's grounding constraint, used to check if this leg can move. Declaration readonly GroundingData IGroundingData.Pair { get; } Returns Type Description GroundingData IGroundingData.PreviousKneePos The previous knee position. Declaration Vector3 IGroundingData.PreviousKneePos { get; set; } Returns Type Description Vector3 IGroundingData.Progress The amount of move progress. Declaration float IGroundingData.Progress { set; } Returns Type Description System.Single IGroundingData.ShouldUpdate If true, update this job. Declaration bool IGroundingData.ShouldUpdate { get; set; } Returns Type Description System.Boolean IGroundingData.StepCurve The animation curve for evaluating the step height value. Declaration readonly AnimationCurve IGroundingData.StepCurve { get; } Returns Type Description AnimationCurve IGroundingData.StepDist The distance before the step is triggered. Declaration readonly float IGroundingData.StepDist { get; } Returns Type Description System.Single IGroundingData.StepHeight The height of the step taken. Declaration readonly float IGroundingData.StepHeight { get; } Returns Type Description System.Single IGroundingData.StepHeightScaleDist The maximum distance for the step height to not be scaled. Declaration readonly float IGroundingData.StepHeightScaleDist { get; } Returns Type Description System.Single IGroundingData.StepSpeed The speed of the step for the foot. Declaration readonly float IGroundingData.StepSpeed { get; } Returns Type Description System.Single Implements IGroundingData"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingJob.html",
    "title": "Struct GroundingJob | Unity-Movement Documentation",
    "keywords": "Struct GroundingJob The Grounding job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct GroundingJob Fields DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < System.Single > FootRotationOffset Declaration public NativeArray<Quaternion> FootRotationOffset Field Value Type Description NativeArray < Quaternion > FootTarget The foot target transform. Declaration public ReadWriteTransformHandle FootTarget Field Value Type Description ReadWriteTransformHandle Hips The hips transform. Declaration public ReadOnlyTransformHandle Hips Field Value Type Description ReadOnlyTransformHandle HipsTarget The hips target transform. Declaration public ReadOnlyTransformHandle HipsTarget Field Value Type Description ReadOnlyTransformHandle IsGrounding The array containing 1 element if the foot should be grounded. Declaration public NativeArray<bool> IsGrounding Field Value Type Description NativeArray < System.Boolean > IsMovable The array containing 1 element if the foot should be moving. Declaration public NativeArray<bool> IsMovable Field Value Type Description NativeArray < System.Boolean > KneeTarget The knee target transform. Declaration public ReadOnlyTransformHandle KneeTarget Field Value Type Description ReadOnlyTransformHandle Leg The leg transform. Declaration public ReadWriteTransformHandle Leg Field Value Type Description ReadWriteTransformHandle LegPosOffset The leg position offset from the parent. Declaration public Vector3 LegPosOffset Field Value Type Description Vector3 LegRotOffset The leg rotation offset from the parent. Declaration public Quaternion LegRotOffset Field Value Type Description Quaternion MoveProgress The array containing 1 element for the current move progress. Declaration public NativeArray<float> MoveProgress Field Value Type Description NativeArray < System.Single > StepHeight Declaration public float StepHeight Field Value Type Description System.Single StepHeightScaleDist Declaration public float StepHeightScaleDist Field Value Type Description System.Single StepProgress The array containing 1 element for the current step progress. Declaration public NativeArray<float> StepProgress Field Value Type Description NativeArray < System.Single > TargetFootPos The array containing 1 element for the target position for the foot. Declaration public NativeArray<Vector3> TargetFootPos Field Value Type Description NativeArray < Vector3 > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.GroundingJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.GroundingJobBinder-1.html",
    "title": "Class GroundingJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class GroundingJobBinder<T> The job binder for GroundingJob . Inheritance System.Object GroundingJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class GroundingJobBinder<T> : AnimationJobBinder<GroundingJob, T> where T : struct, IAnimationJobData, IGroundingData Type Parameters Name Description T The constraint data type, should be GroundingJob . Methods Create(Animator, ref T, Component) Declaration public override GroundingJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description GroundingJob Destroy(GroundingJob) Declaration public override void Destroy(GroundingJob job) Parameters Type Name Description GroundingJob job Update(GroundingJob, ref T) Declaration public override void Update(GroundingJob job, ref T data) Parameters Type Name Description GroundingJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraint.html",
    "title": "Class HipPinningConstraint | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraint Hip Pinning constraint. Inheritance System.Object HipPinningConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraint : RigConstraint<HipPinningJob, HipPinningData, HipPinningJobBinder<HipPinningData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraintEditor.html",
    "title": "Class HipPinningConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintEditor Custom editor for the hip pinning constraint. Inheritance System.Object HipPinningConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningConstraintTarget.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningConstraintTarget.html",
    "title": "Class HipPinningConstraintTarget | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintTarget Specifies a target to be used for hip pinning. Inheritance System.Object HipPinningConstraintTarget Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintTarget : MonoBehaviour Fields _chairCylinder The chair's cylinder transform. Declaration protected Transform _chairCylinder Field Value Type Description Transform _chairCylinderScaleMultiplier The chair's cylinder scale multiplier. Declaration protected float _chairCylinderScaleMultiplier Field Value Type Description System.Single _chairObject The game object containing the renderers for this hip pinning target. Declaration protected GameObject _chairObject Field Value Type Description GameObject _chairSeat The chair's seat transform. Declaration protected Transform _chairSeat Field Value Type Description Transform _hipTargetTransform The transform that the character's hip is positionally constrained to. Declaration protected Transform _hipTargetTransform Field Value Type Description Transform Properties ChairObject The game object containing the renderers for this hip pinning target. Declaration public GameObject ChairObject { get; } Property Value Type Description GameObject ChairSeatTransform The chair's seat transform. Declaration public Transform ChairSeatTransform { get; } Property Value Type Description Transform HipTargetInitialRotationOffset Returns the initial local rotation offset of the hips target. Declaration public Quaternion HipTargetInitialRotationOffset { get; } Property Value Type Description Quaternion HipTargetTransform The transform that the character's hip is positionally constrained to. Declaration public Transform HipTargetTransform { get; } Property Value Type Description Transform Methods UpdateHeight(Single) Update the height of the object that the hips will be constrained to. Declaration public void UpdateHeight(float heightAdjustment) Parameters Type Name Description System.Single heightAdjustment The height that this object will be adjusted to match."
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningData.html",
    "title": "Struct HipPinningData | Unity-Movement Documentation",
    "keywords": "Struct HipPinningData Hip Pinning data used by the hip pinning job. Implements the hip pinning data interface. Implements IHipPinningData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct HipPinningData : IHipPinningData Properties IsFirstFrame If true, this is the first frame that the newly created job is running on. Declaration public bool IsFirstFrame { get; set; } Property Value Type Description System.Boolean ObtainedProperReferences Indicates if the constraint has been set up or not. Declaration public readonly bool ObtainedProperReferences { get; } Property Value Type Description System.Boolean Methods AssignAnimator(Animator) Assign the animator component. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator The animator component to assign. AssignClosestHipPinningTarget(Vector3) Find and assign the closest hip pinning target to be the current hip pinning target. Declaration public void AssignClosestHipPinningTarget(Vector3 position) Parameters Type Name Description Vector3 position The position to check against. AssignOVRSkeleton(OVRCustomSkeleton) Assign the OVR Skeleton. Declaration public void AssignOVRSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRSkeleton CalibrateInitialHipHeight(Vector3) Calibrates the height of the hip pinning target to match the character's height. Declaration public void CalibrateInitialHipHeight(Vector3 position) Parameters Type Name Description Vector3 position The position of the character's hips. ClearSetupReferences() Resets all references. Declaration public void ClearSetupReferences() EnterHipPinningArea(HipPinningConstraintTarget) Event when the user enters a hip pinning area. Declaration public void EnterHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target ExitHipPinningArea(HipPinningConstraintTarget) Event when the user leaves a hip pinning area. Declaration public void ExitHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target GetHipTransform() Returns hip transform. Declaration public Transform GetHipTransform() Returns Type Description Transform Transform of the hip. GetIndexOfFirstBoneAboveHips() Retrieves index of bone above hips. Declaration public int GetIndexOfFirstBoneAboveHips() Returns Type Description System.Int32 Index of bone above hips. IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration public bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if so, false if not. SetInitialHipRotation() Allows storing the initial hip rotation. Declaration public void SetInitialHipRotation() SetUp() Run set-up if necessary. This is necessary for OVRCustomSkeleton-based characters, since the bones are re-parented at runtime and they need to be re-queried. Declaration public void SetUp() SetUpBoneReferences() Sets up bone references to the character. Declaration public void SetUpBoneReferences() Events OnEnterHipPinningArea Called when the user enters a hip pinning area. Declaration public event Action<HipPinningConstraintTarget> OnEnterHipPinningArea Event Type Type Description System.Action < HipPinningConstraintTarget > OnExitHipPinningArea Called when the user leaves a hip pinning area. Declaration public event Action<HipPinningConstraintTarget> OnExitHipPinningArea Event Type Type Description System.Action < HipPinningConstraintTarget > Explicit Interface Implementations IHipPinningData.AnimatorComponent Animator component. Declaration readonly Animator IHipPinningData.AnimatorComponent { get; } Returns Type Description Animator IHipPinningData.Bones The bones that compose the skeleton. Declaration readonly Transform[] IHipPinningData.Bones { get; } Returns Type Description Transform [] IHipPinningData.CalibratedHipPos The calibrated hip position. Declaration readonly Vector3 IHipPinningData.CalibratedHipPos { get; } Returns Type Description Vector3 IHipPinningData.ConstraintSkeleton The OVR Skeleton component. Declaration readonly OVRCustomSkeleton IHipPinningData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton IHipPinningData.CurrentHipPinningTarget Returns the current hip pinning target. Declaration readonly HipPinningConstraintTarget IHipPinningData.CurrentHipPinningTarget { get; } Returns Type Description HipPinningConstraintTarget IHipPinningData.HasCalibrated Has run calibration or not. Declaration readonly bool IHipPinningData.HasCalibrated { get; } Returns Type Description System.Boolean IHipPinningData.HipPinningLeave If true, hip pinning will be disabled when the character leaves a certain range. Declaration readonly bool IHipPinningData.HipPinningLeave { get; } Returns Type Description System.Boolean IHipPinningData.HipPinningLeaveRange The range from the hip pinning target before hip pinning is disabled. Declaration readonly float IHipPinningData.HipPinningLeaveRange { get; } Returns Type Description System.Single IHipPinningData.HipPinningTargets The array of available hip pinning targets. Declaration readonly HipPinningConstraintTarget[] IHipPinningData.HipPinningTargets { get; } Returns Type Description HipPinningConstraintTarget [] IHipPinningData.InitialHipLocalRotation The initial hip local rotation. Declaration readonly Quaternion IHipPinningData.InitialHipLocalRotation { get; } Returns Type Description Quaternion IHipPinningData.Root The root bone of this transform. Declaration readonly Transform IHipPinningData.Root { get; } Returns Type Description Transform IHipPinningData.ShouldUpdate If true, update this job. Declaration bool IHipPinningData.ShouldUpdate { get; set; } Returns Type Description System.Boolean Implements IHipPinningData"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningJob.html",
    "title": "Struct HipPinningJob | Unity-Movement Documentation",
    "keywords": "Struct HipPinningJob The Hip Pinning job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct HipPinningJob Fields Bones The array of all bones on the skeleton. Declaration public NativeArray<ReadWriteTransformHandle> Bones Field Value Type Description NativeArray < ReadWriteTransformHandle > DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < System.Single > Hips The hips bone Declaration public ReadWriteTransformHandle Hips Field Value Type Description ReadWriteTransformHandle TargetHipPos The target position for the hips. Declaration public NativeArray<Vector3> TargetHipPos Field Value Type Description NativeArray < Vector3 > ValidSkeletalData If true, update the bone positions as there is a valid skeleton. Declaration public bool ValidSkeletalData Field Value Type Description System.Boolean Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.HipPinningJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.HipPinningJobBinder-1.html",
    "title": "Class HipPinningJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class HipPinningJobBinder<T> The Hip Pinning job binder. Inheritance System.Object HipPinningJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class HipPinningJobBinder<T> : AnimationJobBinder<HipPinningJob, T> where T : struct, IAnimationJobData, IHipPinningData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override HipPinningJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description HipPinningJob Destroy(HipPinningJob) Declaration public override void Destroy(HipPinningJob job) Parameters Type Name Description HipPinningJob job Update(HipPinningJob, ref T) Declaration public override void Update(HipPinningJob job, ref T data) Parameters Type Name Description HipPinningJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.html": {
    "href": "api/Oculus.Movement.AnimationRigging.html",
    "title": "Namespace Oculus.Movement.AnimationRigging | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.AnimationRigging Classes AnimationUtilities Provides convenient algorithms to assist with animation rigging work. AvatarMaskExtensionMethods BoneMappingsExtension Contains extra mappins not yet available in the SDK. CaptureAnimationConstraint Capture animation constraint. Captures the current animator's reference pose and current pose, to be used to blend animation playback and tracking in another animation job. CaptureAnimationConstraintEditor Custom editor for the capture animation constraint. CaptureAnimationData.PoseBone The bone information for a bone in a pose. CaptureAnimationJobBinder<T> The capture animation job binder. CopyPoseConstraint The CopyPose constraint, used to copy the current humanoid animator pose information to be used when correcting positions in RetargetingLayer. CopyPoseJobBinder<T> The CopyPose job binder. DeformationUtilities Provides convenient algorithms to assist with deformation work. EditorPrefsBool Saves a bool value to editor prefs. ExternalBoneTargets Update target transforms with bone data. ExternalBoneTargets.BoneTarget A retargeted bone target. FullBodyDeformationConstraint FullBodyDeformation constraint. FullBodyDeformationConstraintEditor Custom editor for the full body deformation constraint. FullBodyDeformationJobBinder<T> The FullBodyDeformation job binder. GroundingConstraint Grounding constraint. GroundingConstraintEditor Custom editor for the twist distribution constraint. GroundingJobBinder<T> The job binder for GroundingJob . HipPinningConstraint Hip Pinning constraint. HipPinningConstraintEditor Custom editor for the hip pinning constraint. HipPinningConstraintTarget Specifies a target to be used for hip pinning. HipPinningJobBinder<T> The Hip Pinning job binder. PlaybackAnimationConstraint Playback animation constraint. Uses captured animation data to playback the current animator pose additively or override. PlaybackAnimationJobBinder<T> The playback animation job binder. PositionalJointConstraint Mimics Position Constraint and can be run manually. RetargetedBoneMappings RetargetingAnimationConstraint Retargeting constraint. Keep game object disabled until RegenerateData is called. RetargetingAnimationConstraintEditor Custom editor for RetargetingAnimationConstraint . RetargetingAnimationJobBinder<T> The retargeting animation job binder. RetargetingAnimationRig Handles the animation rig on the retargeting layer. RetargetingBlendHandProcessor Increases hand accuracy as they appear into view. RetargetingHandDeformationProcessor Retargeting processor. RetargetingHandDeformationProcessor.FingerBonePairData Finger class used for deformation. RetargetingLayer Retargeting class that inherits from OVRUnityHumanoidSkeletonRetargeter and provides functions that work with animation rigging. RetargetingLayer.JointPositionAdjustment Joint position adjustment to be applied to corrected positions. RetargetingLayerEditor Custom editor for RetargetingLayer . RetargetingProcessor Base class for retargeting processors, meant to be used as a scriptable object. RetargetingProcessorCorrectBones Retargeting processor used to apply corrected bone positions from the retargeted animation job output. RetargetingProcessorCorrectHand Retargeting processor used to fix the arm via an IK algorithm so that the retargeted hand position matches the tracked hand position. RetargetingProcessorCorrectHand.HandProcessor Processor for blending and correcting a hand with IK. RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings Container for settings to sync OVRControllers and Hands. RetargetingProcessorEditor Custom editor for RetargetingProcessor . RetargetingProcessorScriptableObjectDrawer Extends how RetargetingProcessorScriptableObject object references are displayed in the inspector Shows you all values under the object reference Also provides a button to create a new ScriptableObject if property is null. RiggingUtilities Provides convenient methods and occasional extensions to assist with animation rigging work. SkeletonHandAdjustment A filter for skeleton data that will apply a hand pose. Use this script to apply a hand pose from Interaction SDK onto a skeleton that can be modified by SkeletonProcessAggregator IOVRSkeletonProcessorAggregator Component with Editor UI SkeletonProcessAggregator.Item Abstraction layer for the Unity Editor to manipulate IOVRSkeletonProcessor s SkeletonProcessAggregatorEditor SkeletonProcessorBehaviour A common base class for s. Allows common editor UI Drawer. SkeletonTranslateProcessor Use this script to pull the skeleton's bones to follow this transform. If a tracked skeleton's rigged-mesh transform is stationary, this script will translate the skeleton's apparent position/rotation to this object. More context: If a rigged mesh is stationary, but the OVRCameraRig is moving, put this script on an object moving with the OVRCameraRig, and have the SkeletonPostprocessing of the retargeting layer use this script's SkeletonPostprocess function SkeletonTranslateProcessor.NotifyOnChange Module for updating objects that care if this processor is working TwistDistributionConstraint Twist Distribution constraint. This should be enabled to begin with, so that it can compute metadata before the character can begin animating. TwistDistributionConstraintEditor Custom editor for the twist distribution constraint. TwistDistributionJobBinder<T> The TwistDistribution job binder. Structs CaptureAnimationData Data to store captured bone data from the current animation. CaptureAnimationJob The capture animation job, which will write bone position and rotation data into accessible native arrays. CopyPoseData Copy pose data used by the copy pose job. Implements the copy pose data interface. CopyPoseJob The CopyPose job. DeformationUtilities.ArmPosData Information about the positioning of an arm. DeformationUtilities.BoneAdjustmentData Information about an adjustment to be applied on a bone. DeformationUtilities.BonePairData Information about the distance between two bone transforms. DeformationUtilities.LegPosData Information about the positioning of a leg. FullBodyDeformationData FullBodyDeformation data used by the FullBodyDeformation job. Implements the FullBodyDeformation data interface. FullBodyDeformationJob The FullBodyDeformation job. FullBodyDeformationJob.BoneDeformationAdjustmentData Bone adjustment data for the FullBodyDeformation job. FullBodyDeformationJob.BoneDeformationAnimationData Bone animation data for the FullBodyDeformation job. GroundingData Grounding data used by grounding job. TODO: allow for case where rig can be enabled, this means sync transform arrays must not be null by default GroundingJob The Grounding job. HipPinningData Hip Pinning data used by the hip pinning job. Implements the hip pinning data interface. HipPinningJob The Hip Pinning job. LegPosData Information about the positioning of a leg. PlaybackAnimationData Data to handle animation playback. PlaybackAnimationJob The playback animation job. Update the bones based on the transform deltas passed into the animation job. RetargetingAnimationJob Retargeting animation job. RetargetingConstraintData Retargeting data used by the constraint. Implements the retargeting interface. SkeletonHandAdjustment.HandBodyJointPair Named tuple data structure for mapping between Body and Hand indexes TwistDistributionData Twist distribution data used by the twist distribution job. Implements the twist distribution data interface. TwistDistributionJob The TwistDistribution job. Interfaces ICaptureAnimationData Interface for capture animation data. ICopyPoseData Interface for copy pose data. IFullBodyDeformationData Interface for FullBodyDeformation data. IGroundingData Interface for grounding data. IHipPinningData Interface for hip pinning data. IJointConstraint Constraint interface. Used to manually trigger constraints at runtime instead of relying on Unity to do that. IOVRSkeletonConstraint Interface for skeletal constraint component. IOVRSkeletonProcessor For a class that modifies or filters an IOVRSkeletonProcessorAggregator For a class that reads from an . This interface aggregates IOVRSkeletonProcessor s that will modify the skeleton (eg: force hand poses, control body without input). IPlaybackAnimationData Interface for playback animation data. IRetargetingData Interface for retargeting data. IRetargetingProcessor Interface for retargeting processors. ITwistDistributionData Interface for twist distribution data. Enums FullBodyDeformationData.DeformationBodyType The deformation body type. FullBodyDeformationData.SpineTranslationCorrectionType The spine translation correction type. IRetargetingProcessor.RetargetingProcessorType Processor type (normal or jobs). PlaybackAnimationData.AnimationPlaybackType The animation playback type. RetargetingBlendHandProcessor.HeadView Enum used to determine which type of head should be used to blend hands. RetargetingProcessorCorrectHand.HeadView Enum used to determine which type of head should be used to blend hands. RetargetingProcessorCorrectHand.IKType The types of IK available to be used. RetargetingProcessorCorrectHand.SyncOvrOption The type of syncing that should be done if syncing OVR data. TwistDistributionData.Axis Axis type for TwistDistribution. Delegates RetargetingLayer.OVRSkeletonProcessor Callback that can adjust a given skeleton. Is the functional backend that implements IOVRSkeletonProcessorAggregator"
  },
  "api/Oculus.Movement.AnimationRigging.ICaptureAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ICaptureAnimationData.html",
    "title": "Interface ICaptureAnimationData | Unity-Movement Documentation",
    "keywords": "Interface ICaptureAnimationData Interface for capture animation data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface ICaptureAnimationData Properties ConstraintAnimator The animator used by the constraint. Declaration Animator ConstraintAnimator { get; } Property Value Type Description Animator CurrentAnimatorStateInfoHash The current animator state info hash. Declaration int CurrentAnimatorStateInfoHash { get; set; } Property Value Type Description System.Int32 CurrentPose The bone data for the current pose. Declaration CaptureAnimationData.PoseBone[] CurrentPose { get; } Property Value Type Description CaptureAnimationData.PoseBone [] ReferencePose The bone data for the reference pose. Declaration CaptureAnimationData.PoseBone[] ReferencePose { get; } Property Value Type Description CaptureAnimationData.PoseBone [] ReferencePoseTime The normalized time from which the reference pose should be captured from. Declaration float ReferencePoseTime { get; } Property Value Type Description System.Single TargetAnimatorLayer The target animator layer to capture animations on. Declaration int TargetAnimatorLayer { get; } Property Value Type Description System.Int32"
  },
  "api/Oculus.Movement.AnimationRigging.ICopyPoseData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ICopyPoseData.html",
    "title": "Interface ICopyPoseData | Unity-Movement Documentation",
    "keywords": "Interface ICopyPoseData Interface for copy pose data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface ICopyPoseData Properties AnimatorBones The array of humanoid animator bones. Declaration Transform[] AnimatorBones { get; } Property Value Type Description Transform [] CopyPoseToOriginal True if the pose being copied is the original pose. If false, the copied pose is assumed to be the final pose. Declaration bool CopyPoseToOriginal { get; } Property Value Type Description System.Boolean RetargetingLayerComp The retargeting layer component. Declaration RetargetingLayer RetargetingLayerComp { get; } Property Value Type Description RetargetingLayer"
  },
  "api/Oculus.Movement.AnimationRigging.IFullBodyDeformationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IFullBodyDeformationData.html",
    "title": "Interface IFullBodyDeformationData | Unity-Movement Documentation",
    "keywords": "Interface IFullBodyDeformationData Interface for FullBodyDeformation data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IFullBodyDeformationData Properties AffectArmsBySpineCorrection Affect arms by spine correction bool property. Declaration string AffectArmsBySpineCorrection { get; } Property Value Type Description System.String AlignFeetWeightFloatProperty Align feet weight float property. Declaration string AlignFeetWeightFloatProperty { get; } Property Value Type Description System.String ArmLengthMultiplierFloatProperty Allows stretching arms. WARNING! EXPERIMENTAL! increasing this value might cause inaccuracy wrt to body tracking. Declaration string ArmLengthMultiplierFloatProperty { get; } Property Value Type Description System.String BodyType The deformation body type for the character. Declaration int BodyType { get; } Property Value Type Description System.Int32 BoneAdjustments The adjustment info for the bones. Declaration BoneAdjustmentData[] BoneAdjustments { get; } Property Value Type Description BoneAdjustmentData [] BonePairs The position info for the bone pairs used for FullBodyDeformation. Declaration BonePairData[] BonePairs { get; } Property Value Type Description BonePairData [] ChestAlignmentWeightFloatProperty The chest alignment weight float property. Declaration string ChestAlignmentWeightFloatProperty { get; } Property Value Type Description System.String ConstraintAnimator The Animator component for the character. Declaration Animator ConstraintAnimator { get; } Property Value Type Description Animator ConstraintCustomSkeleton The OVRCustomSkeleton component for the character. Declaration OVRCustomSkeleton ConstraintCustomSkeleton { get; } Property Value Type Description OVRCustomSkeleton DeformationBodyTypeIntProperty The deformation body type int property. Declaration string DeformationBodyTypeIntProperty { get; } Property Value Type Description System.String FeetToToesBoneTargets The array of transform targets from the feet to the toes bones. Declaration Transform[] FeetToToesBoneTargets { get; } Property Value Type Description Transform [] HipsToFootDistance The distance between the hips and foot bones. Declaration float HipsToFootDistance { get; } Property Value Type Description System.Single HipsToHeadBones The array of transforms from the hips to the head bones. Declaration Transform[] HipsToHeadBones { get; } Property Value Type Description Transform [] HipsToHeadBoneTargets The array of transform targets from the hips to the head bones. Declaration Transform[] HipsToHeadBoneTargets { get; } Property Value Type Description Transform [] HipsToHeadDistance The distance between the hips and head bones. Declaration float HipsToHeadDistance { get; } Property Value Type Description System.Single LeftArm The position info for the left arm. Declaration ArmPosData LeftArm { get; } Property Value Type Description ArmPosData LeftArmWeightFloatProperty The left arm weight float property. Declaration string LeftArmWeightFloatProperty { get; } Property Value Type Description System.String LeftHandWeightFloatProperty The left hand weight float property. Declaration string LeftHandWeightFloatProperty { get; } Property Value Type Description System.String LeftLeg The position info for the left leg. Declaration LegPosData LeftLeg { get; } Property Value Type Description LegPosData LeftLegWeightFloatProperty The left leg weight float property. Declaration string LeftLegWeightFloatProperty { get; } Property Value Type Description System.String LeftShoulderWeightFloatProperty The left shoulder weight float property. Declaration string LeftShoulderWeightFloatProperty { get; } Property Value Type Description System.String LeftToesWeightFloatProperty The left toes weight float property. Declaration string LeftToesWeightFloatProperty { get; } Property Value Type Description System.String OriginalSpineBoneCountIntProperty Control how many bones to straighten. WARNING! EXPERIMENTAL! Declaration string OriginalSpineBoneCountIntProperty { get; } Property Value Type Description System.String OriginalSpineFixRotationsBoolProperty Allows correcting the rotations of the spine too when using original spine positions. WARNING! EXPERIMENTAL! Declaration string OriginalSpineFixRotationsBoolProperty { get; } Property Value Type Description System.String OriginalSpinePositionsWeightProperty Attempts to match the original spine positions. Excludes heads and head. WARNING! EXPERIMENTAL!: increasing this value might cause inaccuracy wrt to body tracking. Declaration string OriginalSpinePositionsWeightProperty { get; } Property Value Type Description System.String OriginalSpineUseHipsToHeadScaleBoolProperty Indicates if the original spine positions should scale based on the hips to head distance (proportionally). WARNING! EXPERIMENTAL! Declaration string OriginalSpineUseHipsToHeadScaleBoolProperty { get; } Property Value Type Description System.String RightArm The position info for the right arm. Declaration ArmPosData RightArm { get; } Property Value Type Description ArmPosData RightArmWeightFloatProperty The right arm weight float property. Declaration string RightArmWeightFloatProperty { get; } Property Value Type Description System.String RightHandWeightFloatProperty The right hand weight float property. Declaration string RightHandWeightFloatProperty { get; } Property Value Type Description System.String RightLeg The position info for the right leg. Declaration LegPosData RightLeg { get; } Property Value Type Description LegPosData RightLegWeightFloatProperty The right leg weight float property. Declaration string RightLegWeightFloatProperty { get; } Property Value Type Description System.String RightShoulderWeightFloatProperty The right shoulder weight float property. Declaration string RightShoulderWeightFloatProperty { get; } Property Value Type Description System.String RightToesWeightFloatProperty The right toes weight float property. Declaration string RightToesWeightFloatProperty { get; } Property Value Type Description System.String ShoulderRollFloatProperty Declaration string ShoulderRollFloatProperty { get; } Property Value Type Description System.String ShouldersHeightReductionWeightFloatProperty The shoulders height reduction weight float property. Declaration string ShouldersHeightReductionWeightFloatProperty { get; } Property Value Type Description System.String ShouldersWidthReductionWeightFloatProperty The shoulders width reduction weight float property. Declaration string ShouldersWidthReductionWeightFloatProperty { get; } Property Value Type Description System.String ShouldUpdate If true, update this job. Declaration bool ShouldUpdate { get; set; } Property Value Type Description System.Boolean SpineCorrectionType The type of spine translation correction that should be applied. Declaration int SpineCorrectionType { get; } Property Value Type Description System.Int32 SpineCorrectionTypeIntProperty The spine correction type int property. Declaration string SpineCorrectionTypeIntProperty { get; } Property Value Type Description System.String SpineLowerAlignmentWeightFloatProperty The spine alignment weight float property. Declaration string SpineLowerAlignmentWeightFloatProperty { get; } Property Value Type Description System.String SpineUpperAlignmentWeightFloatProperty The spine upper alignment weight float property. Declaration string SpineUpperAlignmentWeightFloatProperty { get; } Property Value Type Description System.String SquashLimitFloatProperty Restricts how much the character should be squashed. WARNING: restricting too much will prevent the character from tracking the body accurately. Declaration string SquashLimitFloatProperty { get; } Property Value Type Description System.String StartingScale The starting scale of the character, taken from the animator transform. Declaration Vector3 StartingScale { get; } Property Value Type Description Vector3 StretchLimitFloatProperty Restricts how much the character should be stretched. WARNING: restricting too much will prevent the character from tracking the body accurately. Declaration string StretchLimitFloatProperty { get; } Property Value Type Description System.String Methods ClearTransformData() Clears all transform data stored. Declaration void ClearTransformData() InitializeStartingScale() Computes initial starting scale. Declaration void InitializeStartingScale() IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not. SetUpAdjustments(RestPoseObjectHumanoid) Try to set up adjustments. Declaration void SetUpAdjustments(RestPoseObjectHumanoid restPoseObject) Parameters Type Name Description RestPoseObjectHumanoid restPoseObject The rest pose object used to calculate adjustments. SetUpBonePairs() Sets up upper bone parts after all bones have been found. Declaration void SetUpBonePairs() SetUpBoneTargets(Transform) Try to set up bone targets. Declaration void SetUpBoneTargets(Transform setupParent) Parameters Type Name Description Transform setupParent The parent for the bone targets. SetUpHipsAndHeadBones() Sets up hips and head bones. Declaration void SetUpHipsAndHeadBones() SetUpLeftArmData() Sets up left arm data. Declaration void SetUpLeftArmData() SetUpLeftLegData() Sets up left leg data. Declaration void SetUpLeftLegData() SetUpRightArmData() Sets up right arm data. Declaration void SetUpRightArmData() SetUpRightLegData() Sets up right leg data. Declaration void SetUpRightLegData()"
  },
  "api/Oculus.Movement.AnimationRigging.IGroundingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IGroundingData.html",
    "title": "Interface IGroundingData | Unity-Movement Documentation",
    "keywords": "Interface IGroundingData Interface for grounding data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IGroundingData Properties ConstraintAnimator The Animator component for the character. Declaration Animator ConstraintAnimator { get; } Property Value Type Description Animator ConstraintSkeleton The original skeleton for the character. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton FootRotationOffset The initial rotation offset for the feet. Declaration Quaternion FootRotationOffset { get; } Property Value Type Description Quaternion FootTarget The foot target for the leg. Declaration Transform FootTarget { get; } Property Value Type Description Transform GroundLayers The layers that the raycast will check against for grounding. Declaration LayerMask GroundLayers { get; } Property Value Type Description LayerMask GroundOffset The height offset from the grounded floor to be applied to the foot. Declaration float GroundOffset { get; } Property Value Type Description System.Single GroundRaycastDist The maximum distance that the raycast will go when checking for grounding. Declaration float GroundRaycastDist { get; } Property Value Type Description System.Single GroundRaycastHit The ground raycast hit. Declaration RaycastHit GroundRaycastHit { get; set; } Property Value Type Description RaycastHit Hips The hips transform. Declaration Transform Hips { get; } Property Value Type Description Transform HipsTarget The hips target transform. Declaration Transform HipsTarget { get; } Property Value Type Description Transform KneeTarget The knee target for the leg. Declaration Transform KneeTarget { get; } Property Value Type Description Transform Leg The leg upper transform. Declaration Transform Leg { get; } Property Value Type Description Transform LegPosOffset The initial position offset for the leg. Declaration Vector3 LegPosOffset { get; } Property Value Type Description Vector3 LegRotOffset The initial rotation offset for the leg. Declaration Quaternion LegRotOffset { get; } Property Value Type Description Quaternion Pair Optional. The other leg's grounding constraint, used to check if this leg can move. Declaration GroundingData Pair { get; } Property Value Type Description GroundingData PreviousKneePos The previous knee position. Declaration Vector3 PreviousKneePos { get; set; } Property Value Type Description Vector3 Progress The amount of move progress. Declaration float Progress { set; } Property Value Type Description System.Single ShouldUpdate If true, update this job. Declaration bool ShouldUpdate { get; set; } Property Value Type Description System.Boolean StepCurve The animation curve for evaluating the step height value. Declaration AnimationCurve StepCurve { get; } Property Value Type Description AnimationCurve StepDist The distance before the step is triggered. Declaration float StepDist { get; } Property Value Type Description System.Single StepHeight The height of the step taken. Declaration float StepHeight { get; } Property Value Type Description System.Single StepHeightScaleDist The maximum distance for the step height to not be scaled. Declaration float StepHeightScaleDist { get; } Property Value Type Description System.Single StepSpeed The speed of the step for the foot. Declaration float StepSpeed { get; } Property Value Type Description System.Single Methods GenerateThresholdMoveProgress() Generates a new value for the threshold move progress. Declaration void GenerateThresholdMoveProgress() IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not."
  },
  "api/Oculus.Movement.AnimationRigging.IHipPinningData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IHipPinningData.html",
    "title": "Interface IHipPinningData | Unity-Movement Documentation",
    "keywords": "Interface IHipPinningData Interface for hip pinning data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IHipPinningData Properties AnimatorComponent Animator component. Declaration Animator AnimatorComponent { get; } Property Value Type Description Animator Bones The bones that compose the skeleton. Declaration Transform[] Bones { get; } Property Value Type Description Transform [] CalibratedHipPos The calibrated hip position. Declaration Vector3 CalibratedHipPos { get; } Property Value Type Description Vector3 ConstraintSkeleton The OVR Skeleton component. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton CurrentHipPinningTarget Returns the current hip pinning target. Declaration HipPinningConstraintTarget CurrentHipPinningTarget { get; } Property Value Type Description HipPinningConstraintTarget HasCalibrated Has run calibration or not. Declaration bool HasCalibrated { get; } Property Value Type Description System.Boolean HipPinningLeave If true, hip pinning will be disabled when the character leaves a certain range. Declaration bool HipPinningLeave { get; } Property Value Type Description System.Boolean HipPinningLeaveRange The range from the hip pinning target before hip pinning is disabled. Declaration float HipPinningLeaveRange { get; } Property Value Type Description System.Single HipPinningTargets The array of available hip pinning targets. Declaration HipPinningConstraintTarget[] HipPinningTargets { get; } Property Value Type Description HipPinningConstraintTarget [] InitialHipLocalRotation The initial hip local rotation. Declaration Quaternion InitialHipLocalRotation { get; } Property Value Type Description Quaternion IsFirstFrame If true, this is the first frame that the newly created job is running on. Declaration bool IsFirstFrame { get; set; } Property Value Type Description System.Boolean ObtainedProperReferences Indicates if the constraint has been set up or not. Declaration bool ObtainedProperReferences { get; } Property Value Type Description System.Boolean Root The root bone of this transform. Declaration Transform Root { get; } Property Value Type Description Transform ShouldUpdate If true, update this job. Declaration bool ShouldUpdate { get; set; } Property Value Type Description System.Boolean Methods AssignClosestHipPinningTarget(Vector3) Find and assign the closest hip pinning target to be the current hip pinning target. Declaration void AssignClosestHipPinningTarget(Vector3 position) Parameters Type Name Description Vector3 position The position to check against. EnterHipPinningArea(HipPinningConstraintTarget) Called when the user enters a hip pinning area. Declaration void EnterHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target ExitHipPinningArea(HipPinningConstraintTarget) Called when the user leaves a hip pinning area. Declaration void ExitHipPinningArea(HipPinningConstraintTarget target) Parameters Type Name Description HipPinningConstraintTarget target GetHipTransform() Returns hip transform. Declaration Transform GetHipTransform() Returns Type Description Transform Transform of the hip. GetIndexOfFirstBoneAboveHips() Retrieves index of bone above hips. Declaration int GetIndexOfFirstBoneAboveHips() Returns Type Description System.Int32 Index of bone above hips. IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if so, false if not. SetInitialHipRotation() Allows storing the initial hip rotation. Declaration void SetInitialHipRotation() Events OnEnterHipPinningArea Event when the user enters a hip pinning area. Declaration event Action<HipPinningConstraintTarget> OnEnterHipPinningArea Event Type Type Description System.Action < HipPinningConstraintTarget > OnExitHipPinningArea Event when the user leaves a hip pinning area. Declaration event Action<HipPinningConstraintTarget> OnExitHipPinningArea Event Type Type Description System.Action < HipPinningConstraintTarget >"
  },
  "api/Oculus.Movement.AnimationRigging.IJointConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IJointConstraint.html",
    "title": "Interface IJointConstraint | Unity-Movement Documentation",
    "keywords": "Interface IJointConstraint Constraint interface. Used to manually trigger constraints at runtime instead of relying on Unity to do that. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IJointConstraint Methods Update() Updates constraint at runtime. Declaration void Update()"
  },
  "api/Oculus.Movement.AnimationRigging.IOVRSkeletonConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IOVRSkeletonConstraint.html",
    "title": "Interface IOVRSkeletonConstraint | Unity-Movement Documentation",
    "keywords": "Interface IOVRSkeletonConstraint Interface for skeletal constraint component. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration void RegenerateData()"
  },
  "api/Oculus.Movement.AnimationRigging.IOVRSkeletonProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IOVRSkeletonProcessor.html",
    "title": "Interface IOVRSkeletonProcessor | Unity-Movement Documentation",
    "keywords": "Interface IOVRSkeletonProcessor For a class that modifies or filters an Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IOVRSkeletonProcessor Properties EnableSkeletonProcessing Allows this processor to be turned on and off by an IOVRSkeletonProcessorAggregator Declaration bool EnableSkeletonProcessing { get; set; } Property Value Type Description System.Boolean SkeletonProcessorLabel Gives an IOVRSkeletonProcessorAggregator a name Declaration string SkeletonProcessorLabel { get; } Property Value Type Description System.String Methods ProcessSkeleton(OVRSkeleton) Processes an for some purpose (eg: forcing a hand pose, moving body parts without the user) Declaration void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton"
  },
  "api/Oculus.Movement.AnimationRigging.IOVRSkeletonProcessorAggregator.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IOVRSkeletonProcessorAggregator.html",
    "title": "Interface IOVRSkeletonProcessorAggregator | Unity-Movement Documentation",
    "keywords": "Interface IOVRSkeletonProcessorAggregator For a class that reads from an . This interface aggregates IOVRSkeletonProcessor s that will modify the skeleton (eg: force hand poses, control body without input). Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IOVRSkeletonProcessorAggregator Methods AddProcessor(IOVRSkeletonProcessor) Adds given processor to this IOVRSkeletonProcessorAggregator Declaration void AddProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor RemoveProcessor(IOVRSkeletonProcessor) Removes given processor from IOVRSkeletonProcessorAggregator Declaration void RemoveProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor"
  },
  "api/Oculus.Movement.AnimationRigging.IPlaybackAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IPlaybackAnimationData.html",
    "title": "Interface IPlaybackAnimationData | Unity-Movement Documentation",
    "keywords": "Interface IPlaybackAnimationData Interface for playback animation data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IPlaybackAnimationData Properties AffectHipsPositionPropertyY Whether to affect hips position's Y value. Declaration string AffectHipsPositionPropertyY { get; } Property Value Type Description System.String AffectHipsRotationPropertyX Whether to affect hips rotation X. Declaration string AffectHipsRotationPropertyX { get; } Property Value Type Description System.String AffectHipsRotationPropertyY Whether to affect hips rotation Y. Declaration string AffectHipsRotationPropertyY { get; } Property Value Type Description System.String AffectHipsRotationPropertyZ Whether to affect hips rotation Z. Declaration string AffectHipsRotationPropertyZ { get; } Property Value Type Description System.String AffectPositionsBoolProperty Affect positions via the animation. Declaration string AffectPositionsBoolProperty { get; } Property Value Type Description System.String AffectRotationsBoolProperty Affect rotation via the animation. Declaration string AffectRotationsBoolProperty { get; } Property Value Type Description System.String AnimationMask The avatar mask for masking the animation. Declaration AvatarMask AnimationMask { get; } Property Value Type Description AvatarMask BonesArrayMask Bones array mask. Declaration HumanBodyBones[] BonesArrayMask { get; } Property Value Type Description HumanBodyBones [] FixedHipsPosition Fixed hips position. Declaration Vector3 FixedHipsPosition { get; } Property Value Type Description Vector3 FixedHipsRotationEuler Fixed hips rotation (euler angles). Declaration Vector3 FixedHipsRotationEuler { get; } Property Value Type Description Vector3 PlaybackType The animation playback type. Declaration int PlaybackType { get; } Property Value Type Description System.Int32 PlaybackTypeIntProperty The animation playback type int property. Declaration string PlaybackTypeIntProperty { get; } Property Value Type Description System.String SourceConstraint The capture animation constraint to source animation data from. Declaration CaptureAnimationConstraint SourceConstraint { get; } Property Value Type Description CaptureAnimationConstraint UseFixedHipsPoseProperty Whether to use the fixed hips pose or not. Declaration string UseFixedHipsPoseProperty { get; } Property Value Type Description System.String"
  },
  "api/Oculus.Movement.AnimationRigging.IRetargetingData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IRetargetingData.html",
    "title": "Interface IRetargetingData | Unity-Movement Documentation",
    "keywords": "Interface IRetargetingData Interface for retargeting data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IRetargetingData Properties DummyTransform Used to create job information in case it becomes allocated before the constraint has a chance to run. Declaration Transform DummyTransform { get; } Property Value Type Description Transform RotationAdjustments Optional rotational adjustment to be applied during retargeting. Declaration Quaternion[] RotationAdjustments { get; } Property Value Type Description Quaternion [] RotationOffsets Rotation offset to be applied during retargeting. Declaration Quaternion[] RotationOffsets { get; } Property Value Type Description Quaternion [] ShouldUpdatePosition Indicates if target transform's position should be updated. Once a position is updated, the original position will be lost. Declaration bool[] ShouldUpdatePosition { get; } Property Value Type Description System.Boolean [] ShouldUpdateRotation Indicates if target transform's rotation should be updated. Once a rotation is updated, the original rotation will be lost. Declaration bool[] ShouldUpdateRotation { get; } Property Value Type Description System.Boolean [] SourceTransforms Source transforms used for retargeting. Declaration Transform[] SourceTransforms { get; } Property Value Type Description Transform [] TargetTransforms Target transforms affected by retargeting. Declaration Transform[] TargetTransforms { get; } Property Value Type Description Transform [] Methods HasDataInitialized() Indicates if data has initialized or not. Declaration bool HasDataInitialized() Returns Type Description System.Boolean True if data has initialized, false if not. UpdateDynamicMetadata() Allows updating any dynamic data at runtime. Declaration void UpdateDynamicMetadata()"
  },
  "api/Oculus.Movement.AnimationRigging.IRetargetingProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IRetargetingProcessor.html",
    "title": "Interface IRetargetingProcessor | Unity-Movement Documentation",
    "keywords": "Interface IRetargetingProcessor Interface for retargeting processors. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface IRetargetingProcessor Properties ProcessorType Processor type field. Declaration IRetargetingProcessor.RetargetingProcessorType ProcessorType { get; set; } Property Value Type Description IRetargetingProcessor.RetargetingProcessorType Methods ApplyJSONConfig(String) Applies JSON config. Declaration void ApplyJSONConfig(string jsonData) Parameters Type Name Description System.String jsonData JSON data. CleanUp() Allows clean up of resources used. Declaration void CleanUp() DrawGizmos() Allow drawing debugging gizmos. Declaration void DrawGizmos() GetJSONConfig() Returns JSON config as string. Declaration string GetJSONConfig() Returns Type Description System.String JSON config as string. PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration void PrepareRetargetingProcessor(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) Process retargeting layer, job version. Declaration JobHandle ProcessRetargetingLayerJob(JobHandle? previousJob, RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description System.Nullable < JobHandle > previousJob Previous job, if any. RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The body tracking bones. Returns Type Description JobHandle Handle of job created. ReadJSONConfigFromFile(String) Reads and applies JSON config from file. Declaration void ReadJSONConfigFromFile(string filePath) Parameters Type Name Description System.String filePath File path to read from. RespondToCalibration(RetargetingLayer, IList<OVRBone>) Responds to calibration event. Declaration void RespondToCalibration(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer Retargeting layer component. IList < OVRBone > ovrBones Body tracking bones. SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer."
  },
  "api/Oculus.Movement.AnimationRigging.IRetargetingProcessor.RetargetingProcessorType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.IRetargetingProcessor.RetargetingProcessorType.html",
    "title": "Enum IRetargetingProcessor.RetargetingProcessorType | Unity-Movement Documentation",
    "keywords": "Enum IRetargetingProcessor.RetargetingProcessorType Processor type (normal or jobs). Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum RetargetingProcessorType Fields Name Description Jobs Normal"
  },
  "api/Oculus.Movement.AnimationRigging.ITwistDistributionData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.ITwistDistributionData.html",
    "title": "Interface ITwistDistributionData | Unity-Movement Documentation",
    "keywords": "Interface ITwistDistributionData Interface for twist distribution data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public interface ITwistDistributionData Properties ConstraintAnimator The Animator component for the character. Declaration Animator ConstraintAnimator { get; } Property Value Type Description Animator ConstraintSkeleton The OVR Skeleton component for the character. Declaration OVRCustomSkeleton ConstraintSkeleton { get; } Property Value Type Description OVRCustomSkeleton SegmentEnd The target transform containing the twist (like a wrist). Declaration Transform SegmentEnd { get; } Property Value Type Description Transform SegmentStart The start transform on the opposite side of the twist source (like an elbow). Declaration Transform SegmentStart { get; } Property Value Type Description Transform SegmentUp Optional. Assign a different transform to be used for the Segment End up vector. Declaration Transform SegmentUp { get; } Property Value Type Description Transform ShouldUpdate If true, update this job. Declaration bool ShouldUpdate { get; set; } Property Value Type Description System.Boolean TwistForwardAxis The twist forward axis. Declaration Vector3 TwistForwardAxis { get; } Property Value Type Description Vector3 TwistNodes The array of twist joints and their weights to be affected by the source transform's rotation. Declaration WeightedTransformArray TwistNodes { get; } Property Value Type Description WeightedTransformArray TwistNodeSpacings The proportional space between each twist node. Declaration float[] TwistNodeSpacings { get; } Property Value Type Description System.Single [] TwistNodesProperty The name of the twist nodes weighted transform array property. Declaration string TwistNodesProperty { get; } Property Value Type Description System.String TwistNodeUps The array of twist node up directions. Declaration Vector3[] TwistNodeUps { get; } Property Value Type Description Vector3 [] TwistUpAxis The twist up axis. Declaration Vector3 TwistUpAxis { get; } Property Value Type Description Vector3 Methods IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not."
  },
  "api/Oculus.Movement.AnimationRigging.LegPosData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.LegPosData.html",
    "title": "Struct LegPosData | Unity-Movement Documentation",
    "keywords": "Struct LegPosData Information about the positioning of a leg. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct LegPosData Fields FootBone The foot transform. Declaration public Transform FootBone Field Value Type Description Transform FootLocalRot The local rotation of the foot. Declaration public Quaternion FootLocalRot Field Value Type Description Quaternion HipsBone The hips transform. Declaration public Transform HipsBone Field Value Type Description Transform LowerLegBone The lower leg transform. Declaration public Transform LowerLegBone Field Value Type Description Transform ToesBone The toes transform. Declaration public Transform ToesBone Field Value Type Description Transform ToesLocalPos The local position of the toes. Declaration public Vector3 ToesLocalPos Field Value Type Description Vector3 UpperLegBone The upper leg transform. Declaration public Transform UpperLegBone Field Value Type Description Transform Properties IsInitialized Indicates if initialized or not. Declaration public readonly bool IsInitialized { get; } Property Value Type Description System.Boolean Methods ClearTransformData() Resets all tracked transforms to null. Declaration public void ClearTransformData()"
  },
  "api/Oculus.Movement.AnimationRigging.PlaybackAnimationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PlaybackAnimationConstraint.html",
    "title": "Class PlaybackAnimationConstraint | Unity-Movement Documentation",
    "keywords": "Class PlaybackAnimationConstraint Playback animation constraint. Uses captured animation data to playback the current animator pose additively or override. Inheritance System.Object PlaybackAnimationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class PlaybackAnimationConstraint : RigConstraint<PlaybackAnimationJob, PlaybackAnimationData, PlaybackAnimationJobBinder<PlaybackAnimationData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.PlaybackAnimationData.AnimationPlaybackType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PlaybackAnimationData.AnimationPlaybackType.html",
    "title": "Enum PlaybackAnimationData.AnimationPlaybackType | Unity-Movement Documentation",
    "keywords": "Enum PlaybackAnimationData.AnimationPlaybackType The animation playback type. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum AnimationPlaybackType Fields Name Description Additive Animation is played back additively. None No animation is played back. Override Animation is played back overriding any previous bone updates."
  },
  "api/Oculus.Movement.AnimationRigging.PlaybackAnimationData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PlaybackAnimationData.html",
    "title": "Struct PlaybackAnimationData | Unity-Movement Documentation",
    "keywords": "Struct PlaybackAnimationData Data to handle animation playback. Implements IPlaybackAnimationData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct PlaybackAnimationData : IPlaybackAnimationData Properties AvatarMaskComp Avatar mask instance accessor. Declaration public AvatarMask AvatarMaskComp { get; set; } Property Value Type Description AvatarMask Methods CreateAvatarMaskInstances() Initializes mask instances based on what value is set in the corresponding fields. Declaration public void CreateAvatarMaskInstances() Explicit Interface Implementations IPlaybackAnimationData.AffectHipsPositionPropertyY Whether to affect hips position's Y value. Declaration readonly string IPlaybackAnimationData.AffectHipsPositionPropertyY { get; } Returns Type Description System.String IPlaybackAnimationData.AffectHipsRotationPropertyX Whether to affect hips rotation X. Declaration readonly string IPlaybackAnimationData.AffectHipsRotationPropertyX { get; } Returns Type Description System.String IPlaybackAnimationData.AffectHipsRotationPropertyY Whether to affect hips rotation Y. Declaration readonly string IPlaybackAnimationData.AffectHipsRotationPropertyY { get; } Returns Type Description System.String IPlaybackAnimationData.AffectHipsRotationPropertyZ Whether to affect hips rotation Z. Declaration readonly string IPlaybackAnimationData.AffectHipsRotationPropertyZ { get; } Returns Type Description System.String IPlaybackAnimationData.AffectPositionsBoolProperty Affect positions via the animation. Declaration readonly string IPlaybackAnimationData.AffectPositionsBoolProperty { get; } Returns Type Description System.String IPlaybackAnimationData.AffectRotationsBoolProperty Affect rotation via the animation. Declaration readonly string IPlaybackAnimationData.AffectRotationsBoolProperty { get; } Returns Type Description System.String IPlaybackAnimationData.AnimationMask The avatar mask for masking the animation. Declaration readonly AvatarMask IPlaybackAnimationData.AnimationMask { get; } Returns Type Description AvatarMask IPlaybackAnimationData.BonesArrayMask Bones array mask. Declaration readonly HumanBodyBones[] IPlaybackAnimationData.BonesArrayMask { get; } Returns Type Description HumanBodyBones [] IPlaybackAnimationData.FixedHipsPosition Fixed hips position. Declaration readonly Vector3 IPlaybackAnimationData.FixedHipsPosition { get; } Returns Type Description Vector3 IPlaybackAnimationData.FixedHipsRotationEuler Fixed hips rotation (euler angles). Declaration readonly Vector3 IPlaybackAnimationData.FixedHipsRotationEuler { get; } Returns Type Description Vector3 IPlaybackAnimationData.PlaybackType The animation playback type. Declaration readonly int IPlaybackAnimationData.PlaybackType { get; } Returns Type Description System.Int32 IPlaybackAnimationData.PlaybackTypeIntProperty The animation playback type int property. Declaration readonly string IPlaybackAnimationData.PlaybackTypeIntProperty { get; } Returns Type Description System.String IPlaybackAnimationData.SourceConstraint The capture animation constraint to source animation data from. Declaration readonly CaptureAnimationConstraint IPlaybackAnimationData.SourceConstraint { get; } Returns Type Description CaptureAnimationConstraint IPlaybackAnimationData.UseFixedHipsPoseProperty Whether to use the fixed hips pose or not. Declaration readonly string IPlaybackAnimationData.UseFixedHipsPoseProperty { get; } Returns Type Description System.String Implements IPlaybackAnimationData"
  },
  "api/Oculus.Movement.AnimationRigging.PlaybackAnimationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PlaybackAnimationJob.html",
    "title": "Struct PlaybackAnimationJob | Unity-Movement Documentation",
    "keywords": "Struct PlaybackAnimationJob The playback animation job. Update the bones based on the transform deltas passed into the animation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct PlaybackAnimationJob Fields AffectHipsPositionY Whether to affect hips position Y-value. Declaration public BoolProperty AffectHipsPositionY Field Value Type Description BoolProperty AffectHipsRotationX Whether to affect hips rotation X-value. Declaration public BoolProperty AffectHipsRotationX Field Value Type Description BoolProperty AffectHipsRotationY Whether to affect hips rotation Y-value. Declaration public BoolProperty AffectHipsRotationY Field Value Type Description BoolProperty AffectHipsRotationZ Whether to affect hips rotation Z-value. Declaration public BoolProperty AffectHipsRotationZ Field Value Type Description BoolProperty AffectPositions Controls if positions from the animation should affect result. Declaration public BoolProperty AffectPositions Field Value Type Description BoolProperty AffectRotations Controls if rotations from the animation should affect result. Declaration public BoolProperty AffectRotations Field Value Type Description BoolProperty BonePositionDeltas The position deltas to be applied to the bones. Declaration public NativeArray<Vector3> BonePositionDeltas Field Value Type Description NativeArray < Vector3 > BoneRotationDeltas The rotation deltas to be applied to the bones. Declaration public NativeArray<Quaternion> BoneRotationDeltas Field Value Type Description NativeArray < Quaternion > Bones The animator bones to be updated. Declaration public NativeArray<ReadWriteTransformHandle> Bones Field Value Type Description NativeArray < ReadWriteTransformHandle > BonesToSkip The bones that should be skipped. Declaration public NativeArray<bool> BonesToSkip Field Value Type Description NativeArray < System.Boolean > FixedHipsPose Fixed hips pose. Declaration public NativeArray<Pose> FixedHipsPose Field Value Type Description NativeArray < Pose > OverrideBonePositions The override bone positions. Declaration public NativeArray<Vector3> OverrideBonePositions Field Value Type Description NativeArray < Vector3 > OverrideBoneRotations The override bone rotations. Declaration public NativeArray<Quaternion> OverrideBoneRotations Field Value Type Description NativeArray < Quaternion > PlaybackType The animation playback type. Declaration public IntProperty PlaybackType Field Value Type Description IntProperty UseFixedHipsPose Whether to use fixed hips pose or not. Declaration public BoolProperty UseFixedHipsPose Field Value Type Description BoolProperty Properties jobWeight Job weight. Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Defines what to do when processing the animation. Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on. ProcessRootMotion(AnimationStream) Defines what to do when processing the root motion. Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on."
  },
  "api/Oculus.Movement.AnimationRigging.PlaybackAnimationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PlaybackAnimationJobBinder-1.html",
    "title": "Class PlaybackAnimationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class PlaybackAnimationJobBinder<T> The playback animation job binder. Inheritance System.Object PlaybackAnimationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class PlaybackAnimationJobBinder<T> : AnimationJobBinder<PlaybackAnimationJob, T> where T : struct, IAnimationJobData, IPlaybackAnimationData Type Parameters Name Description T Type to be used for the job. Methods Create(Animator, ref T, Component) Declaration public override PlaybackAnimationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description PlaybackAnimationJob Destroy(PlaybackAnimationJob) Declaration public override void Destroy(PlaybackAnimationJob job) Parameters Type Name Description PlaybackAnimationJob job Update(PlaybackAnimationJob, ref T) Declaration public override void Update(PlaybackAnimationJob job, ref T data) Parameters Type Name Description PlaybackAnimationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.PositionalJointConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.PositionalJointConstraint.html",
    "title": "Class PositionalJointConstraint | Unity-Movement Documentation",
    "keywords": "Class PositionalJointConstraint Mimics Position Constraint and can be run manually. Inheritance System.Object PositionalJointConstraint Implements IJointConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class PositionalJointConstraint : IJointConstraint Constructors PositionalJointConstraint(Transform) Main constructor. Declaration public PositionalJointConstraint(Transform transform) Parameters Type Name Description Transform transform Transform with positional constraint. Methods Update() Updates positional constraint at runtime. Declaration public void Update() Implements IJointConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetedBoneMappings.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetedBoneMappings.html",
    "title": "Class RetargetedBoneMappings | Unity-Movement Documentation",
    "keywords": "Class RetargetedBoneMappings Inheritance System.Object RetargetedBoneMappings Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class RetargetedBoneMappings : OVRHumanBodyBonesMappingsInterface Properties GetBoneIdToHumanBodyBone Declaration public Dictionary<OVRSkeleton.BoneId, HumanBodyBones> GetBoneIdToHumanBodyBone { get; } Property Value Type Description Dictionary < OVRSkeleton.BoneId , HumanBodyBones > GetBoneIdToJointPair Declaration public Dictionary<OVRSkeleton.BoneId, Tuple<OVRSkeleton.BoneId, OVRSkeleton.BoneId>> GetBoneIdToJointPair { get; } Property Value Type Description Dictionary < OVRSkeleton.BoneId , System.Tuple < OVRSkeleton.BoneId , OVRSkeleton.BoneId >> GetBoneToBodySection Declaration public Dictionary<HumanBodyBones, BodySection> GetBoneToBodySection { get; } Property Value Type Description Dictionary < HumanBodyBones , BodySection > GetBoneToJointPair Declaration public Dictionary<HumanBodyBones, Tuple<HumanBodyBones, HumanBodyBones>> GetBoneToJointPair { get; } Property Value Type Description Dictionary < HumanBodyBones , System.Tuple < HumanBodyBones , HumanBodyBones >> GetFullBodyBoneIdToHumanBodyBone Declaration public Dictionary<OVRSkeleton.BoneId, HumanBodyBones> GetFullBodyBoneIdToHumanBodyBone { get; } Property Value Type Description Dictionary < OVRSkeleton.BoneId , HumanBodyBones > GetFullBodyBoneIdToJointPair Declaration public Dictionary<OVRSkeleton.BoneId, Tuple<OVRSkeleton.BoneId, OVRSkeleton.BoneId>> GetFullBodyBoneIdToJointPair { get; } Property Value Type Description Dictionary < OVRSkeleton.BoneId , System.Tuple < OVRSkeleton.BoneId , OVRSkeleton.BoneId >> Methods ConvertBonePairsToDictionaries() Converts the existing human body bone mappings to dictionaries required for the interface. Declaration public bool ConvertBonePairsToDictionaries() Returns Type Description System.Boolean Returns true if valid bone pairs were converted to dictionaries successfully. UpdateBonePairMappings(RetargetingLayer) Update bone pair mappings for the retargeted humanoid. Declaration public void UpdateBonePairMappings(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer."
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraint.html",
    "title": "Class RetargetingAnimationConstraint | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationConstraint Retargeting constraint. Keep game object disabled until RegenerateData is called. Inheritance System.Object RetargetingAnimationConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingAnimationConstraint : RigConstraint<RetargetingAnimationJob, RetargetingConstraintData, RetargetingAnimationJobBinder<RetargetingConstraintData>>, IOVRSkeletonConstraint Properties RetargetingLayerComp Retargeting layer accessors. Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer Methods OnValidate() Declaration protected override void OnValidate() RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationConstraintEditor.html",
    "title": "Class RetargetingAnimationConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationConstraintEditor Custom editor for RetargetingAnimationConstraint . Inheritance System.Object RetargetingAnimationConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingAnimationConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJob.html",
    "title": "Struct RetargetingAnimationJob | Unity-Movement Documentation",
    "keywords": "Struct RetargetingAnimationJob Retargeting animation job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct RetargetingAnimationJob Fields RotationAdjustments Rotation adjustments per joint. Declaration public NativeArray<Quaternion> RotationAdjustments Field Value Type Description NativeArray < Quaternion > RotationOffsets Rotation offsets per joint. Declaration public NativeArray<Quaternion> RotationOffsets Field Value Type Description NativeArray < Quaternion > ShouldUpdatePosition Boolean indicating if position should be updated or not. Declaration public NativeArray<bool> ShouldUpdatePosition Field Value Type Description NativeArray < System.Boolean > ShouldUpdateRotation Boolean indicating if rotation should be updated or not. Declaration public NativeArray<bool> ShouldUpdateRotation Field Value Type Description NativeArray < System.Boolean > SourceTransforms Source transforms used to affect target during retargeting. Declaration public NativeArray<ReadOnlyTransformHandle> SourceTransforms Field Value Type Description NativeArray < ReadOnlyTransformHandle > TargetTransforms Target transforms to affect. Declaration public NativeArray<ReadWriteTransformHandle> TargetTransforms Field Value Type Description NativeArray < ReadWriteTransformHandle > Properties jobWeight Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream ProcessRootMotion(AnimationStream) Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationJobBinder-1.html",
    "title": "Class RetargetingAnimationJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationJobBinder<T> The retargeting animation job binder. Inheritance System.Object RetargetingAnimationJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingAnimationJobBinder<T> : AnimationJobBinder<RetargetingAnimationJob, T> where T : struct, IAnimationJobData, IRetargetingData Type Parameters Name Description T The constraint data type. Methods Create(Animator, ref T, Component) Declaration public override RetargetingAnimationJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description RetargetingAnimationJob Destroy(RetargetingAnimationJob) Declaration public override void Destroy(RetargetingAnimationJob job) Parameters Type Name Description RetargetingAnimationJob job Update(RetargetingAnimationJob, ref T) Declaration public override void Update(RetargetingAnimationJob job, ref T data) Parameters Type Name Description RetargetingAnimationJob job T data"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingAnimationRig.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingAnimationRig.html",
    "title": "Class RetargetingAnimationRig | Unity-Movement Documentation",
    "keywords": "Class RetargetingAnimationRig Handles the animation rig on the retargeting layer. Inheritance System.Object RetargetingAnimationRig Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class RetargetingAnimationRig Fields _ovrSkeletonConstraints IOVRSkeletonConstraint-based components. Declaration protected MonoBehaviour[] _ovrSkeletonConstraints Field Value Type Description MonoBehaviour [] _rebindAnimator If true, rebind the animator upon a skeletal change. Declaration protected bool _rebindAnimator Field Value Type Description System.Boolean _reEnableRig If true, disable then re-enable the rig upon a skeletal change. Declaration protected bool _reEnableRig Field Value Type Description System.Boolean _rigBuilder Rig builder on character supporting Animation rigging. Declaration protected RigBuilder _rigBuilder Field Value Type Description RigBuilder _rigToggleOnFocus If true, disable then re-enable the rig upon a focus change. Declaration protected bool _rigToggleOnFocus Field Value Type Description System.Boolean Properties OVRSkeletonConstraintComps IOVRSkeletonConstraint-based components. Declaration public MonoBehaviour[] OVRSkeletonConstraintComps { get; set; } Property Value Type Description MonoBehaviour [] RebindAnimator If true, rebind the animator upon a skeletal change. Declaration public bool RebindAnimator { get; set; } Property Value Type Description System.Boolean ReEnableRig If true, disable then re-enable the rig upon a skeletal change. Declaration public bool ReEnableRig { get; set; } Property Value Type Description System.Boolean RigBuilderComp Rig builder on character supporting Animation rigging. Declaration public RigBuilder RigBuilderComp { get; set; } Property Value Type Description RigBuilder RigToggleOnFocus If true, disable then re-enable the rig upon a focus change. Declaration public bool RigToggleOnFocus { get; set; } Property Value Type Description System.Boolean Methods AddSkeletalConstraint(RetargetingLayer, MonoBehaviour) Adds skeletal constraint. Declaration public virtual void AddSkeletalConstraint(RetargetingLayer retargetingLayer, MonoBehaviour newConstraint) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. MonoBehaviour newConstraint New constraint to add. CheckAndAddMissingCopyPoseAnimationConstraint(RetargetingAnimationConstraint, RetargetingLayer, Boolean) Check and add missing copy pose animation constraints. Declaration protected virtual CopyPoseConstraint CheckAndAddMissingCopyPoseAnimationConstraint(RetargetingAnimationConstraint retargetConstraint, RetargetingLayer retargetingLayer, bool shouldCopyPoseToOriginal) Parameters Type Name Description RetargetingAnimationConstraint retargetConstraint The retargeting constraint for the copy pose constraint. RetargetingLayer retargetingLayer The retargeting layer. System.Boolean shouldCopyPoseToOriginal True if the pose is the original pose. Returns Type Description CopyPoseConstraint Returns the created copy pose constraint. OnApplicationFocus(RetargetingLayer, Boolean) Disable and re-enable the rig if _rigToggleOnFocus is enabled. Do this for builds only. We don't want to stop everything if we run inside of the editor. Declaration public virtual void OnApplicationFocus(RetargetingLayer retargetingLayer, bool hasFocus) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. System.Boolean hasFocus True if the application is currently focused. SetupRig(RetargetingLayer) Setup the animation rig if the skeleton is initialized. Declaration protected virtual void SetupRig(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. UpdateRig(RetargetingLayer) Initialize the animation rig if the skeleton is initialized, and check to re-enable the rig if necessary. Declaration public virtual void UpdateRig(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer UpdateSkeletalConstraintInterfaceReferences(RetargetingLayer) Update skeletal constraint interface references. Declaration protected virtual void UpdateSkeletalConstraintInterfaceReferences(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer ValidateRig(RetargetingLayer) Validate the animation rig by checking the animation rigging skeleton constraints. Declaration public virtual void ValidateRig(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer."
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingBlendHandProcessor.HeadView.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingBlendHandProcessor.HeadView.html",
    "title": "Enum RetargetingBlendHandProcessor.HeadView | Unity-Movement Documentation",
    "keywords": "Enum RetargetingBlendHandProcessor.HeadView Enum used to determine which type of head should be used to blend hands. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum HeadView Fields Name Description BodyTracking OVRCameraRig"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingBlendHandProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingBlendHandProcessor.html",
    "title": "Class RetargetingBlendHandProcessor | Unity-Movement Documentation",
    "keywords": "Class RetargetingBlendHandProcessor Increases hand accuracy as they appear into view. Inheritance System.Object RetargetingProcessor RetargetingBlendHandProcessor Implements IRetargetingProcessor Inherited Members RetargetingProcessor.Weight RetargetingProcessor.CleanUp() RetargetingProcessor.RespondToCalibration(RetargetingLayer, IList<OVRBone>) RetargetingProcessor.PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) RetargetingProcessor.ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) RetargetingProcessor.ReadJSONConfigFromFile(String) RetargetingProcessor.ApplyJSONConfig(String) RetargetingProcessor.GetJSONConfig() RetargetingProcessor.ProcessorType Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public sealed class RetargetingBlendHandProcessor : RetargetingProcessor, IRetargetingProcessor Properties BlendCurve Declaration public AnimationCurve BlendCurve { get; set; } Property Value Type Description AnimationCurve BoneIdToTest Declaration public OVRHumanBodyBonesMappings.BodyTrackingBoneId BoneIdToTest { get; set; } Property Value Type Description OVRHumanBodyBonesMappings.BodyTrackingBoneId FullBodyBoneIdToTest Declaration public OVRHumanBodyBonesMappings.FullBodyTrackingBoneId FullBodyBoneIdToTest { get; set; } Property Value Type Description OVRHumanBodyBonesMappings.FullBodyTrackingBoneId HeadViewType Declaration public RetargetingBlendHandProcessor.HeadView HeadViewType { get; set; } Property Value Type Description RetargetingBlendHandProcessor.HeadView IsFullBody Declaration public bool IsFullBody { get; set; } Property Value Type Description System.Boolean MaxDistance Declaration public float MaxDistance { get; set; } Property Value Type Description System.Single MinDistance Declaration public float MinDistance { get; set; } Property Value Type Description System.Single Methods CopyData(RetargetingProcessor) Deep copy data from another processor to this processor. Declaration public override void CopyData(RetargetingProcessor source) Parameters Type Name Description RetargetingProcessor source The source processor to copy from. Overrides RetargetingProcessor.CopyData(RetargetingProcessor) DrawGizmos() Allow drawing debugging gizmos. Declaration public override void DrawGizmos() Overrides RetargetingProcessor.DrawGizmos() GetHandedness() Returns handedness value of processor. Declaration public Handedness GetHandedness() Returns Type Description Handedness Handedness. ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public override void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration public override void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. Overrides RetargetingProcessor.SetupRetargetingProcessor(RetargetingLayer) Implements IRetargetingProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingConstraintData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingConstraintData.html",
    "title": "Struct RetargetingConstraintData | Unity-Movement Documentation",
    "keywords": "Struct RetargetingConstraintData Retargeting data used by the constraint. Implements the retargeting interface. Implements IRetargetingData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct RetargetingConstraintData : IRetargetingData Properties AllowDynamicAdjustmentsRuntime Declaration public bool AllowDynamicAdjustmentsRuntime { get; set; } Property Value Type Description System.Boolean AvatarMaskComp AvatarMask instance accessor. Declaration public AvatarMask AvatarMaskComp { get; set; } Property Value Type Description AvatarMask DummyTransform Used to create job information in case it becomes allocated before the constraint has a chance to run. Declaration public readonly Transform DummyTransform { get; } Property Value Type Description Transform RetargetingLayerComp Declaration public RetargetingLayer RetargetingLayerComp { get; set; } Property Value Type Description RetargetingLayer Skeleton The OVRSkeleton component. Declaration public readonly OVRSkeleton Skeleton { get; } Property Value Type Description OVRSkeleton Methods CreateAvatarMaskInstances() Initializes mask instances based on what value is set in the corresponding fields. Declaration public void CreateAvatarMaskInstances() HasDataInitialized() Indicates if data has initialized or not. Declaration public bool HasDataInitialized() Returns Type Description System.Boolean True if data has initialized, false if not. IsValid() Declaration public bool IsValid() Returns Type Description System.Boolean SetDefaultValues() Declaration public void SetDefaultValues() SetUp(GameObject, GameObject) Set up all job data. Even if the skeleton has been initialized, dummy data is used as a fallback. Declaration public void SetUp(GameObject dummySourceObject, GameObject dummyTargetObject) Parameters Type Name Description GameObject dummySourceObject Fallback source object if skeleton is not ready. GameObject dummyTargetObject Fallback target object if skeleton is not ready. UpdateDataArraysWithAdjustments() Updates data arrays with adjustments from RetargetingLayer. Declaration public void UpdateDataArraysWithAdjustments() UpdateDynamicMetadata() Update dynamic data, can be useful if user changes it at runtime. Declaration public void UpdateDynamicMetadata() Explicit Interface Implementations IRetargetingData.RotationAdjustments Optional rotational adjustment to be applied during retargeting. Declaration readonly Quaternion[] IRetargetingData.RotationAdjustments { get; } Returns Type Description Quaternion [] IRetargetingData.RotationOffsets Rotation offset to be applied during retargeting. Declaration readonly Quaternion[] IRetargetingData.RotationOffsets { get; } Returns Type Description Quaternion [] IRetargetingData.ShouldUpdatePosition Indicates if target transform's position should be updated. Once a position is updated, the original position will be lost. Declaration readonly bool[] IRetargetingData.ShouldUpdatePosition { get; } Returns Type Description System.Boolean [] IRetargetingData.ShouldUpdateRotation Indicates if target transform's rotation should be updated. Once a rotation is updated, the original rotation will be lost. Declaration readonly bool[] IRetargetingData.ShouldUpdateRotation { get; } Returns Type Description System.Boolean [] IRetargetingData.SourceTransforms Source transforms used for retargeting. Declaration readonly Transform[] IRetargetingData.SourceTransforms { get; } Returns Type Description Transform [] IRetargetingData.TargetTransforms Target transforms affected by retargeting. Declaration readonly Transform[] IRetargetingData.TargetTransforms { get; } Returns Type Description Transform [] Implements IRetargetingData"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingHandDeformationProcessor.FingerBonePairData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingHandDeformationProcessor.FingerBonePairData.html",
    "title": "Class RetargetingHandDeformationProcessor.FingerBonePairData | Unity-Movement Documentation",
    "keywords": "Class RetargetingHandDeformationProcessor.FingerBonePairData Finger class used for deformation. Inheritance System.Object RetargetingHandDeformationProcessor.FingerBonePairData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class FingerBonePairData Constructors FingerBonePairData(HumanBodyBones, HumanBodyBones, Single) Main constructor. Declaration public FingerBonePairData(HumanBodyBones startBone, HumanBodyBones endBone, float distance) Parameters Type Name Description HumanBodyBones startBone HumanBodyBones endBone System.Single distance Fields BoneAdjustment The adjustment for the bone transform. Declaration public AffineTransform BoneAdjustment Field Value Type Description AffineTransform EndBone The end bone. Declaration public HumanBodyBones EndBone Field Value Type Description HumanBodyBones StartBone The start bone. Declaration public HumanBodyBones StartBone Field Value Type Description HumanBodyBones Methods ApplyOffsets() Apply user defined offsets. Declaration public void ApplyOffsets() CacheBonePairTransforms(Animator) Cache the bone pair transform references. Declaration public void CacheBonePairTransforms(Animator animator) Parameters Type Name Description Animator animator The animator to get the references from. UpdateDirection() Update the direction of the bone pair. Declaration public void UpdateDirection() UpdatePositions(Vector3, Single) Updates the end bone transform position with the direction and distance added to the start bone transform position, applying any defined offsets. Declaration public void UpdatePositions(Vector3 scaleFactor, float weight) Parameters Type Name Description Vector3 scaleFactor The scale to be applied. System.Single weight The weight to blend to the target position."
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingHandDeformationProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingHandDeformationProcessor.html",
    "title": "Class RetargetingHandDeformationProcessor | Unity-Movement Documentation",
    "keywords": "Class RetargetingHandDeformationProcessor Retargeting processor. Inheritance System.Object RetargetingProcessor RetargetingHandDeformationProcessor Implements IRetargetingProcessor Inherited Members RetargetingProcessor.Weight RetargetingProcessor.CleanUp() RetargetingProcessor.RespondToCalibration(RetargetingLayer, IList<OVRBone>) RetargetingProcessor.ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) RetargetingProcessor.DrawGizmos() RetargetingProcessor.ReadJSONConfigFromFile(String) RetargetingProcessor.ApplyJSONConfig(String) RetargetingProcessor.GetJSONConfig() RetargetingProcessor.ProcessorType Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public sealed class RetargetingHandDeformationProcessor : RetargetingProcessor, IRetargetingProcessor Properties FingerBonePairs Declaration public List<RetargetingHandDeformationProcessor.FingerBonePairData> FingerBonePairs { get; set; } Property Value Type Description List < RetargetingHandDeformationProcessor.FingerBonePairData > StartingScale Declaration public Vector3 StartingScale { get; set; } Property Value Type Description Vector3 Methods CalculateFingerData(Animator) Calculate the finger data for an animator. Declaration public void CalculateFingerData(Animator animator) Parameters Type Name Description Animator animator CopyData(RetargetingProcessor) Deep copy data from another processor to this processor. Declaration public override void CopyData(RetargetingProcessor source) Parameters Type Name Description RetargetingProcessor source The source processor to copy from. Overrides RetargetingProcessor.CopyData(RetargetingProcessor) PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration public override void PrepareRetargetingProcessor(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public override void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration public override void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. Overrides RetargetingProcessor.SetupRetargetingProcessor(RetargetingLayer) Implements IRetargetingProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingLayer.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingLayer.html",
    "title": "Class RetargetingLayer | Unity-Movement Documentation",
    "keywords": "Class RetargetingLayer Retargeting class that inherits from OVRUnityHumanoidSkeletonRetargeter and provides functions that work with animation rigging. Inheritance System.Object RetargetingLayer Implements IOVRSkeletonProcessorAggregator Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingLayer : OVRUnityHumanoidSkeletonRetargeter, IOVRSkeletonProcessorAggregator Fields _applyAnimationConstraintsToCorrectedPositions Apply position offsets done by animation rigging constraints for corrected positions. Due to the limited motion of humanoid avatars, this should be set if any animation rigging constraints are applied after the retargeting job runs. Declaration protected bool _applyAnimationConstraintsToCorrectedPositions Field Value Type Description System.Boolean _customBindPose The custom bind pose that can be used to modify the current bind pose. Declaration protected BindPoseObjectSkeleton _customBindPose Field Value Type Description BindPoseObjectSkeleton _enableTrackingByProxy Create proxy transforms that track the skeletal bones. If the skeletal bone transforms change, that won't necessitate creating new proxy transforms in most cases. This means any Animation jobs that track the skeletal bone transform can use proxies instead, which get re-allocated less often. Re-allocation would mean having to create new animation jobs. Declaration protected bool _enableTrackingByProxy Field Value Type Description System.Boolean _externalBoneTargets External bone targets to be updated based on body tracking. Declaration protected ExternalBoneTargets _externalBoneTargets Field Value Type Description ExternalBoneTargets _retargetedBoneMappings Retargeted bone mappings to be updated based on valid bones in the humanoid. Declaration protected RetargetedBoneMappings _retargetedBoneMappings Field Value Type Description RetargetedBoneMappings _retargetingAnimationConstraint Related retargeting constraint. Declaration protected RetargetingAnimationConstraint _retargetingAnimationConstraint Field Value Type Description RetargetingAnimationConstraint _retargetingAnimationRig Retargeting animation rig to be updated based on body tracking. Declaration protected RetargetingAnimationRig _retargetingAnimationRig Field Value Type Description RetargetingAnimationRig _retargetingProcessors List of retargeting processors, which run in late update after retargeting and animation rigging. Declaration protected List<RetargetingProcessor> _retargetingProcessors Field Value Type Description List < RetargetingProcessor > _skeletonPostProcessing Triggers methods that can alter bone translations and rotations, before rendering and physics Declaration protected RetargetingLayer.OVRSkeletonProcessor _skeletonPostProcessing Field Value Type Description RetargetingLayer.OVRSkeletonProcessor Properties ApplyAnimationConstraintsToCorrectedPositions Apply position offsets done by animation rigging constraints for corrected positions. Due to the limited motion of humanoid avatars, this should be set if any animation rigging constraints are applied after the retargeting job runs. Declaration public bool ApplyAnimationConstraintsToCorrectedPositions { get; set; } Property Value Type Description System.Boolean CustomBindPose The custom bind pose that can be used to modify the current bind pose. Declaration public BindPoseObjectSkeleton CustomBindPose { get; set; } Property Value Type Description BindPoseObjectSkeleton CustomPositionsToCorrectLateUpdateMask Allows one to specify which positions to correct during late update. Declaration public AvatarMask CustomPositionsToCorrectLateUpdateMask { get; set; } Property Value Type Description AvatarMask EnableTrackingByProxy Create proxy transforms that track the skeletal bones. If the skeletal bone transforms change, that won't necessitate creating new proxy transforms in most cases. This means any Animation jobs that track the skeletal bone transform can use proxies instead, which get re-allocated less often. Re-allocation would mean having to create new animation jobs. Declaration public bool EnableTrackingByProxy { get; set; } Property Value Type Description System.Boolean ExternalBoneTargetsInst External bone targets to be updated based on body tracking. Declaration public ExternalBoneTargets ExternalBoneTargetsInst { get; set; } Property Value Type Description ExternalBoneTargets JointPositionAdjustments The array of joint position adjustments. Used by copy pose job. Declaration public RetargetingLayer.JointPositionAdjustment[] JointPositionAdjustments { get; } Property Value Type Description RetargetingLayer.JointPositionAdjustment [] ProxyChangeCount Triggered if proxy transforms were recreated. Declaration public int ProxyChangeCount { get; } Property Value Type Description System.Int32 RetargetedBoneMappingsInst Retargeted bone mappings to be updated based on valid bones in the humanoid. Declaration public RetargetedBoneMappings RetargetedBoneMappingsInst { get; set; } Property Value Type Description RetargetedBoneMappings RetargetingAnimationRigInst Retargeting animation rig to be updated based on body tracking. Declaration public RetargetingAnimationRig RetargetingAnimationRigInst { get; set; } Property Value Type Description RetargetingAnimationRig RetargetingConstraint Related retargeting constraint. Declaration public RetargetingAnimationConstraint RetargetingConstraint { get; set; } Property Value Type Description RetargetingAnimationConstraint RetargetingProcessors List of retargeting processors, which run in late update after retargeting and animation rigging. Declaration public List<RetargetingProcessor> RetargetingProcessors { get; set; } Property Value Type Description List < RetargetingProcessor > SkeletonPostProcessingEv Triggers methods that can alter bone translations and rotations, before rendering and physics Declaration public RetargetingLayer.OVRSkeletonProcessor SkeletonPostProcessingEv { get; set; } Property Value Type Description RetargetingLayer.OVRSkeletonProcessor Methods AddProcessor(IOVRSkeletonProcessor) Adds given processor to this IOVRSkeletonProcessorAggregator Declaration public void AddProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor AddRetargetingProcessor(RetargetingProcessor) Add the specified retargeting processor. Declaration public void AddRetargetingProcessor(RetargetingProcessor processor) Parameters Type Name Description RetargetingProcessor processor The processor to be added. ApplyJSONConfig(String) Applies JSON config to file. Declaration public void ApplyJSONConfig(string jsonData) Parameters Type Name Description System.String jsonData JSON data. Awake() Check for required components. Declaration protected override void Awake() FillTransformArrays(List<Transform>, List<Transform>, List<Boolean>, List<Boolean>, List<Quaternion>, List<Quaternion>) Fills transform lists with meta data. Declaration public void FillTransformArrays(List<Transform> sourceTransforms, List<Transform> targetTransforms, List<bool> shouldUpdatePositions, List<bool> shouldUpdateRotations, List<Quaternion> rotationOffsets, List<Quaternion> rotationAdjustments) Parameters Type Name Description List < Transform > sourceTransforms Source transforms. List < Transform > targetTransforms Target transforms. List < System.Boolean > shouldUpdatePositions If joint positions should be updated or not. List < System.Boolean > shouldUpdateRotations If joint rotations should be updated or not. List < Quaternion > rotationOffsets Rotation offset per joint. List < Quaternion > rotationAdjustments Rotation tweak per joint. GetAnimatorTargetSkeleton() Returns the animator used for retargeting. Declaration public Animator GetAnimatorTargetSkeleton() Returns Type Description Animator The animator used for retargeting. GetCorrectionQuaternion(HumanBodyBones) Returns the correction quaternion for a human body bone, if it exists. Declaration public Quaternion? GetCorrectionQuaternion(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone The human body bone to check for. Returns Type Description System.Nullable < Quaternion > The correction quaternion for a human body bone. Returns null if it doesn't exist. GetCustomBoneIdToHumanBodyBone(BoneId) Returns the custom bone id to human body bone pairing, if it exists. Declaration public HumanBodyBones? GetCustomBoneIdToHumanBodyBone(BoneId boneId) Parameters Type Name Description BoneId boneId The bone id to check for. Returns Type Description System.Nullable < HumanBodyBones > The human body bone for a custom bone id. Returns null if it doesn't exist. GetFindAdjustment(HumanBodyBones) Returns the joint adjustment for a human body bone. Declaration public JointAdjustment GetFindAdjustment(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone The human body bone to check for. Returns Type Description JointAdjustment The joint adjustment for a human body bone. GetHumanBodyBoneToBodySection(HumanBodyBones) Returns the human body bone to body section pairing. Declaration public OVRHumanBodyBonesMappings.BodySection GetHumanBodyBoneToBodySection(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone The human body bone to check for. Returns Type Description OVRHumanBodyBonesMappings.BodySection The body section for a human body bone. GetJSONConfig() Returns JSON config as string. Declaration public string GetJSONConfig() Returns Type Description System.String JSON config as string. GetNumberOfTransformsRetargeted() Gets number of transforms being retargeted currently. This can change during initialization. Declaration public int GetNumberOfTransformsRetargeted() Returns Type Description System.Int32 Number of transforms with a valid correction quaternion. GetOriginalJoint(HumanBodyBones) Returns the original joint for a human body bone. Declaration public Transform GetOriginalJoint(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone The human body bone to check for. Returns Type Description Transform The original joint for a human body bone. GetShouldUpdatePositionOfBone(HumanBodyBones) Returns true if the position of a human body bone should be updated. Declaration public bool GetShouldUpdatePositionOfBone(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone The human body bone to check for. Returns Type Description System.Boolean True if the position of a human body should be updated. InitializeBindPose() Initializes the custom bind pose if set. Declaration protected override void InitializeBindPose() LateUpdate() Allows fixing joints via the retargeting processors. The avatar does not allow precise finger positions even with translate DoF checked. Declaration protected virtual void LateUpdate() OnApplicationFocus(Boolean) Declaration protected virtual void OnApplicationFocus(bool hasFocus) Parameters Type Name Description System.Boolean hasFocus OnDrawGizmos() Declaration protected virtual void OnDrawGizmos() ReadJSONConfigFromFile(String) Read JSON config from file and applies it. Declaration public void ReadJSONConfigFromFile(string filePath) Parameters Type Name Description System.String filePath File path to read from. RemoveProcessor(IOVRSkeletonProcessor) Removes given processor from IOVRSkeletonProcessorAggregator Declaration public void RemoveProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor ShouldUpdatePositionOfBone(HumanBodyBones) Declaration protected virtual bool ShouldUpdatePositionOfBone(HumanBodyBones humanBodyBone) Parameters Type Name Description HumanBodyBones humanBodyBone Returns Type Description System.Boolean Start() Initialize base class and also any variables required by this class, such as the positions and rotations of the character joints at rest pose. Declaration protected override void Start() Update() Declaration protected override void Update() UpdateAdjustments(Quaternion[], Boolean[], Boolean[], Quaternion[], AvatarMask) Update adjustment arrays. Declaration public void UpdateAdjustments(Quaternion[] rotationOffsets, bool[] shouldUpdatePositions, bool[] shouldUpdateRotations, Quaternion[] rotationAdjustments, AvatarMask avatarMask) Parameters Type Name Description Quaternion [] rotationOffsets Rotation offset per joint. System.Boolean [] shouldUpdatePositions If joint positions should be updated or not. System.Boolean [] shouldUpdateRotations If joint rotations should be updated or not. Quaternion [] rotationAdjustments Rotation tweak per joint AvatarMask avatarMask Mask to restrict retargeting. UpdateBoneDataToArray() Declaration protected virtual void UpdateBoneDataToArray() UpdateBonePairMappings() Update bone pair mappings for the retargeted humanoid. Declaration public void UpdateBonePairMappings() Implements IOVRSkeletonProcessorAggregator"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingLayer.JointPositionAdjustment.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingLayer.JointPositionAdjustment.html",
    "title": "Class RetargetingLayer.JointPositionAdjustment | Unity-Movement Documentation",
    "keywords": "Class RetargetingLayer.JointPositionAdjustment Joint position adjustment to be applied to corrected positions. Inheritance System.Object RetargetingLayer.JointPositionAdjustment Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class JointPositionAdjustment Fields FinalPosition The final position, post-animation constraints. Declaration public Vector3 FinalPosition Field Value Type Description Vector3 Joint Joint to adjust. Declaration public HumanBodyBones Joint Field Value Type Description HumanBodyBones OriginalPosition The original position, post-retargeting but before any other animation constraints. Declaration public Vector3 OriginalPosition Field Value Type Description Vector3 Methods GetPositionOffset() Get the difference between the original and final positions. Declaration public Vector3 GetPositionOffset() Returns Type Description Vector3 Position offset between the original and final positions."
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingLayer.OVRSkeletonProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingLayer.OVRSkeletonProcessor.html",
    "title": "Delegate RetargetingLayer.OVRSkeletonProcessor | Unity-Movement Documentation",
    "keywords": "Delegate RetargetingLayer.OVRSkeletonProcessor Callback that can adjust a given skeleton. Is the functional backend that implements IOVRSkeletonProcessorAggregator Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public delegate void OVRSkeletonProcessor(OVRSkeleton skeleton); Parameters Type Name Description OVRSkeleton skeleton"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingLayerEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingLayerEditor.html",
    "title": "Class RetargetingLayerEditor | Unity-Movement Documentation",
    "keywords": "Class RetargetingLayerEditor Custom editor for RetargetingLayer . Inheritance System.Object RetargetingLayerEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingLayerEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessor.html",
    "title": "Class RetargetingProcessor | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessor Base class for retargeting processors, meant to be used as a scriptable object. Inheritance System.Object RetargetingProcessor RetargetingBlendHandProcessor RetargetingHandDeformationProcessor RetargetingProcessorCorrectBones RetargetingProcessorCorrectHand Implements IRetargetingProcessor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class RetargetingProcessor : ScriptableObject, IRetargetingProcessor Fields Weight The weight of this processor. Declaration public float Weight Field Value Type Description System.Single Properties ProcessorType Declaration public virtual RetargetingProcessorType ProcessorType { get; set; } Property Value Type Description RetargetingProcessorType Methods ApplyJSONConfig(String) Applies JSON config. Declaration public virtual void ApplyJSONConfig(string jsonData) Parameters Type Name Description System.String jsonData JSON data. CleanUp() Allows clean up of resources used. Declaration public virtual void CleanUp() CopyData(RetargetingProcessor) Deep copy data from another processor to this processor. Declaration public virtual void CopyData(RetargetingProcessor source) Parameters Type Name Description RetargetingProcessor source The source processor to copy from. DrawGizmos() Allow drawing debugging gizmos. Declaration public virtual void DrawGizmos() GetJSONConfig() Returns JSON config as string. Declaration public virtual string GetJSONConfig() Returns Type Description System.String JSON config as string. PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration public virtual void PrepareRetargetingProcessor(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public virtual void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) Process retargeting layer, job version. Declaration public virtual JobHandle ProcessRetargetingLayerJob(JobHandle? previousJob, RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description System.Nullable < JobHandle > previousJob Previous job, if any. RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The body tracking bones. Returns Type Description JobHandle Handle of job created. ReadJSONConfigFromFile(String) Reads and applies JSON config from file. Declaration public virtual void ReadJSONConfigFromFile(string filePath) Parameters Type Name Description System.String filePath File path to read from. RespondToCalibration(RetargetingLayer, IList<OVRBone>) Responds to calibration event. Declaration public virtual void RespondToCalibration(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer Retargeting layer component. IList < OVRBone > ovrBones Body tracking bones. SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration public virtual void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. Implements IRetargetingProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectBones.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectBones.html",
    "title": "Class RetargetingProcessorCorrectBones | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorCorrectBones Retargeting processor used to apply corrected bone positions from the retargeted animation job output. Inheritance System.Object RetargetingProcessor RetargetingProcessorCorrectBones Implements IRetargetingProcessor Inherited Members RetargetingProcessor.Weight RetargetingProcessor.DrawGizmos() RetargetingProcessor.ReadJSONConfigFromFile(String) RetargetingProcessor.ApplyJSONConfig(String) RetargetingProcessor.GetJSONConfig() Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public sealed class RetargetingProcessorCorrectBones : RetargetingProcessor, IRetargetingProcessor Properties CorrectPositionsLateUpdate Declaration public bool CorrectPositionsLateUpdate { get; set; } Property Value Type Description System.Boolean FingerPositionCorrectionWeight Declaration public float FingerPositionCorrectionWeight { get; set; } Property Value Type Description System.Single ProcessorType Declaration public override RetargetingProcessorType ProcessorType { get; set; } Property Value Type Description RetargetingProcessorType Overrides RetargetingProcessor.ProcessorType ShoulderCorrectionWeightLateUpdate Declaration public float ShoulderCorrectionWeightLateUpdate { get; set; } Property Value Type Description System.Single Methods CleanUp() Allows clean up of resources used. Declaration public override void CleanUp() Overrides RetargetingProcessor.CleanUp() CopyData(RetargetingProcessor) Deep copy data from another processor to this processor. Declaration public override void CopyData(RetargetingProcessor source) Parameters Type Name Description RetargetingProcessor source The source processor to copy from. Overrides RetargetingProcessor.CopyData(RetargetingProcessor) PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration public override void PrepareRetargetingProcessor(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public override void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) Declaration public override JobHandle ProcessRetargetingLayerJob(JobHandle? previousJob, RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description System.Nullable < JobHandle > previousJob RetargetingLayer retargetingLayer IList < OVRBone > ovrBones Returns Type Description JobHandle Overrides RetargetingProcessor.ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) RegenJobData(RetargetingLayer, IList<OVRBone>) Declaration public void RegenJobData(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer IList < OVRBone > ovrBones RegenJobDataFlag() Declaration public void RegenJobDataFlag() RespondToCalibration(RetargetingLayer, IList<OVRBone>) Responds to calibration event. Declaration public override void RespondToCalibration(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer Retargeting layer component. IList < OVRBone > ovrBones Body tracking bones. Overrides RetargetingProcessor.RespondToCalibration(RetargetingLayer, IList<OVRBone>) SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration public override void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. Overrides RetargetingProcessor.SetupRetargetingProcessor(RetargetingLayer) Implements IRetargetingProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.HandProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.HandProcessor.html",
    "title": "Class RetargetingProcessorCorrectHand.HandProcessor | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorCorrectHand.HandProcessor Processor for blending and correcting a hand with IK. Inheritance System.Object RetargetingProcessorCorrectHand.HandProcessor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class HandProcessor Fields BlendHandWeight The weight of the hand blending. Declaration public float BlendHandWeight Field Value Type Description System.Single HandIKWeight The weight of the hand IK. Declaration public float HandIKWeight Field Value Type Description System.Single Properties ArmChainBones Declaration public HumanBodyBones[] ArmChainBones { get; set; } Property Value Type Description HumanBodyBones [] BoneIdToTest Declaration public OVRHumanBodyBonesMappings.BodyTrackingBoneId BoneIdToTest { get; set; } Property Value Type Description OVRHumanBodyBonesMappings.BodyTrackingBoneId CustomHandTargetPosition Declaration public Vector3? CustomHandTargetPosition { get; set; } Property Value Type Description System.Nullable < Vector3 > FullBodyBoneIdToTest Declaration public OVRHumanBodyBonesMappings.FullBodyTrackingBoneId FullBodyBoneIdToTest { get; set; } Property Value Type Description OVRHumanBodyBonesMappings.FullBodyTrackingBoneId FullBodySecondBoneIdToTest Declaration public OVRHumanBodyBonesMappings.FullBodyTrackingBoneId FullBodySecondBoneIdToTest { get; set; } Property Value Type Description OVRHumanBodyBonesMappings.FullBodyTrackingBoneId HandBone The hand bone. Declaration public Transform HandBone { get; } Property Value Type Description Transform UseCustomHandTargetPosition Declaration public bool UseCustomHandTargetPosition { get; set; } Property Value Type Description System.Boolean UseSecondaryBoneId Declaration public bool UseSecondaryBoneId { get; set; } Property Value Type Description System.Boolean UseWorldHandPosition Declaration public bool UseWorldHandPosition { get; set; } Property Value Type Description System.Boolean Methods DrawGizmos(RetargetingProcessorCorrectHand.HeadView) Allow drawing debugging gizmos. Declaration public void DrawGizmos(RetargetingProcessorCorrectHand.HeadView headView) Parameters Type Name Description RetargetingProcessorCorrectHand.HeadView headView PrepareRetargetingProcessor() Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration public void PrepareRetargetingProcessor() ProcessRetargetingLayer(RetargetingLayer, Vector3, RetargetingProcessorCorrectHand) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, Vector3 targetHandPosition, RetargetingProcessorCorrectHand parentProcessor) Parameters Type Name Description RetargetingLayer retargetingLayer Vector3 targetHandPosition RetargetingProcessorCorrectHand parentProcessor SetupRetargetingProcessor(RetargetingLayer, RetargetingProcessorCorrectHand, Handedness) Setup the retargeting processor; this should only be run once. Declaration public void SetupRetargetingProcessor(RetargetingLayer retargetingLayer, RetargetingProcessorCorrectHand parentProcessor, Handedness handedness) Parameters Type Name Description RetargetingLayer retargetingLayer RetargetingProcessorCorrectHand parentProcessor Handedness handedness"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.HeadView.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.HeadView.html",
    "title": "Enum RetargetingProcessorCorrectHand.HeadView | Unity-Movement Documentation",
    "keywords": "Enum RetargetingProcessorCorrectHand.HeadView Enum used to determine which type of head should be used to blend hands. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum HeadView Fields Name Description BodyTracking OVRCameraRig"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.html",
    "title": "Class RetargetingProcessorCorrectHand | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorCorrectHand Retargeting processor used to fix the arm via an IK algorithm so that the retargeted hand position matches the tracked hand position. Inheritance System.Object RetargetingProcessor RetargetingProcessorCorrectHand Implements IRetargetingProcessor Inherited Members RetargetingProcessor.Weight RetargetingProcessor.CleanUp() RetargetingProcessor.RespondToCalibration(RetargetingLayer, IList<OVRBone>) RetargetingProcessor.ProcessRetargetingLayerJob(Nullable<JobHandle>, RetargetingLayer, IList<OVRBone>) RetargetingProcessor.ReadJSONConfigFromFile(String) RetargetingProcessor.ApplyJSONConfig(String) RetargetingProcessor.GetJSONConfig() RetargetingProcessor.ProcessorType Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public sealed class RetargetingProcessorCorrectHand : RetargetingProcessor, IRetargetingProcessor Properties BlendCurve Declaration public AnimationCurve BlendCurve { get; set; } Property Value Type Description AnimationCurve HandIKType Declaration public RetargetingProcessorCorrectHand.IKType HandIKType { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.IKType HeadViewType Declaration public RetargetingProcessorCorrectHand.HeadView HeadViewType { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.HeadView IKIterations Declaration public int IKIterations { get; set; } Property Value Type Description System.Int32 IKTolerance Declaration public float IKTolerance { get; set; } Property Value Type Description System.Single IsFullBody Declaration public bool IsFullBody { get; set; } Property Value Type Description System.Boolean LeftHandProcessor Declaration public RetargetingProcessorCorrectHand.HandProcessor LeftHandProcessor { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.HandProcessor MaxDistance Declaration public float MaxDistance { get; set; } Property Value Type Description System.Single MaxHandStretch Declaration public float MaxHandStretch { get; set; } Property Value Type Description System.Single MaxShoulderStretch Declaration public float MaxShoulderStretch { get; set; } Property Value Type Description System.Single MinDistance Declaration public float MinDistance { get; set; } Property Value Type Description System.Single RightHandProcessor Declaration public RetargetingProcessorCorrectHand.HandProcessor RightHandProcessor { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.HandProcessor SyncOvrSettings Declaration public RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings SyncOvrSettings { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings Methods CopyData(RetargetingProcessor) Deep copy data from another processor to this processor. Declaration public override void CopyData(RetargetingProcessor source) Parameters Type Name Description RetargetingProcessor source The source processor to copy from. Overrides RetargetingProcessor.CopyData(RetargetingProcessor) DrawGizmos() Allow drawing debugging gizmos. Declaration public override void DrawGizmos() Overrides RetargetingProcessor.DrawGizmos() PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) Prepare the retargeting processor; this is run after retargeting, but before any processors have run. Declaration public override void PrepareRetargetingProcessor(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.PrepareRetargetingProcessor(RetargetingLayer, IList<OVRBone>) ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) Processes a RetargetingLayer ; this is run after retargeting and in order of processors. Declaration public override void ProcessRetargetingLayer(RetargetingLayer retargetingLayer, IList<OVRBone> ovrBones) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. IList < OVRBone > ovrBones The tracked OVR bones. Overrides RetargetingProcessor.ProcessRetargetingLayer(RetargetingLayer, IList<OVRBone>) SetupRetargetingProcessor(RetargetingLayer) Setup the retargeting processor; this should only be run once. Declaration public override void SetupRetargetingProcessor(RetargetingLayer retargetingLayer) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. Overrides RetargetingProcessor.SetupRetargetingProcessor(RetargetingLayer) Implements IRetargetingProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.IKType.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.IKType.html",
    "title": "Enum RetargetingProcessorCorrectHand.IKType | Unity-Movement Documentation",
    "keywords": "Enum RetargetingProcessorCorrectHand.IKType The types of IK available to be used. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum IKType Fields Name Description CCDIK FABRIK None"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings.html",
    "title": "Class RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings Container for settings to sync OVRControllers and Hands. Inheritance System.Object RetargetingProcessorCorrectHand.SyncOvrControllersAndHandsSettings Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class SyncOvrControllersAndHandsSettings Properties MirrorHandControllerOffsets Declaration public bool MirrorHandControllerOffsets { get; set; } Property Value Type Description System.Boolean OvrHandControllerOrientationOffset Declaration public Quaternion OvrHandControllerOrientationOffset { get; set; } Property Value Type Description Quaternion OvrHandControllerPositionOffset Declaration public Vector3 OvrHandControllerPositionOffset { get; set; } Property Value Type Description Vector3 SyncOption Declaration public RetargetingProcessorCorrectHand.SyncOvrOption SyncOption { get; set; } Property Value Type Description RetargetingProcessorCorrectHand.SyncOvrOption"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.SyncOvrOption.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorCorrectHand.SyncOvrOption.html",
    "title": "Enum RetargetingProcessorCorrectHand.SyncOvrOption | Unity-Movement Documentation",
    "keywords": "Enum RetargetingProcessorCorrectHand.SyncOvrOption The type of syncing that should be done if syncing OVR data. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum SyncOvrOption Fields Name Description None Positions PositionsAndRotations Rotations"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorEditor.html",
    "title": "Class RetargetingProcessorEditor | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorEditor Custom editor for RetargetingProcessor . Inheritance System.Object RetargetingProcessorEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingProcessorEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.RetargetingProcessorScriptableObjectDrawer.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RetargetingProcessorScriptableObjectDrawer.html",
    "title": "Class RetargetingProcessorScriptableObjectDrawer | Unity-Movement Documentation",
    "keywords": "Class RetargetingProcessorScriptableObjectDrawer Extends how RetargetingProcessorScriptableObject object references are displayed in the inspector Shows you all values under the object reference Also provides a button to create a new ScriptableObject if property is null. Inheritance System.Object RetargetingProcessorScriptableObjectDrawer Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class RetargetingProcessorScriptableObjectDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description System.Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.AnimationRigging.RiggingUtilities.html": {
    "href": "api/Oculus.Movement.AnimationRigging.RiggingUtilities.html",
    "title": "Class RiggingUtilities | Unity-Movement Documentation",
    "keywords": "Class RiggingUtilities Provides convenient methods and occasional extensions to assist with animation rigging work. Inheritance System.Object RiggingUtilities Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public static class RiggingUtilities Methods DivideVector3(Vector3, Vector3) Returns the result of dividing a Vector3 by another Vector3. Declaration public static Vector3 DivideVector3(Vector3 dividend, Vector3 divisor) Parameters Type Name Description Vector3 dividend The Vector3 dividend. Vector3 divisor The Vector3 divisor. Returns Type Description Vector3 The divided Vector3. FindBoneTransformAnimator(Animator, OVRSkeleton.BoneId, Boolean) Find bone transform from based on . Declaration public static Transform FindBoneTransformAnimator(Animator animator, OVRSkeleton.BoneId boneId, bool isFullBody) Parameters Type Name Description Animator animator to query. OVRSkeleton.BoneId boneId of transform to find. System.Boolean isFullBody If is full body bone or not. Returns Type Description Transform FindBoneTransformFromCustomSkeleton(OVRCustomSkeleton, OVRSkeleton.BoneId) Find bone transform from assuming it has a transform corresponding to . Declaration public static Transform FindBoneTransformFromCustomSkeleton(OVRCustomSkeleton skeleton, OVRSkeleton.BoneId boneId) Parameters Type Name Description OVRCustomSkeleton skeleton to query. OVRSkeleton.BoneId boneId of transform to find. Returns Type Description Transform FindBoneTransformFromSkeleton(OVRSkeleton, Int32, Boolean) Find bone transform from assuming it has a transform corresponding to . Declaration public static Transform FindBoneTransformFromSkeleton(OVRSkeleton skeleton, int boneId, bool isBindPose = false) Parameters Type Name Description OVRSkeleton skeleton to query. System.Int32 boneId of transform to find. System.Boolean isBindPose If bone is obtained via bind pose. Returns Type Description Transform Bone transform. IsFiniteVector3(Vector3) Returns true if this vector3 is finite and not NaN. Declaration public static bool IsFiniteVector3(Vector3 v) Parameters Type Name Description Vector3 v The Vector3 to be checked. Returns Type Description System.Boolean True if valid. IsHumanoidAnimator(Animator) Returns true if animator is a humanoid. Declaration public static bool IsHumanoidAnimator(Animator animator) Parameters Type Name Description Animator animator Animator to check. Returns Type Description System.Boolean True if humanoid, false if not. Vector3IsNonZero(Vector3) Returns true if this Vector3 contains no zero values. Declaration public static bool Vector3IsNonZero(Vector3 v) Parameters Type Name Description Vector3 v The Vector3 to test Returns Type Description System.Boolean True if this Vector3 contains no zero values."
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonHandAdjustment.HandBodyJointPair.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonHandAdjustment.HandBodyJointPair.html",
    "title": "Struct SkeletonHandAdjustment.HandBodyJointPair | Unity-Movement Documentation",
    "keywords": "Struct SkeletonHandAdjustment.HandBodyJointPair Named tuple data structure for mapping between Body and Hand indexes Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct HandBodyJointPair Constructors HandBodyJointPair(HandJointId, BodyJointId) Declaration public HandBodyJointPair(HandJointId hand, BodyJointId body) Parameters Type Name Description HandJointId hand BodyJointId body Fields body Declaration public BodyJointId body Field Value Type Description BodyJointId hand Declaration public HandJointId hand Field Value Type Description HandJointId LeftHandBodyJointPairs List of Hand/Body ID key/value pairs. Used when translating Left Hand joints to match Body joints. Ordered by Hand joint index. Declaration public static readonly SkeletonHandAdjustment.HandBodyJointPair[] LeftHandBodyJointPairs Field Value Type Description SkeletonHandAdjustment.HandBodyJointPair [] RightHandBodyJointPairs List of Hand/Body ID key/value pairs. Used when translating Right Hand joints to match Body joints. Ordered by Hand joint index. Declaration public static readonly SkeletonHandAdjustment.HandBodyJointPair[] RightHandBodyJointPairs Field Value Type Description SkeletonHandAdjustment.HandBodyJointPair [] Operators Implicit((HandJointId hand, BodyJointId body) to SkeletonHandAdjustment.HandBodyJointPair) Used for anonymous tuple conversion Declaration public static implicit operator SkeletonHandAdjustment.HandBodyJointPair((HandJointId hand, BodyJointId body) tuple) Parameters Type Name Description System.ValueTuple < HandJointId , BodyJointId > tuple Returns Type Description SkeletonHandAdjustment.HandBodyJointPair"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonHandAdjustment.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonHandAdjustment.html",
    "title": "Class SkeletonHandAdjustment | Unity-Movement Documentation",
    "keywords": "Class SkeletonHandAdjustment A filter for skeleton data that will apply a hand pose. Use this script to apply a hand pose from Interaction SDK onto a skeleton that can be modified by Inheritance System.Object SkeletonProcessorBehaviour SkeletonHandAdjustment Implements IOVRSkeletonProcessor Inherited Members SkeletonProcessorBehaviour.SkeletonProcessorLabel SkeletonProcessorBehaviour.EnableSkeletonProcessing SkeletonProcessorBehaviour.DefaultLabel(IOVRSkeletonProcessor) Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class SkeletonHandAdjustment : SkeletonProcessorBehaviour, IOVRSkeletonProcessor Fields _cameraRig Should be the OVRCameraRig, which ISDK hands will offset to follow when this process is HandsAreOffset . Declaration protected Transform _cameraRig Field Value Type Description Transform _hand ISDK Hand source. Can be Synthetic hand Declaration protected object _hand Field Value Type Description System.Object _handsAreOffset If the camera rig moves but the body is stationary, this should be true. If the camera rig and body move together, this can stay false. Declaration protected bool _handsAreOffset Field Value Type Description System.Boolean Properties Hand The proper used to adjust the skeleton in this process Declaration public IHand Hand { get; } Property Value Type Description IHand HandsAreOffset If the camera rig moves but the body is stationary, this should be true If the camera rig and body move together, this can stay false Declaration public bool HandsAreOffset { get; set; } Property Value Type Description System.Boolean Methods ProcessSkeleton(OVRSkeleton) Applies hand joint position and rotation to the given OVRSkeleton data Declaration public override void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton Overrides SkeletonProcessorBehaviour.ProcessSkeleton(OVRSkeleton) Start() Initializes according to handedness of _hand Declaration protected void Start() Implements IOVRSkeletonProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregator.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregator.html",
    "title": "Class SkeletonProcessAggregator | Unity-Movement Documentation",
    "keywords": "Class SkeletonProcessAggregator IOVRSkeletonProcessorAggregator Component with Editor UI Inheritance System.Object SkeletonProcessAggregator Implements IOVRSkeletonProcessor IOVRSkeletonProcessorAggregator Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class SkeletonProcessAggregator : MonoBehaviour, IOVRSkeletonProcessor, IOVRSkeletonProcessorAggregator Fields _autoAddTo The IOVRSkeletonProcessorAggregator to give self to Declaration protected UnityEngine.Object _autoAddTo Field Value Type Description UnityEngine.Object Properties EnableSkeletonProcessing Declaration public bool EnableSkeletonProcessing { get; set; } Property Value Type Description System.Boolean SkeletonProcessorLabel Declaration public string SkeletonProcessorLabel { get; } Property Value Type Description System.String SkeletonProcessors Declaration public List<SkeletonProcessAggregator.Item> SkeletonProcessors { get; set; } Property Value Type Description List < SkeletonProcessAggregator.Item > Methods AddProcessor(IOVRSkeletonProcessor) Adds a IOVRSkeletonProcessor to the list Declaration public void AddProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor ProcessSkeleton(OVRSkeleton) Declaration public virtual void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton RemoveProcessor(Component) Removes the given IOVRSkeletonProcessor from the list, if it is valid Declaration public void RemoveProcessor(Component processorComponent) Parameters Type Name Description Component processorComponent RemoveProcessor(IOVRSkeletonProcessor) Removes the given IOVRSkeletonProcessor from the list Declaration public void RemoveProcessor(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor RemoveProcessorsInTransform(Transform) Removes the IOVRSkeletonProcessor in this Transform from the list Declaration public void RemoveProcessorsInTransform(Transform processorObject) Parameters Type Name Description Transform processorObject Implements IOVRSkeletonProcessor IOVRSkeletonProcessorAggregator"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregator.Item.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregator.Item.html",
    "title": "Class SkeletonProcessAggregator.Item | Unity-Movement Documentation",
    "keywords": "Class SkeletonProcessAggregator.Item Abstraction layer for the Unity Editor to manipulate IOVRSkeletonProcessor s Inheritance System.Object SkeletonProcessAggregator.Item Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class Item Constructors Item(IOVRSkeletonProcessor) Declaration public Item(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor Fields Processor Declaration public UnityEngine.Object Processor Field Value Type Description UnityEngine.Object Properties IProcessor Declaration public IOVRSkeletonProcessor IProcessor { get; } Property Value Type Description IOVRSkeletonProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregatorEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonProcessAggregatorEditor.html",
    "title": "Class SkeletonProcessAggregatorEditor | Unity-Movement Documentation",
    "keywords": "Class SkeletonProcessAggregatorEditor Inheritance System.Object SkeletonProcessAggregatorEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class SkeletonProcessAggregatorEditor : OVRSkeletonEditor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonProcessorBehaviour.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonProcessorBehaviour.html",
    "title": "Class SkeletonProcessorBehaviour | Unity-Movement Documentation",
    "keywords": "Class SkeletonProcessorBehaviour A common base class for s. Allows common editor UI Drawer. Inheritance System.Object SkeletonProcessorBehaviour SkeletonHandAdjustment Implements IOVRSkeletonProcessor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class SkeletonProcessorBehaviour : MonoBehaviour, IOVRSkeletonProcessor Properties EnableSkeletonProcessing Declaration public bool EnableSkeletonProcessing { get; set; } Property Value Type Description System.Boolean SkeletonProcessorLabel Declaration public virtual string SkeletonProcessorLabel { get; } Property Value Type Description System.String Methods DefaultLabel(IOVRSkeletonProcessor) Declaration public static string DefaultLabel(IOVRSkeletonProcessor processor) Parameters Type Name Description IOVRSkeletonProcessor processor Returns Type Description System.String ProcessSkeleton(OVRSkeleton) Applies hand joint position and rotation to the given OVRSkeleton data Declaration public virtual void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton Implements IOVRSkeletonProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonTranslateProcessor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonTranslateProcessor.html",
    "title": "Class SkeletonTranslateProcessor | Unity-Movement Documentation",
    "keywords": "Class SkeletonTranslateProcessor Use this script to pull the skeleton's bones to follow this transform. If a tracked skeleton's rigged-mesh transform is stationary, this script will translate the skeleton's apparent position/rotation to this object. More context: If a rigged mesh is stationary, but the OVRCameraRig is moving, put this script on an object moving with the OVRCameraRig, and have the SkeletonPostprocessing of the retargeting layer use this script's SkeletonPostprocess function Inheritance System.Object SkeletonTranslateProcessor Implements IOVRSkeletonProcessor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class SkeletonTranslateProcessor : MonoBehaviour, IOVRSkeletonProcessor Properties EnableSkeletonProcessing Declaration public bool EnableSkeletonProcessing { get; set; } Property Value Type Description System.Boolean SkeletonProcessorLabel Declaration public string SkeletonProcessorLabel { get; } Property Value Type Description System.String Methods ProcessSkeleton(OVRSkeleton) Applies transform position and rotation to the given OVRSkeleton data Declaration public void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton Start() Start method ensures toggle in Unity editor for this script Declaration protected void Start() Implements IOVRSkeletonProcessor"
  },
  "api/Oculus.Movement.AnimationRigging.SkeletonTranslateProcessor.NotifyOnChange.html": {
    "href": "api/Oculus.Movement.AnimationRigging.SkeletonTranslateProcessor.NotifyOnChange.html",
    "title": "Class SkeletonTranslateProcessor.NotifyOnChange | Unity-Movement Documentation",
    "keywords": "Class SkeletonTranslateProcessor.NotifyOnChange Module for updating objects that care if this processor is working Inheritance System.Object SkeletonTranslateProcessor.NotifyOnChange Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public class NotifyOnChange Fields AlternativeCharacterMover The bone-containing animator that follows the player transform or moves back to it's neutral position/rotation. Declaration public TransformsFollowMe AlternativeCharacterMover Field Value Type Description TransformsFollowMe hands Notifies that HandsAreOffset should change when this object adjusts bone positioning behavior. Declaration public SkeletonHandAdjustment[] hands Field Value Type Description SkeletonHandAdjustment [] OnDisable Declaration public UnityEvent OnDisable Field Value Type Description UnityEvent OnEnable Declaration public UnityEvent OnEnable Field Value Type Description UnityEvent Methods Disable() Declaration public void Disable() Enable() Declaration public void Enable()"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraint.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraint.html",
    "title": "Class TwistDistributionConstraint | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionConstraint Twist Distribution constraint. This should be enabled to begin with, so that it can compute metadata before the character can begin animating. Inheritance System.Object TwistDistributionConstraint Implements IOVRSkeletonConstraint Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionConstraint : RigConstraint<TwistDistributionJob, TwistDistributionData, TwistDistributionJobBinder<TwistDistributionData>>, IOVRSkeletonConstraint Methods RegenerateData() Regenerate any data for the constraint when it's being recreated. Declaration public void RegenerateData() Implements IOVRSkeletonConstraint"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraintEditor.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionConstraintEditor.html",
    "title": "Class TwistDistributionConstraintEditor | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionConstraintEditor Custom editor for the twist distribution constraint. Inheritance System.Object TwistDistributionConstraintEditor Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionConstraintEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionData.Axis.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionData.Axis.html",
    "title": "Enum TwistDistributionData.Axis | Unity-Movement Documentation",
    "keywords": "Enum TwistDistributionData.Axis Axis type for TwistDistribution. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public enum Axis Fields Name Description X X Axis. Y Y Axis. Z Z Axis."
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionData.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionData.html",
    "title": "Struct TwistDistributionData | Unity-Movement Documentation",
    "keywords": "Struct TwistDistributionData Twist distribution data used by the twist distribution job. Implements the twist distribution data interface. Implements ITwistDistributionData Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TwistDistributionData : ITwistDistributionData Methods AssignAnimator(Animator) Assign the Animator component. Declaration public void AssignAnimator(Animator animator) Parameters Type Name Description Animator animator AssignOVRSkeleton(OVRCustomSkeleton) Assign the OVR Skeleton component. Declaration public void AssignOVRSkeleton(OVRCustomSkeleton skeleton) Parameters Type Name Description OVRCustomSkeleton skeleton The OVRSkeleton to be assigned. AssignSegments(Transform, Transform, Transform) Assign segments Declaration public void AssignSegments(Transform segmentStart, Transform segmentEnd, Transform segmentUp) Parameters Type Name Description Transform segmentStart Transform segmentEnd Transform segmentUp AssignTwistNodes(Transform[]) Assign twist nodes. Declaration public void AssignTwistNodes(Transform[] twistNodes) Parameters Type Name Description Transform [] twistNodes Twist node transforms. ComputeTwistNodeData() Computes twist node data required for constraint to work. Declaration public void ComputeTwistNodeData() IsBoneTransformsDataValid() Indicates if bone transforms are valid or not. Declaration public bool IsBoneTransformsDataValid() Returns Type Description System.Boolean True if bone transforms are valid, false if not. Explicit Interface Implementations ITwistDistributionData.ConstraintAnimator The Animator component for the character. Declaration readonly Animator ITwistDistributionData.ConstraintAnimator { get; } Returns Type Description Animator ITwistDistributionData.ConstraintSkeleton The OVR Skeleton component for the character. Declaration readonly OVRCustomSkeleton ITwistDistributionData.ConstraintSkeleton { get; } Returns Type Description OVRCustomSkeleton ITwistDistributionData.SegmentEnd The target transform containing the twist (like a wrist). Declaration readonly Transform ITwistDistributionData.SegmentEnd { get; } Returns Type Description Transform ITwistDistributionData.SegmentStart The start transform on the opposite side of the twist source (like an elbow). Declaration readonly Transform ITwistDistributionData.SegmentStart { get; } Returns Type Description Transform ITwistDistributionData.SegmentUp Optional. Assign a different transform to be used for the Segment End up vector. Declaration readonly Transform ITwistDistributionData.SegmentUp { get; } Returns Type Description Transform ITwistDistributionData.ShouldUpdate If true, update this job. Declaration bool ITwistDistributionData.ShouldUpdate { get; set; } Returns Type Description System.Boolean ITwistDistributionData.TwistForwardAxis The twist forward axis. Declaration readonly Vector3 ITwistDistributionData.TwistForwardAxis { get; } Returns Type Description Vector3 ITwistDistributionData.TwistNodes The array of twist joints and their weights to be affected by the source transform's rotation. Declaration readonly WeightedTransformArray ITwistDistributionData.TwistNodes { get; } Returns Type Description WeightedTransformArray ITwistDistributionData.TwistNodeSpacings The proportional space between each twist node. Declaration readonly float[] ITwistDistributionData.TwistNodeSpacings { get; } Returns Type Description System.Single [] ITwistDistributionData.TwistNodesProperty The name of the twist nodes weighted transform array property. Declaration readonly string ITwistDistributionData.TwistNodesProperty { get; } Returns Type Description System.String ITwistDistributionData.TwistNodeUps The array of twist node up directions. Declaration readonly Vector3[] ITwistDistributionData.TwistNodeUps { get; } Returns Type Description Vector3 [] ITwistDistributionData.TwistUpAxis The twist up axis. Declaration readonly Vector3 ITwistDistributionData.TwistUpAxis { get; } Returns Type Description Vector3 Implements ITwistDistributionData"
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionJob.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionJob.html",
    "title": "Struct TwistDistributionJob | Unity-Movement Documentation",
    "keywords": "Struct TwistDistributionJob The TwistDistribution job. Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public struct TwistDistributionJob Fields DeltaTime The array containing 1 element for the current delta time. Declaration public NativeArray<float> DeltaTime Field Value Type Description NativeArray < System.Single > SegmentDirections Buffer used to store segment direction during job execution. Declaration public NativeArray<Vector3> SegmentDirections Field Value Type Description NativeArray < Vector3 > SegmentUpAxis List of segment up for twist nodes. Declaration public NativeArray<Vector3> SegmentUpAxis Field Value Type Description NativeArray < Vector3 > SpacingBuffer Buffer used to store spacing during job execution. Declaration public NativeArray<float> SpacingBuffer Field Value Type Description NativeArray < System.Single > SpacingPositions Buffer used to store spacing positions job execution. Declaration public NativeArray<Vector3> SpacingPositions Field Value Type Description NativeArray < Vector3 > TwistAxisOffset The twist axis offset. Declaration public Quaternion TwistAxisOffset Field Value Type Description Quaternion TwistBindRotations List of cached local rotation for twist nodes. Declaration public NativeArray<Quaternion> TwistBindRotations Field Value Type Description NativeArray < Quaternion > TwistSource The transform handle for the twist source. Declaration public ReadOnlyTransformHandle TwistSource Field Value Type Description ReadOnlyTransformHandle TwistTransforms List of Transform handles for the twist nodes. Declaration public NativeArray<ReadWriteTransformHandle> TwistTransforms Field Value Type Description NativeArray < ReadWriteTransformHandle > TwistUpDirections List of initial up for twist nodes. Declaration public NativeArray<Vector3> TwistUpDirections Field Value Type Description NativeArray < Vector3 > TwistWeights List of weights for the twist nodes. Declaration public NativeArray<PropertyStreamHandle> TwistWeights Field Value Type Description NativeArray < PropertyStreamHandle > WeightBuffer Buffer used to store weights during job execution. Declaration public NativeArray<float> WeightBuffer Field Value Type Description NativeArray < System.Single > Properties jobWeight Job weight. Declaration public FloatProperty jobWeight { readonly get; set; } Property Value Type Description FloatProperty Methods ProcessAnimation(AnimationStream) Defines what to do when processing the animation. Declaration public void ProcessAnimation(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on. ProcessRootMotion(AnimationStream) Defines what to do when processing the root motion. Declaration public void ProcessRootMotion(AnimationStream stream) Parameters Type Name Description AnimationStream stream The animation stream to work on."
  },
  "api/Oculus.Movement.AnimationRigging.TwistDistributionJobBinder-1.html": {
    "href": "api/Oculus.Movement.AnimationRigging.TwistDistributionJobBinder-1.html",
    "title": "Class TwistDistributionJobBinder<T> | Unity-Movement Documentation",
    "keywords": "Class TwistDistributionJobBinder<T> The TwistDistribution job binder. Inheritance System.Object TwistDistributionJobBinder<T> Namespace : Oculus.Movement.AnimationRigging Assembly : cs.temp.dll.dll Syntax public class TwistDistributionJobBinder<T> : AnimationJobBinder<TwistDistributionJob, T> where T : struct, IAnimationJobData, ITwistDistributionData Type Parameters Name Description T The constraint data type Methods Create(Animator, ref T, Component) Declaration public override TwistDistributionJob Create(Animator animator, ref T data, Component component) Parameters Type Name Description Animator animator T data Component component Returns Type Description TwistDistributionJob Destroy(TwistDistributionJob) Destroy the job and clean up arrays. Declaration public override void Destroy(TwistDistributionJob job) Parameters Type Name Description TwistDistributionJob job The job that is being destroyed. Update(TwistDistributionJob, ref T) Update job with component information. Declaration public override void Update(TwistDistributionJob job, ref T data) Parameters Type Name Description TwistDistributionJob job T data"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashes.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashes.html",
    "title": "Class CompareVectorHashes | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 Inheritance System.Object CompareVectorHashes Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashes : MonoBehaviour Fields _marginOfError Margin of error used to generate random vertex positions. The closer in value, the more stringent the test. Declaration protected float _marginOfError Field Value Type Description System.Single _numVerticesToTest Number of vertices to test with hashes. Declaration protected int _numVerticesToTest Field Value Type Description System.Int32 Methods CompareHashesAgainstEachOther() Test hashes against each other and log output. Declaration public void CompareHashesAgainstEachOther()"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html",
    "title": "Class CompareVectorHashesEditor | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashesEditor Custom editor class for comparing vector hashes. Inheritance System.Object CompareVectorHashesEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashesEditor : Editor Methods OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.HandDeformation.FingerInfo.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.FingerInfo.html",
    "title": "Class HandDeformation.FingerInfo | Unity-Movement Documentation",
    "keywords": "Class HandDeformation.FingerInfo Finger class used for deformation. Inheritance System.Object HandDeformation.FingerInfo Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class FingerInfo Constructors FingerInfo(Transform, Transform, OVRSkeleton.BoneId, OVRSkeleton.BoneId) Main constructor. Declaration public FingerInfo(Transform startTransform, Transform endTransform, OVRSkeleton.BoneId startBoneId, OVRSkeleton.BoneId endBoneId) Parameters Type Name Description Transform startTransform Start transform for finger. Transform endTransform End transform for finger. OVRSkeleton.BoneId startBoneId OVRSkeleton.BoneId endBoneId Id of start bone. Fields EndBoneId The end transform bone id. Declaration public OVRSkeleton.BoneId EndBoneId Field Value Type Description OVRSkeleton.BoneId EndBoneTransform The end bone transform. Declaration public Transform EndBoneTransform Field Value Type Description Transform EndPosOffset The position offset based on local space to apply. Declaration public Vector3 EndPosOffset Field Value Type Description Vector3 EndRotOffset The rotation offset to apply. Declaration public Quaternion EndRotOffset Field Value Type Description Quaternion StartBoneId The start transform bone id. Declaration public OVRSkeleton.BoneId StartBoneId Field Value Type Description OVRSkeleton.BoneId StartBoneTransform The start bone transform. Declaration public Transform StartBoneTransform Field Value Type Description Transform Methods UpdateBonePosition(Boolean, Single) Updates the end bone transform position with the direction and distance added to the start bone transform position. Declaration public void UpdateBonePosition(bool useMoveTowards, float moveSpeed) Parameters Type Name Description System.Boolean useMoveTowards True if we should move towards the target position. System.Single moveSpeed The move towards speed. UpdateDirection() Updates the direction from the start to the end bone transform. Declaration public void UpdateDirection() UpdateDistance() Updates the distance between the start and end bone transforms. Declaration public void UpdateDistance() UpdateRotationBasedOnOffset() Update rotation based on offset relative to bind pose. Declaration public void UpdateRotationBasedOnOffset()"
  },
  "api/Oculus.Movement.Effects.HandDeformation.FingerOffset.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.FingerOffset.html",
    "title": "Class HandDeformation.FingerOffset | Unity-Movement Documentation",
    "keywords": "Class HandDeformation.FingerOffset Finger offset class used for deformation. Inheritance System.Object HandDeformation.FingerOffset Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class FingerOffset Fields FingerId The id of the finger to apply the offset to. Declaration public OVRSkeleton.BoneId FingerId Field Value Type Description OVRSkeleton.BoneId FingerPosOffset The finger position offset. Declaration public Vector3 FingerPosOffset Field Value Type Description Vector3 FingerRotOffset The finger rotation offset. Declaration public Vector3 FingerRotOffset Field Value Type Description Vector3"
  },
  "api/Oculus.Movement.Effects.HandDeformation.html": {
    "href": "api/Oculus.Movement.Effects.HandDeformation.html",
    "title": "Class HandDeformation | Unity-Movement Documentation",
    "keywords": "Class HandDeformation Used to try to maintain the same proportions in the fingers for both hands. Inheritance System.Object HandDeformation Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HandDeformation : MonoBehaviour Fields _copyFingerDataInUpdate If true, copy the finger offsets data into FingerInfo during every update. Declaration protected bool _copyFingerDataInUpdate Field Value Type Description System.Boolean _customSkeleton Custom skeleton to reference. Declaration protected OVRCustomSkeleton _customSkeleton Field Value Type Description OVRCustomSkeleton _fingerOffsets The array of finger offsets to be applied. Declaration protected HandDeformation.FingerOffset[] _fingerOffsets Field Value Type Description HandDeformation.FingerOffset [] Methods Awake() Initialize the finger offsets. Declaration protected void Awake() LateUpdate() Apply the finger offsets. Declaration protected void LateUpdate()"
  },
  "api/Oculus.Movement.Effects.html": {
    "href": "api/Oculus.Movement.Effects.html",
    "title": "Namespace Oculus.Movement.Effects | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Effects Classes CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 CompareVectorHashesEditor Custom editor class for comparing vector hashes. HandDeformation Used to try to maintain the same proportions in the fingers for both hands. HandDeformation.FingerInfo Finger class used for deformation. HandDeformation.FingerOffset Finger offset class used for deformation. LateMirroredObject Mirrors an object by copying its local transformation values. LateMirroredObject.MirroredTransformPair Contains information about a mirrored transform pair. LateMirroredObjectEditor Custom editor for late mirrored object. LateMirroredSkeleton Mirrors a skeleton by copying its local transformation values. LateMirroredSkeleton.MirroredBonePair Contains information about a mirrored bone pair. LateMirroredSkeletonEditor Custom editor for late mirrored skeleton. MatrixUtils Convenient methods that extend the functionality of Matrix. MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. Structs VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices."
  },
  "api/Oculus.Movement.Effects.LateMirroredObject.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObject.html",
    "title": "Class LateMirroredObject | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObject Mirrors an object by copying its local transformation values. Inheritance System.Object LateMirroredObject Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredObject : MonoBehaviour Fields _mirroredTransformPairs The array of mirrored transform pairs. Declaration protected LateMirroredObject.MirroredTransformPair[] _mirroredTransformPairs Field Value Type Description LateMirroredObject.MirroredTransformPair [] _mirrorScale Mirror scale. Declaration protected bool _mirrorScale Field Value Type Description System.Boolean _myTransform The target transform which transform values are being mirrored to. Declaration protected Transform _myTransform Field Value Type Description Transform _transformToCopy The transform which transform values are being mirrored from. Declaration protected Transform _transformToCopy Field Value Type Description Transform Properties MirroredTransform The target transform which transform values are being mirrored to. Declaration public Transform MirroredTransform { get; } Property Value Type Description Transform MirroredTransformPairs The array of mirrored transform pairs. Declaration public LateMirroredObject.MirroredTransformPair[] MirroredTransformPairs { get; } Property Value Type Description LateMirroredObject.MirroredTransformPair [] MirrorScale Mirror scale. Declaration public bool MirrorScale { get; } Property Value Type Description System.Boolean OriginalTransform The transform which transform values are being mirrored from. Declaration public Transform OriginalTransform { get; } Property Value Type Description Transform Methods SetUpMirroredTransformPairs(Transform, Transform) Sets up mirrored transform pairs. Declaration public void SetUpMirroredTransformPairs(Transform originalTransform, Transform mirroredTransform) Parameters Type Name Description Transform originalTransform Original transform to mirror from. Transform mirroredTransform Mirrored transform to mirror to."
  },
  "api/Oculus.Movement.Effects.LateMirroredObject.MirroredTransformPair.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObject.MirroredTransformPair.html",
    "title": "Class LateMirroredObject.MirroredTransformPair | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObject.MirroredTransformPair Contains information about a mirrored transform pair. Inheritance System.Object LateMirroredObject.MirroredTransformPair Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class MirroredTransformPair Constructors MirroredTransformPair(String, Transform, Transform) MirroredTransformPair constructor. Declaration public MirroredTransformPair(string name, Transform originalTransform, Transform mirrorTransform) Parameters Type Name Description System.String name Mirrored pair name. Transform originalTransform Original transform. Transform mirrorTransform Mirrored transform. Fields MirroredTransform The mirrored transform. Declaration public Transform MirroredTransform Field Value Type Description Transform Name The name of the mirrored transform pair. Declaration public string Name Field Value Type Description System.String OriginalTransform The original transform. Declaration public Transform OriginalTransform Field Value Type Description Transform Methods ApplyMirroring(Boolean) Mirror the character based on the original transform, and apply scale optionally. Declaration public void ApplyMirroring(bool mirrorScale) Parameters Type Name Description System.Boolean mirrorScale Whether to mirror scale or not."
  },
  "api/Oculus.Movement.Effects.LateMirroredObjectEditor.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredObjectEditor.html",
    "title": "Class LateMirroredObjectEditor | Unity-Movement Documentation",
    "keywords": "Class LateMirroredObjectEditor Custom editor for late mirrored object. Inheritance System.Object LateMirroredObjectEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredObjectEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeleton.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeleton.html",
    "title": "Class LateMirroredSkeleton | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeleton Mirrors a skeleton by copying its local transformation values. Inheritance System.Object LateMirroredSkeleton Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredSkeleton : MonoBehaviour Fields _mirroredBonePairs The array of mirrored bone pairs. Declaration protected LateMirroredSkeleton.MirroredBonePair[] _mirroredBonePairs Field Value Type Description LateMirroredSkeleton.MirroredBonePair [] _mySkeleton The target skeleton which transform values are being mirrored to. Declaration protected OVRCustomSkeleton _mySkeleton Field Value Type Description OVRCustomSkeleton _skeletonToCopy The skeleton which transform values are being mirrored from. Declaration protected OVRCustomSkeleton _skeletonToCopy Field Value Type Description OVRCustomSkeleton Properties MirroredSkeleton Returns the mirrored skeleton. Declaration public OVRCustomSkeleton MirroredSkeleton { get; } Property Value Type Description OVRCustomSkeleton OriginalSkeleton Returns the original skeleton that the mirrored skeleton is mirroring. Declaration public OVRCustomSkeleton OriginalSkeleton { get; } Property Value Type Description OVRCustomSkeleton"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeleton.MirroredBonePair.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeleton.MirroredBonePair.html",
    "title": "Class LateMirroredSkeleton.MirroredBonePair | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeleton.MirroredBonePair Contains information about a mirrored bone pair. Inheritance System.Object LateMirroredSkeleton.MirroredBonePair Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class MirroredBonePair Fields MirroredBone The mirrored bone. Declaration public Transform MirroredBone Field Value Type Description Transform Name The name of the mirrored bone pair. Declaration public string Name Field Value Type Description System.String OriginalBone The original bone. Declaration public Transform OriginalBone Field Value Type Description Transform ShouldBeReparented If true, this mirrored bone should be reparented to match the original bone. Declaration public bool ShouldBeReparented Field Value Type Description System.Boolean"
  },
  "api/Oculus.Movement.Effects.LateMirroredSkeletonEditor.html": {
    "href": "api/Oculus.Movement.Effects.LateMirroredSkeletonEditor.html",
    "title": "Class LateMirroredSkeletonEditor | Unity-Movement Documentation",
    "keywords": "Class LateMirroredSkeletonEditor Custom editor for late mirrored skeleton. Inheritance System.Object LateMirroredSkeletonEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class LateMirroredSkeletonEditor : Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.MatrixUtils.html": {
    "href": "api/Oculus.Movement.Effects.MatrixUtils.html",
    "title": "Class MatrixUtils | Unity-Movement Documentation",
    "keywords": "Class MatrixUtils Convenient methods that extend the functionality of Matrix. Inheritance System.Object MatrixUtils Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public static class MatrixUtils Methods GetPosition(Matrix4x4) Gets world-space position of matrix using last column of matrix. Declaration public static Vector3 GetPosition(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 World-space position. GetRotation(Matrix4x4) Gets world-space rotation of matrix. Uses forward and up vector to create a look rotation; right vector of matrix doesn't need to be used. Declaration public static Quaternion GetRotation(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Quaternion World-space quaternion. GetScale(Matrix4x4) Gets scale of matrix using right, up and forward vectors of matrix. Declaration public static Vector3 GetScale(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 Matrix scale."
  },
  "api/Oculus.Movement.Effects.MirrorTransformation.html": {
    "href": "api/Oculus.Movement.Effects.MirrorTransformation.html",
    "title": "Class MirrorTransformation | Unity-Movement Documentation",
    "keywords": "Class MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. Inheritance System.Object MirrorTransformation Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MirrorTransformation : MonoBehaviour Fields _mirrorNormal Mirror normal, perpendicular to mirror face. Declaration protected Vector3 _mirrorNormal Field Value Type Description Vector3 _mirrorPlaneOffset Allows mirror to be pushed into reflection plane somewhat, assuming mirror geometry has some thickness. Declaration protected float _mirrorPlaneOffset Field Value Type Description System.Single _transformToMirror Transform to be reflected. Declaration protected Transform _transformToMirror Field Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.NormalRecalculator.html": {
    "href": "api/Oculus.Movement.Effects.NormalRecalculator.html",
    "title": "Class NormalRecalculator | Unity-Movement Documentation",
    "keywords": "Class NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. Inheritance System.Object NormalRecalculator Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class NormalRecalculator Methods CalculateNormals(Mesh) Custom normal calculation. The Unity Mesh.RecalculateNormals creates seams. See http://schemingdeveloper.com/2014/10/17/better-method-recalculate-normals-unity/ Declaration public void CalculateNormals(Mesh bakedMesh) Parameters Type Name Description Mesh bakedMesh Mesh to copy data from; feed into mesh that is rendered with recalculated normals. Initialize(Dictionary<Int32, List<Int32>>, HashSet<Int32>, Int32, Mesh, Material[], Int32) Initialize data that the shader will use. This will involve flattening the dictionary argument. Declaration public void Initialize(Dictionary<int, List<int>> subMeshVertexIdToNeighborList, HashSet<int> subMeshVerticesSet, int vertexIdToTriangleMapCount, Mesh bakedMesh, Material[] instantiatedMaterials, int subMeshIndex) Parameters Type Name Description Dictionary < System.Int32 , List < System.Int32 >> subMeshVertexIdToNeighborList Vertex id to neighbor ids. HashSet < System.Int32 > subMeshVerticesSet Set of vertices in submesh. System.Int32 vertexIdToTriangleMapCount Total number of triangles counted. One index plus its neighbor count for all triangles. Mesh bakedMesh Mesh snapshot obtained from original. This includes all vertices, not just the sub mesh. Material [] instantiatedMaterials Intantiated materials, used to feed. structured buffers to. System.Int32 subMeshIndex Submesh index to run recalculation on. ReleaseResources() Cleans up resources used by shader for normal recalculation. Declaration public void ReleaseResources()"
  },
  "api/Oculus.Movement.Effects.RecalculateNormals.html": {
    "href": "api/Oculus.Movement.Effects.RecalculateNormals.html",
    "title": "Class RecalculateNormals | Unity-Movement Documentation",
    "keywords": "Class RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. Inheritance System.Object RecalculateNormals Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class RecalculateNormals : MonoBehaviour Fields _duplicateLayer The layer of the duplicate mesh with recalculate normals, should be on a visible layer. Declaration protected int _duplicateLayer Field Value Type Description System.Int32 _hiddenMeshLayerName The layer of original mesh with invalid normals, should be on invisible layer. Declaration protected string _hiddenMeshLayerName Field Value Type Description System.String _recalculateIndependently Allows recalculate normals to be calculated independently on LateUpdate, instead of being driven from DriveSkeletalLateUpdateLogic. Declaration protected bool _recalculateIndependently Field Value Type Description System.Boolean _recalculateMaterialIndices Index of material that needs meta data for normal recalc, since that is ultimately done in the vertex stage. Declaration protected int[] _recalculateMaterialIndices Field Value Type Description System.Int32 [] _skinnedMeshRenderer Skinned mesh renderer requiring normal recalc. Declaration protected SkinnedMeshRenderer _skinnedMeshRenderer Field Value Type Description SkinnedMeshRenderer _subMesh Submesh index to recalc normals on. Sometimes a mesh might have submeshes that shouldn't need normal recalc, and for performance reasons only the sub mesh of interest should be the focus on this script. Declaration protected int _subMesh Field Value Type Description System.Int32 _useUnityFunction Allows using Unity's stock recalc instead. Declaration protected bool _useUnityFunction Field Value Type Description System.Boolean GeneratedDuplicateMesh Fired when duplicate mesh has been generated. Declaration public Action GeneratedDuplicateMesh Field Value Type Description System.Action Properties DuplicateLayer The layer of the duplicate mesh with recalculate normals, should be on a visible layer. Declaration public int DuplicateLayer { get; set; } Property Value Type Description System.Int32 RunRecalculation Allows toggling this scripts functionality on or off. Declaration public bool RunRecalculation { get; set; } Property Value Type Description System.Boolean Methods ApplyNormalRecalculation() Applies normal recalculation to the skinned mesh renderer Declaration public void ApplyNormalRecalculation()"
  },
  "api/Oculus.Movement.Effects.VertexKey.html": {
    "href": "api/Oculus.Movement.Effects.VertexKey.html",
    "title": "Struct VertexKey | Unity-Movement Documentation",
    "keywords": "Struct VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public struct VertexKey Constructors VertexKey(Vector3) VertexKey constructor. Declaration public VertexKey(Vector3 position) Parameters Type Name Description Vector3 position Input position. Methods Equals(Object) Override for Equals. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Object to compare to. Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) GetHashCode() Override for getting hash code. Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code. Overrides System.ValueType.GetHashCode()"
  },
  "api/Oculus.Movement.FullBodyDeformationConstraintToolTips.html": {
    "href": "api/Oculus.Movement.FullBodyDeformationConstraintToolTips.html",
    "title": "Class FullBodyDeformationConstraintToolTips | Unity-Movement Documentation",
    "keywords": "Class FullBodyDeformationConstraintToolTips Inheritance System.Object FullBodyDeformationConstraintToolTips Namespace : Oculus.Movement Assembly : cs.temp.dll.dll Syntax public static class FullBodyDeformationConstraintToolTips Fields CalculateBoneData Declaration public const string CalculateBoneData = \"Allows calculating bone data via a button.\" Field Value Type Description System.String"
  },
  "api/Oculus.Movement.html": {
    "href": "api/Oculus.Movement.html",
    "title": "Namespace Oculus.Movement | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement Classes FullBodyDeformationConstraintToolTips"
  },
  "api/Oculus.Movement.Tracking.HMDRemountRestartTracking.html": {
    "href": "api/Oculus.Movement.Tracking.HMDRemountRestartTracking.html",
    "title": "Class HMDRemountRestartTracking | Unity-Movement Documentation",
    "keywords": "Class HMDRemountRestartTracking Allows restarting tracking after the HMD is unmounted and remounted. This can be used to resolve body tracking errors that might be seen after remounting the HMD. Inheritance System.Object HMDRemountRestartTracking Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class HMDRemountRestartTracking : MonoBehaviour"
  },
  "api/Oculus.Movement.Tracking.html": {
    "href": "api/Oculus.Movement.Tracking.html",
    "title": "Namespace Oculus.Movement.Tracking | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Tracking Classes HMDRemountRestartTracking Allows restarting tracking after the HMD is unmounted and remounted. This can be used to resolve body tracking errors that might be seen after remounting the HMD."
  },
  "api/Oculus.Movement.UI.BlendshapesMenuToggle.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuToggle.html",
    "title": "Class BlendshapesMenuToggle | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. Inheritance System.Object BlendshapesMenuToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuToggle : MonoBehaviour Fields _blendShapesMenus Blend shapes menus to turn on/off. Declaration protected GameObject[] _blendShapesMenus Field Value Type Description GameObject [] Methods ToggleBlendshapesMenuEnableState(PointerEvent) Toggles blendshapes menus on and off. Called via UI in scene. Declaration public void ToggleBlendshapesMenuEnableState(PointerEvent pointerEvent) Parameters Type Name Description PointerEvent pointerEvent"
  },
  "api/Oculus.Movement.UI.BlendshapesMenuVisual.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuVisual.html",
    "title": "Class BlendshapesMenuVisual | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. Inheritance System.Object BlendshapesMenuVisual Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuVisual : MonoBehaviour Fields _expressionsPrefix Prefix for rendered text. Declaration protected string _expressionsPrefix Field Value Type Description System.String _filterArray Can be used to filter blendshapes, in case all don't need to be rendered. Declaration protected string[] _filterArray Field Value Type Description System.String [] _minBlendshapeThreshold Threshold that blendshapes must passed before being rendered. Declaration protected float _minBlendshapeThreshold Field Value Type Description System.Single _ovrFaceExpressions Face expressions component which is queried. Declaration protected OVRFaceExpressions _ovrFaceExpressions Field Value Type Description OVRFaceExpressions _worldText Text mesh pro visual for blendshape values. Declaration protected TMPro.TextMeshPro _worldText Field Value Type Description TMPro.TextMeshPro"
  },
  "api/Oculus.Movement.UI.ButtonToggleIcon.html": {
    "href": "api/Oculus.Movement.UI.ButtonToggleIcon.html",
    "title": "Class ButtonToggleIcon | Unity-Movement Documentation",
    "keywords": "Class ButtonToggleIcon Allows usage of a button toggle icon. Inheritance System.Object ButtonToggleIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class ButtonToggleIcon : MonoBehaviour Fields _deselectColor Deselected color. Declaration protected Color _deselectColor Field Value Type Description Color _selectColor Select color. Declaration protected Color _selectColor Field Value Type Description Color _toggleObject Object that indicates toggle state. Declaration protected GameObject _toggleObject Field Value Type Description GameObject Methods ToggleSelectIcon(PointerEvent) Toggles the select icon state. Declaration public void ToggleSelectIcon(PointerEvent pointerEvent) Parameters Type Name Description PointerEvent pointerEvent"
  },
  "api/Oculus.Movement.UI.CustomAnimToggle.html": {
    "href": "api/Oculus.Movement.UI.CustomAnimToggle.html",
    "title": "Class CustomAnimToggle | Unity-Movement Documentation",
    "keywords": "Class CustomAnimToggle A simple script that allows toggling an animation on and off. Inheritance System.Object CustomAnimToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class CustomAnimToggle : MonoBehaviour Methods SwapAnimState() Declaration public void SwapAnimState()"
  },
  "api/Oculus.Movement.UI.HipPinningConstraintCalibration.html": {
    "href": "api/Oculus.Movement.UI.HipPinningConstraintCalibration.html",
    "title": "Class HipPinningConstraintCalibration | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintCalibration Setup for performing initial hip pinning calibration. Inheritance System.Object HipPinningConstraintCalibration Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintCalibration : MonoBehaviour Fields _calibrateMenu The game object that contains the renderers for this calibration menu. Declaration protected GameObject _calibrateMenu Field Value Type Description GameObject _hipPinningConstraints The hip pinning constraints. Declaration protected HipPinningConstraint[] _hipPinningConstraints Field Value Type Description HipPinningConstraint [] _mainCharacterRenderer The game object that contains the mesh renderers for the main character. Declaration protected GameObject _mainCharacterRenderer Field Value Type Description GameObject _mainHipPinningTargetRenderer The game object that contains the mesh renderers for the main hip pinning target. Declaration protected GameObject _mainHipPinningTargetRenderer Field Value Type Description GameObject _mirroredCharacterRenderer The game object that contains the mesh renderers for the mirrored character. Declaration protected GameObject _mirroredCharacterRenderer Field Value Type Description GameObject _mirrorHipPinningTargetRenderer The game object that contains the mesh renderers for the mirrored hip pinning target. Declaration protected GameObject _mirrorHipPinningTargetRenderer Field Value Type Description GameObject _skeleton The skeletal tracking data provider for the interface character. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton Methods Calibrate() Calibrate the hip pinning target transform with the current tracked hip position Declaration public void Calibrate()"
  },
  "api/Oculus.Movement.UI.HipPinningConstraintNotification.html": {
    "href": "api/Oculus.Movement.UI.HipPinningConstraintNotification.html",
    "title": "Class HipPinningConstraintNotification | Unity-Movement Documentation",
    "keywords": "Class HipPinningConstraintNotification Activates/deactivates this game object based on the hip pinning leave event. Inheritance System.Object HipPinningConstraintNotification Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class HipPinningConstraintNotification : MonoBehaviour Fields _displayTime The amount of time that this notification should be enabled for. Declaration protected float _displayTime Field Value Type Description System.Single _hipPinningConstraint The hip pinning constraint. Declaration protected HipPinningConstraint _hipPinningConstraint Field Value Type Description HipPinningConstraint"
  },
  "api/Oculus.Movement.UI.html": {
    "href": "api/Oculus.Movement.UI.html",
    "title": "Namespace Oculus.Movement.UI | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.UI Classes BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. ButtonToggleIcon Allows usage of a button toggle icon. CustomAnimToggle A simple script that allows toggling an animation on and off. HipPinningConstraintCalibration Setup for performing initial hip pinning calibration. HipPinningConstraintNotification Activates/deactivates this game object based on the hip pinning leave event. RetargetingMenu Menu that allows spawning retargeted characters. SceneSelectIcon Aligns scene selection icon based on current scene. SceneSelectIcon.IconPositionInformation Information about the icon used to select button."
  },
  "api/Oculus.Movement.UI.RetargetingMenu.html": {
    "href": "api/Oculus.Movement.UI.RetargetingMenu.html",
    "title": "Class RetargetingMenu | Unity-Movement Documentation",
    "keywords": "Class RetargetingMenu Menu that allows spawning retargeted characters. Inheritance System.Object RetargetingMenu Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class RetargetingMenu : MonoBehaviour Fields _characterToSpawn Main character prefab to spawn. Declaration protected GameObject _characterToSpawn Field Value Type Description GameObject _restPoseObject The rest pose humanoid object. Declaration protected RestPoseObjectHumanoid _restPoseObject Field Value Type Description RestPoseObjectHumanoid _restTPoseObject The rest T-pose humanoid object. Declaration protected RestPoseObjectHumanoid _restTPoseObject Field Value Type Description RestPoseObjectHumanoid _spawnOffset Offset per spawn. Declaration protected Vector3 _spawnOffset Field Value Type Description Vector3 _spawnParent Parent to spawn under. Declaration protected Transform _spawnParent Field Value Type Description Transform Methods AddNormalRetargetedCharacter() Spawn retargeted character without animation rigging support. Declaration public void AddNormalRetargetedCharacter() AddRiggedRetargetedCharacter() Spawn retargeted character with animation rigging support. Declaration public void AddRiggedRetargetedCharacter() AddRiggedRetargetedCharacterWithConstraints() Spawn retargeted character with animation rigging support, along with constraints. Declaration public void AddRiggedRetargetedCharacterWithConstraints() RemoveLastCharacter() Removes last character spawned. Declaration public void RemoveLastCharacter()"
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.html",
    "title": "Class SceneSelectIcon | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon Aligns scene selection icon based on current scene. Inheritance System.Object SceneSelectIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class SceneSelectIcon : MonoBehaviour Fields _iconInformationArray Icon positions array. Declaration protected SceneSelectIcon.IconPositionInformation[] _iconInformationArray Field Value Type Description SceneSelectIcon.IconPositionInformation [] _iconTransform Icon transform to affect. Declaration protected Transform _iconTransform Field Value Type Description Transform"
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html",
    "title": "Class SceneSelectIcon.IconPositionInformation | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon.IconPositionInformation Information about the icon used to select button. Inheritance System.Object SceneSelectIcon.IconPositionInformation Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax [Serializable] protected class IconPositionInformation Fields ButtonTransform Button to highlight. Declaration public Transform ButtonTransform Field Value Type Description Transform SceneName Scene name to check for. Declaration public string SceneName Field Value Type Description System.String Methods Validate() Valids fields on class using asserts. Declaration public void Validate()"
  },
  "api/Oculus.Movement.Utils.ActivateToggle.html": {
    "href": "api/Oculus.Movement.Utils.ActivateToggle.html",
    "title": "Class ActivateToggle | Unity-Movement Documentation",
    "keywords": "Class ActivateToggle Designed to turn on/off objects with Inheritance System.Object ActivateToggle Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ActivateToggle : MonoBehaviour Fields _index Which state is set from state list Declaration protected int _index Field Value Type Description System.Int32 _onSetNameChange When the Index changes, these callbacks will be called with the name of the triggered state Declaration protected ActivateToggle.TextChangeEvent _onSetNameChange Field Value Type Description ActivateToggle.TextChangeEvent _states The list of triggerable states Declaration protected List<ActivateToggle.State> _states Field Value Type Description List < ActivateToggle.State > _wrapIndex Whether or not Next/Prev will wrap back around after the limit Declaration protected bool _wrapIndex Field Value Type Description System.Boolean Properties Index The current state Declaration public int Index { get; set; } Property Value Type Description System.Int32 States All current states Declaration public List<ActivateToggle.State> States { get; } Property Value Type Description List < ActivateToggle.State > Methods IgnoreState(Int32) Allows external scripts/UI to change available state options Declaration public void IgnoreState(int index) Parameters Type Name Description System.Int32 index IsValidIndex(Int32) Determines if the given value references a valid state Declaration public bool IsValidIndex(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean Next() Sets the next state in the list, ignoring states marked to be ignored. Declaration public void Next() Prev() Sets the previous state in the list, ignoring states marked to be ignored. Declaration public void Prev() Refresh() Deactivates all states that are not the current state, and activates the current state Declaration public void Refresh() SetIndexWithoutNotify(Int32) Changes the current state without triggering callbacks from the Refresh() method Declaration public void SetIndexWithoutNotify(int value) Parameters Type Name Description System.Int32 value UnignoreState(Int32) Allows external scripts/UI to change available state options Declaration public void UnignoreState(int index) Parameters Type Name Description System.Int32 index"
  },
  "api/Oculus.Movement.Utils.ActivateToggle.State.html": {
    "href": "api/Oculus.Movement.Utils.ActivateToggle.State.html",
    "title": "Class ActivateToggle.State | Unity-Movement Documentation",
    "keywords": "Class ActivateToggle.State Describes objects bound to a state and functionality triggered by state change Inheritance System.Object ActivateToggle.State Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class State Constructors State() Declaration public State() State(String, Action, Action) Declaration public State(string name, Action onActivate = null, Action onDeactivate = null) Parameters Type Name Description System.String name System.Action onActivate System.Action onDeactivate Fields Active keep track of whether or not this state is activated Declaration protected bool Active Field Value Type Description System.Boolean Ignored If true, this state will be ignored by Prev() and Next() methods Declaration public bool Ignored Field Value Type Description System.Boolean Name Name of this state Declaration public string Name Field Value Type Description System.String ObjectsToActivate Objects that will activate and deactivate with this state Declaration public List<GameObject> ObjectsToActivate Field Value Type Description List < GameObject > OnActivate Declaration public UnityEvent OnActivate Field Value Type Description UnityEvent OnDeactivate Declaration public UnityEvent OnDeactivate Field Value Type Description UnityEvent Methods SetActive(Boolean) Activates/Deactivates this state (unless it is already activated/deactivated) Declaration public void SetActive(bool active) Parameters Type Name Description System.Boolean active"
  },
  "api/Oculus.Movement.Utils.ActivateToggle.TextChangeEvent.html": {
    "href": "api/Oculus.Movement.Utils.ActivateToggle.TextChangeEvent.html",
    "title": "Class ActivateToggle.TextChangeEvent | Unity-Movement Documentation",
    "keywords": "Class ActivateToggle.TextChangeEvent Callback notifies UI text element of state change Inheritance System.Object ActivateToggle.TextChangeEvent Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class TextChangeEvent : UnityEvent<string>"
  },
  "api/Oculus.Movement.Utils.AddComponentsHelper.html": {
    "href": "api/Oculus.Movement.Utils.AddComponentsHelper.html",
    "title": "Class AddComponentsHelper | Unity-Movement Documentation",
    "keywords": "Class AddComponentsHelper Has functions that allow adding components via the editor or runtime. These functions detect if they are being called in the editor and if so, affect the undo state. Inheritance System.Object AddComponentsHelper Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class AddComponentsHelper Fields _MOVEMENT_SAMPLES_MENU Prefix for movement samples one-click menus. Declaration public const string _MOVEMENT_SAMPLES_MENU = \"GameObject/Movement Samples/\" Field Value Type Description System.String Methods AddBasicAnimationRiggingComponents(GameObject, Boolean) Adds components necessary for animation rigging to work. Declaration public static (RigBuilder, GameObject) AddBasicAnimationRiggingComponents(GameObject mainParent, bool runtimeInvocation = false) Parameters Type Name Description GameObject mainParent Container for animation rigging components. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description System.ValueTuple < RigBuilder , GameObject > The rig builder and rig components created. AddBoneTargets(GameObject, Animator, Boolean, Boolean) Adds bone targets to rig object. Declaration public static BoneTarget[] AddBoneTargets(GameObject rigObject, Animator animator, bool isFullBody, bool runtimeInvocation) Parameters Type Name Description GameObject rigObject Rig object serving as parent for bone targets. Animator animator Animator to obtain target bone. System.Boolean isFullBody Indicates if full body (or not). System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description BoneTarget [] Array of bone targets added. AddCorrectBonesRetargetingProcessor(RetargetingLayer, Boolean) Adds retargeting processor that corrects hand bones. Declaration public static void AddCorrectBonesRetargetingProcessor(RetargetingLayer retargetingLayer, bool runtimeInvocation = false) Parameters Type Name Description RetargetingLayer retargetingLayer Retargeting layer to add to. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. AddCorrectHandRetargetingProcessor(RetargetingLayer, Boolean) Add hand correction retargeting processor component to retargeting layer. Declaration public static void AddCorrectHandRetargetingProcessor(RetargetingLayer retargetingLayer, bool runtimeInvocation = false) Parameters Type Name Description RetargetingLayer retargetingLayer Retargeting layer to add to. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. AddHandDeformationRetargetingProcessor(RetargetingLayer, Boolean) Add the hand deformation retargeting processor. Declaration public static void AddHandDeformationRetargetingProcessor(RetargetingLayer retargetingLayer, bool runtimeInvocation = false) Parameters Type Name Description RetargetingLayer retargetingLayer System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. AddJointAdjustments(Animator, RetargetingLayer, RestPoseObjectHumanoid) Adds joint adjustments for an animator. Declaration public static void AddJointAdjustments(Animator animator, RetargetingLayer retargetingLayer, RestPoseObjectHumanoid restPoseHumanoid = null) Parameters Type Name Description Animator animator Animator component. RetargetingLayer retargetingLayer Retargeting layer component to change adjustments of. RestPoseObjectHumanoid restPoseHumanoid Optional humanoid rest pose asset used for adjustment calculation. AddMainRetargetingComponent(GameObject, Boolean, Boolean) Adds main retargeting component and sets it up. Declaration public static RetargetingLayer AddMainRetargetingComponent(GameObject mainParent, bool isFullBody, bool runtimeInvocation = false) Parameters Type Name Description GameObject mainParent GameObject to add to. System.Boolean isFullBody If full body or not. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description RetargetingLayer RetargetingLayer that was added. AddRetargetingAnimationRig(RetargetingLayer, RigBuilder, MonoBehaviour[]) Add the retargeting animation rig. Declaration public static void AddRetargetingAnimationRig(RetargetingLayer retargetingLayer, RigBuilder rigBuilder, MonoBehaviour[] constraintComponents) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer. RigBuilder rigBuilder The rig builder. MonoBehaviour [] constraintComponents The constraint components. AddRetargetingConstraint(GameObject, RetargetingLayer, Boolean, Boolean) Adds retargeting constraint under the rig object. Declaration public static RetargetingAnimationConstraint AddRetargetingConstraint(GameObject rigObject, RetargetingLayer retargetingLayer, bool runtimeInvocation = false, bool setAsLastSibling = false) Parameters Type Name Description GameObject rigObject Rig object that will be the parent of the constraint. RetargetingLayer retargetingLayer Retargeting layer associated with the constraint. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. System.Boolean setAsLastSibling Allows adding as last sibling under constraints. Returns Type Description RetargetingAnimationConstraint Retargeting constraint under the rig. CheckIfTPose(Animator) Given an animator, determine if the avatar is in T-pose or A-pose. Declaration public static bool CheckIfTPose(Animator animator) Parameters Type Name Description Animator animator The animator. Returns Type Description System.Boolean True if T-pose. DestroyLegacyComponents(GameObject, GameObject) Destroys legacy components on GameObject if they exist. Declaration public static void DestroyLegacyComponents(GameObject gameObject, GameObject rigObject) Parameters Type Name Description GameObject gameObject Main GameObject. GameObject rigObject Rig object. DestroyLegacyComponents<T>(GameObject, Boolean) Destroy legacy components. Declaration public static bool DestroyLegacyComponents<T>(GameObject gameObject, bool runtimeInvocation = false) Parameters Type Name Description GameObject gameObject The object to check for the legacy components. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description System.Boolean True if legacy components were destroyed. Type Parameters Name Description T The legacy component type. DestroyLegacyProcessor<T>(GameObject, Boolean) Destroy legacy processors. Declaration public static bool DestroyLegacyProcessor<T>(GameObject gameObject, bool runtimeInvocation = false) where T : class Parameters Type Name Description GameObject gameObject The object to check for the legacy processors. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description System.Boolean True if legacy processors were destroyed. Type Parameters Name Description T The legacy processor type. DestroyTargetTransform(GameObject, String, Boolean, Boolean) Destroy transform based on name, if any exists. The child can be found recursively. Declaration public static bool DestroyTargetTransform(GameObject mainParent, string nameOfTarget, bool recursiveSearch, bool runtimeInvocation = false) Parameters Type Name Description GameObject mainParent Parent of target transform. System.String nameOfTarget Name of target. System.Boolean recursiveSearch Indicates if recursion should be used or not. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. Returns Type Description System.Boolean True if destroyed; false if not. EnsureFaceDriverComponent(GameObject, FaceRetargeterComponent, Boolean, RigType) Declaration public static void EnsureFaceDriverComponent(GameObject parentObject, FaceRetargeterComponent faceRetargeter, bool runtimeInvocation, RigType rigType) Parameters Type Name Description GameObject parentObject FaceRetargeterComponent faceRetargeter System.Boolean runtimeInvocation RigType rigType GetRestPoseObject(Boolean) Find and return the reference rest pose humanoid object in the project. Declaration public static RestPoseObjectHumanoid GetRestPoseObject(bool isTPose = false) Parameters Type Name Description System.Boolean isTPose Returns Type Description RestPoseObjectHumanoid The rest pose humanoid object. SetUpCharacterForA2EARKitFace(GameObject, Boolean, Boolean) Sets up an ARKit character for A2E face tracking. Declaration public static void SetUpCharacterForA2EARKitFace(GameObject gameObject, bool allowDuplicates = true, bool runtimeInvocation = false) Parameters Type Name Description GameObject gameObject GameObject to add to. System.Boolean allowDuplicates Allow duplicates mapping or not. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. SetUpCharacterForA2EFace(GameObject, Boolean, Boolean) Sets up a character for A2E face tracking. Declaration public static void SetUpCharacterForA2EFace(GameObject gameObject, bool allowDuplicates = true, bool runtimeInvocation = false) Parameters Type Name Description GameObject gameObject GameObject to add to. System.Boolean allowDuplicates Allow duplicates mapping or not. System.Boolean runtimeInvocation If activated from runtime code. We want to possibly support one-click during playmode, so we can't necessarily use Application.isPlaying. SetUpCharacterForARKitFace(GameObject, Boolean, Boolean) Declaration [Obsolete(\"SetUpCharacterForARKitFace is deprecated; please use SetUpCharacterForA2EARKitFace instead.\")] public static void SetUpCharacterForARKitFace(GameObject gameObject, bool allowDuplicates = true, bool runtimeInvocation = false) Parameters Type Name Description GameObject gameObject System.Boolean allowDuplicates System.Boolean runtimeInvocation SetUpCharacterForCorrectivesFace(GameObject, Boolean, Boolean) Declaration [Obsolete(\"SetUpCharacterForCorrectivesFace is deprecated; please use SetUpCharacterForA2EFace instead.\")] public static void SetUpCharacterForCorrectivesFace(GameObject gameObject, bool allowDuplicates = true, bool runtimeInvocation = false) Parameters Type Name Description GameObject gameObject System.Boolean allowDuplicates System.Boolean runtimeInvocation SetupExternalBoneTargets(RetargetingLayer, Boolean, BoneTarget[]) Setup external bone targets. Declaration public static void SetupExternalBoneTargets(RetargetingLayer retargetingLayer, bool isFullBody, BoneTarget[] boneTargets) Parameters Type Name Description RetargetingLayer retargetingLayer The retargeting layer to add to. System.Boolean isFullBody True if full body. BoneTarget [] boneTargets The array of bone targets to setup. ValidateChildGameObjectsForFaceMapping(GameObject) Declaration public static void ValidateChildGameObjectsForFaceMapping(GameObject gameObject) Parameters Type Name Description GameObject gameObject ValidateGameObjectForFaceMapping(GameObject) Validates GameObject for face mapping. Declaration public static void ValidateGameObjectForFaceMapping(GameObject go) Parameters Type Name Description GameObject go GameObject to check. Exceptions Type Condition System.InvalidOperationException Exception thrown if GameObject fails check. ValidGameObjectForAnimationRigging(GameObject) Checks to see if the GameObject can be used for animation rigging or not. Declaration public static void ValidGameObjectForAnimationRigging(GameObject gameObject) Parameters Type Name Description GameObject gameObject GameObject to check. Exceptions Type Condition System.InvalidOperationException Exception thrown if check fails."
  },
  "api/Oculus.Movement.Utils.AddComponentsRuntime.html": {
    "href": "api/Oculus.Movement.Utils.AddComponentsRuntime.html",
    "title": "Class AddComponentsRuntime | Unity-Movement Documentation",
    "keywords": "Class AddComponentsRuntime Allow adding components at runtime. Inheritance System.Object AddComponentsRuntime Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class AddComponentsRuntime Methods SetupCharacterForAnimationRiggingRetargeting(GameObject, Boolean, Boolean, RestPoseObjectHumanoid) Adds animation rigging + retargeting at runtime. Declaration public static void SetupCharacterForAnimationRiggingRetargeting(GameObject selectedGameObject, bool isFullBody = false, bool addConstraints = false, RestPoseObjectHumanoid restPoseObjectHumanoid = null) Parameters Type Name Description GameObject selectedGameObject GameObject to add animation rigging + retargeting too. System.Boolean isFullBody Allows toggling full body or not. System.Boolean addConstraints Allows adding constraints or not. RestPoseObjectHumanoid restPoseObjectHumanoid Allows using the rest pose object or not. SetupCharacterForRetargeting(GameObject, Boolean) Sets up character for retargeting, no animation rigging. Declaration public static void SetupCharacterForRetargeting(GameObject selectedGameObject, bool isFullBody = false) Parameters Type Name Description GameObject selectedGameObject GameObject used for setup process. System.Boolean isFullBody Allows toggling full body or not."
  },
  "api/Oculus.Movement.Utils.AnimatorBoneVisualizer.html": {
    "href": "api/Oculus.Movement.Utils.AnimatorBoneVisualizer.html",
    "title": "Class AnimatorBoneVisualizer | Unity-Movement Documentation",
    "keywords": "Class AnimatorBoneVisualizer Allows visualizing bones found in an Animator component. Inheritance System.Object BoneVisualizer BoneVisualizer < HumanBodyBones > AnimatorBoneVisualizer Implements IListGenerating Inherited Members BoneVisualizer<HumanBodyBones>._visualizationGuideType BoneVisualizer<HumanBodyBones>._maskToVisualize BoneVisualizer<HumanBodyBones>._customBoneVisualData BoneVisualizer<HumanBodyBones>._lineRendererPrefab BoneVisualizer<HumanBodyBones>._axisRendererPrefab BoneVisualizer<HumanBodyBones>._visualType BoneVisualizer<HumanBodyBones>.IsShowingLines BoneVisualizer<HumanBodyBones>.IsShowingAxes BoneVisualizer<HumanBodyBones>.OnDisable() BoneVisualizer<HumanBodyBones>.ResetBoneVisuals() BoneVisualizer<HumanBodyBones>.Update() BoneVisualizer<HumanBodyBones>.LateUpdate() BoneVisualizer<HumanBodyBones>.Visualize() BoneVisualizer<HumanBodyBones>.GenerateList() BoneVisualizer<HumanBodyBones>.UseStandardBones() BoneVisualizer<HumanBodyBones>.ClearList() BoneVisualizer<HumanBodyBones>.ClearBoneTupleVisualObjects() BoneVisualizer<HumanBodyBones>.ClearBoneAxisVisualObjects() BoneVisualizer<HumanBodyBones>.CreateAllBonesMask() BoneVisualizer<HumanBodyBones>.ShouldVisualizeJoint(Int32) BoneVisualizer<HumanBodyBones>.SetupBoneTupleLineRenderer(BoneVisualizer.BoneTuple<>) BoneVisualizer<HumanBodyBones>.GetBoneTransforms(BoneVisualizer.BoneTuple<>, Transform, Transform) BoneVisualizer<HumanBodyBones>.SetUpAxisRenderer(Int32) BoneVisualizer<HumanBodyBones>.EnforceCustomLineRendererEnableState(BoneVisualizer.BoneTuple<>, Boolean) BoneVisualizer<HumanBodyBones>.EnforceAxisRendererEnableState(Int32, Boolean) BoneVisualizer._LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._AXIS_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._whenToRender BoneVisualizer._boneTupleToLineRenderer BoneVisualizer._boneIdToAxisObject BoneVisualizer.OnNewAxis BoneVisualizer.OnNewLine BoneVisualizer.BoneVisualRenderers BoneVisualizer.JointVisualTransforms BoneVisualizer.EnableSkeletonProcessing BoneVisualizer.SkeletonProcessorLabel BoneVisualizer.ProcessSkeleton(OVRSkeleton) Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class AnimatorBoneVisualizer : BoneVisualizer<HumanBodyBones>, IListGenerating Fields _animatorComp Animator component to visualize bones for. Declaration protected Animator _animatorComp Field Value Type Description Animator Methods Awake() Declaration protected override void Awake() Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.Awake() GetAvatarBodyPart(Int32) Used with Unity's , which selects specific parts of an avatar Declaration protected override AvatarMaskBodyPart GetAvatarBodyPart(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description AvatarMaskBodyPart the containing the given bone Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.GetAvatarBodyPart(System.Int32) GetBoneCount() Should be a constant time function returning the count of possible bone/joints Declaration protected override int GetBoneCount() Returns Type Description System.Int32 number of bones/joints in this skeleton Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.GetBoneCount() GetBoneTransform(Int32) Used to resolve a joint when rendering Axis Declaration protected override Transform GetBoneTransform(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description Transform the associated with the given bone ID Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.GetBoneTransform(System.Int32) GetBoneTuple(Int32) Gets standard begin and end joints of a bone Declaration protected override BoneVisualizer<HumanBodyBones>.BoneTuple GetBoneTuple(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description BoneVisualizer.BoneTuple <> the default BoneVisualizer<BoneType>.BoneTuple for this bone Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.GetBoneTuple(System.Int32) SetBody(GameObject) Can be used by UI to change the source of the skeleton visual data Declaration public override void SetBody(GameObject body) Parameters Type Name Description GameObject body Overrides BoneVisualizer.SetBody(GameObject) Start() Declaration protected override void Start() Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.Start() TryGetBoneTransforms(BoneVisualizer<HumanBodyBones>.BoneTuple, out Transform, out Transform) Gets both bone transforms of the given BoneVisualizer<BoneType>.BoneTuple Declaration protected override bool TryGetBoneTransforms(BoneVisualizer<HumanBodyBones>.BoneTuple tupleItem, out Transform firstJoint, out Transform secondJoint) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem Transform firstJoint Transform secondJoint Returns Type Description System.Boolean true if the bones could be retrieved Overrides Oculus.Movement.Utils.BoneVisualizer<HumanBodyBones>.TryGetBoneTransforms(Oculus.Movement.Utils.BoneVisualizer.BoneTuple<>, Transform, Transform) Implements IListGenerating"
  },
  "api/Oculus.Movement.Utils.AnimatorBoneVisualizerBoneTupleDrawer.html": {
    "href": "api/Oculus.Movement.Utils.AnimatorBoneVisualizerBoneTupleDrawer.html",
    "title": "Class AnimatorBoneVisualizerBoneTupleDrawer | Unity-Movement Documentation",
    "keywords": "Class AnimatorBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] Inheritance System.Object AnimatorBoneVisualizerBoneTupleDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class AnimatorBoneVisualizerBoneTupleDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.BindPoseObjectSkeleton.BonePoseData.html": {
    "href": "api/Oculus.Movement.Utils.BindPoseObjectSkeleton.BonePoseData.html",
    "title": "Class BindPoseObjectSkeleton.BonePoseData | Unity-Movement Documentation",
    "keywords": "Class BindPoseObjectSkeleton.BonePoseData Holds delta pose information for each bone. Inheritance System.Object BindPoseObjectSkeleton.BonePoseData Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class BonePoseData Constructors BonePoseData(Transform, Transform, FullBodyTrackingBoneId) Constructor for BonePoseData, taking in a bone transform and comparing it against the target transform to store delta information. Declaration public BonePoseData(Transform boneTransform, Transform targetTransform, FullBodyTrackingBoneId boneId) Parameters Type Name Description Transform boneTransform Transform targetTransform FullBodyTrackingBoneId boneId Fields AdjustmentRot The adjustment rotation to be applied to the bone transform. Declaration public Quaternion AdjustmentRot Field Value Type Description Quaternion BoneId The bone id corresponding to the delta pose information. Declaration public FullBodyTrackingBoneId BoneId Field Value Type Description FullBodyTrackingBoneId DeltaRot The delta rotation between the two bone transforms that were compared. Declaration public Quaternion DeltaRot Field Value Type Description Quaternion WorldPose The world pose of this bone at rest. Declaration public Pose WorldPose Field Value Type Description Pose"
  },
  "api/Oculus.Movement.Utils.BindPoseObjectSkeleton.html": {
    "href": "api/Oculus.Movement.Utils.BindPoseObjectSkeleton.html",
    "title": "Class BindPoseObjectSkeleton | Unity-Movement Documentation",
    "keywords": "Class BindPoseObjectSkeleton Scriptable object that contains custom bind pose information that can be applied onto a bind pose to configure a custom bind pose. This can be used to fix artifacts that are a result of retargeting and deformation. Inheritance System.Object BindPoseObjectSkeleton Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class BindPoseObjectSkeleton : ScriptableObject Fields _bonePoses Array containing all the stored bone pose information. Declaration protected BindPoseObjectSkeleton.BonePoseData[] _bonePoses Field Value Type Description BindPoseObjectSkeleton.BonePoseData [] Properties BonePoses Array containing all the stored bone pose information. Declaration public BindPoseObjectSkeleton.BonePoseData[] BonePoses { get; set; } Property Value Type Description BindPoseObjectSkeleton.BonePoseData [] Methods GetBonePoseData(FullBodyTrackingBoneId) Returns bone pose data for the given bone. Declaration public BindPoseObjectSkeleton.BonePoseData GetBonePoseData(FullBodyTrackingBoneId boneId) Parameters Type Name Description FullBodyTrackingBoneId boneId Returns Type Description BindPoseObjectSkeleton.BonePoseData Bone pose data, if bone is found in the map. InitializeBindPoseDataFromSkeletons(OVRSkeleton, OVRSkeleton) Initializes the bind pose data from two skeletons, capturing the deltas between the source skeleton and the target skeleton. Declaration public void InitializeBindPoseDataFromSkeletons(OVRSkeleton source, OVRSkeleton target) Parameters Type Name Description OVRSkeleton source The source skeleton. OVRSkeleton target The target skeleton."
  },
  "api/Oculus.Movement.Utils.BodyTrackingFidelityToggle.html": {
    "href": "api/Oculus.Movement.Utils.BodyTrackingFidelityToggle.html",
    "title": "Class BodyTrackingFidelityToggle | Unity-Movement Documentation",
    "keywords": "Class BodyTrackingFidelityToggle Allows setting body tracking fidelity. Inheritance System.Object BodyTrackingFidelityToggle Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class BodyTrackingFidelityToggle : MonoBehaviour Fields _currentFidelity The current body tracking fidelity set. Declaration protected BodyTrackingFidelity2 _currentFidelity Field Value Type Description BodyTrackingFidelity2 _worldText The text to update after body tracking fidelity is changed. Declaration protected TMPro.TextMeshPro _worldText Field Value Type Description TMPro.TextMeshPro Methods SwapFidelity() Changes the body tracking fidelity from low to high or vice versa. Declaration public void SwapFidelity()"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.html",
    "title": "Class BoneVisualizer | Unity-Movement Documentation",
    "keywords": "Class BoneVisualizer This class is a base class for BoneVisualizer<BoneType> , keeping type information that does not rely on a BoneType generic, and allowing all BoneVisualizer<BoneType> s to be accessed with a common type. Inheritance System.Object BoneVisualizer BoneVisualizer <BoneType> Implements IListGenerating Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public abstract class BoneVisualizer : MonoBehaviour, IListGenerating Fields _AXIS_VISUAL_NAME_SUFFIX_TOKEN Declaration protected const string _AXIS_VISUAL_NAME_SUFFIX_TOKEN = \"-AxisVisual.\" Field Value Type Description System.String _boneIdToAxisObject Declaration protected Dictionary<int, Transform> _boneIdToAxisObject Field Value Type Description Dictionary < System.Int32 , Transform > _boneTupleToLineRenderer Declaration protected Dictionary<object, LineRenderer> _boneTupleToLineRenderer Field Value Type Description Dictionary < System.Object , LineRenderer > _CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN Declaration protected const string _CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN = \"-CustomLineVisual.\" Field Value Type Description System.String _LINE_VISUAL_NAME_SUFFIX_TOKEN Declaration protected const string _LINE_VISUAL_NAME_SUFFIX_TOKEN = \"-LineVisual.\" Field Value Type Description System.String _whenToRender When to render this skeleton during the Unity gameloop. Declaration protected BoneVisualizer.WhenToRender _whenToRender Field Value Type Description BoneVisualizer.WhenToRender Properties BoneVisualRenderers The dictionary of bone visuals. Note these are visuals of bones, not bones themselves. Declaration public Dictionary<object, LineRenderer> BoneVisualRenderers { get; } Property Value Type Description Dictionary < System.Object , LineRenderer > EnableSkeletonProcessing Declaration public bool EnableSkeletonProcessing { get; set; } Property Value Type Description System.Boolean JointVisualTransforms The dictionary of bone joint visuals. Note these are visuals of bones, not bones themselves. Declaration public Dictionary<int, Transform> JointVisualTransforms { get; } Property Value Type Description Dictionary < System.Int32 , Transform > OnNewAxis Callback for newly generated Axes Declaration public BoneVisualizer.InstantiateAxisEvent OnNewAxis { get; set; } Property Value Type Description BoneVisualizer.InstantiateAxisEvent OnNewLine Callback for newly generated Lines Declaration public BoneVisualizer.InstantiateLineEvent OnNewLine { get; set; } Property Value Type Description BoneVisualizer.InstantiateLineEvent SkeletonProcessorLabel Declaration public virtual string SkeletonProcessorLabel { get; } Property Value Type Description System.String Methods ClearList() Clears the generated list Declaration public abstract void ClearList() GenerateList() Generates a list Declaration public abstract void GenerateList() ProcessSkeleton(OVRSkeleton) Declaration public virtual void ProcessSkeleton(OVRSkeleton skeleton) Parameters Type Name Description OVRSkeleton skeleton SetBody(GameObject) Can be used by UI to change the source of the skeleton visual data Declaration public abstract void SetBody(GameObject body) Parameters Type Name Description GameObject body Visualize() Declaration public abstract void Visualize() Implements IListGenerating"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.InstantiateAxisEvent.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.InstantiateAxisEvent.html",
    "title": "Delegate BoneVisualizer.InstantiateAxisEvent | Unity-Movement Documentation",
    "keywords": "Delegate BoneVisualizer.InstantiateAxisEvent Callback for newly generated Axes Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public delegate void InstantiateAxisEvent(int bone, GameObject gameObject); Parameters Type Name Description System.Int32 bone GameObject gameObject"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.InstantiateLineEvent.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.InstantiateLineEvent.html",
    "title": "Delegate BoneVisualizer.InstantiateLineEvent | Unity-Movement Documentation",
    "keywords": "Delegate BoneVisualizer.InstantiateLineEvent Callback for newly generated Lines Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public delegate void InstantiateLineEvent(int firstBone, int secondBone, GameObject gameObject); Parameters Type Name Description System.Int32 firstBone System.Int32 secondBone GameObject gameObject"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.VisualizationGuideType.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.VisualizationGuideType.html",
    "title": "Enum BoneVisualizer.VisualizationGuideType | Unity-Movement Documentation",
    "keywords": "Enum BoneVisualizer.VisualizationGuideType Visualization guide type. Indicates if user wants to use the mask, the standard bone visual data, or their own custom data which allows custom bone pairings. Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public enum VisualizationGuideType Fields Name Description AvatarMask BoneVisualData"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.VisualType.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.VisualType.html",
    "title": "Enum BoneVisualizer.VisualType | Unity-Movement Documentation",
    "keywords": "Enum BoneVisualizer.VisualType Visual types (lines, axes, etc). Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Flags] public enum VisualType Fields Name Description Axes Lines None"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer.WhenToRender.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer.WhenToRender.html",
    "title": "Enum BoneVisualizer.WhenToRender | Unity-Movement Documentation",
    "keywords": "Enum BoneVisualizer.WhenToRender When in the game loop to update the skeleton from it's source. Useful for debugging the state of the skeleton source at different stages of the game loop. Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public enum WhenToRender Fields Name Description Automatic LateUpdate Update VisualizeCalledExplicitly"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer-1.BoneTuple.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer-1.BoneTuple.html",
    "title": "Class BoneVisualizer<BoneType>.BoneTuple | Unity-Movement Documentation",
    "keywords": "Class BoneVisualizer<BoneType>.BoneTuple Bone tuple class: pair of bone joint IDs that define a bone Inheritance System.Object BoneVisualizer<BoneType>.BoneTuple Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoneTuple Constructors BoneTuple(BoneVisualizer<BoneType>.BoneTuple) Copy Constructor Declaration public BoneTuple(BoneVisualizer<BoneType>.BoneTuple original) Parameters Type Name Description BoneVisualizer.BoneTuple <> original BoneTuple(Int32, Int32) Standard BoneTuple constructor. Declaration public BoneTuple(int firstBone, int secondBone) Parameters Type Name Description System.Int32 firstBone System.Int32 secondBone Fields FirstBone First bone in tuple. Declaration public BoneType FirstBone Field Value Type Description BoneType Hide Whether or not to hide the bone (show by default) Declaration public bool Hide Field Value Type Description System.Boolean SecondBone Second bone in tuple. Declaration public BoneType SecondBone Field Value Type Description BoneType Properties FirstBoneId FirstBone as an Integer, which simplifies code when the bone index is ambiguous Declaration public int FirstBoneId { get; set; } Property Value Type Description System.Int32 SecondBoneId SecondBone as an Integer, which simplifies code when the bone index is ambiguous Declaration public int SecondBoneId { get; set; } Property Value Type Description System.Int32 Methods Is(Int32, Int32) General equality check, without the overhead of implementing operator== Declaration public bool Is(int firstBone, int secondBone) Parameters Type Name Description System.Int32 firstBone System.Int32 secondBone Returns Type Description System.Boolean"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer-1.CustomBoneVisualData.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer-1.CustomBoneVisualData.html",
    "title": "Class BoneVisualizer<BoneType>.CustomBoneVisualData | Unity-Movement Documentation",
    "keywords": "Class BoneVisualizer<BoneType>.CustomBoneVisualData Manages data defining which bones should be visualized Inheritance System.Object BoneVisualizer<BoneType>.CustomBoneVisualData Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class CustomBoneVisualData Constructors CustomBoneVisualData() Default constructor Declaration public CustomBoneVisualData() CustomBoneVisualData(BoneVisualizer<BoneType>.CustomBoneVisualData) Copy constructor Declaration public CustomBoneVisualData(BoneVisualizer<BoneType>.CustomBoneVisualData original) Parameters Type Name Description BoneVisualizer.CustomBoneVisualData <> original Fields _lastKnownTupleCount Keep track of expected bone count, to look for changes Declaration protected int _lastKnownTupleCount Field Value Type Description System.Int32 BoneTuples Bone tuples to visualize. Declaration public List<BoneVisualizer<BoneType>.BoneTuple> BoneTuples Field Value Type Description List < BoneVisualizer.BoneTuple <>> Properties IsChanged Determine if data has changed and needs to be re-rendered Declaration public bool IsChanged { get; } Property Value Type Description System.Boolean Methods DoesTupleExist(BoneVisualizer<BoneType>.BoneTuple) Indicates if tuple exists Declaration public bool DoesTupleExist(BoneVisualizer<BoneType>.BoneTuple tuple) Parameters Type Name Description BoneVisualizer.BoneTuple <> tuple Returns Type Description System.Boolean DoesTupleExist(Int32, Int32) Indicates if tuple exists Declaration public bool DoesTupleExist(int firstBone, int secondBone) Parameters Type Name Description System.Int32 firstBone First bone in question. System.Int32 secondBone Second bone in question. Returns Type Description System.Boolean True if so, false if not. FillArrayWithAllBones(Int32, Func<Int32, BoneVisualizer<BoneType>.BoneTuple>) Sets the bone visual array to all bones possible. Call this before Initialize(Int32) Declaration public void FillArrayWithAllBones(int count, Func<int, BoneVisualizer<BoneType>.BoneTuple> BoneIdToTuple) Parameters Type Name Description System.Int32 count System.Func < System.Int32 , BoneVisualizer.BoneTuple <>> BoneIdToTuple Initialize(Int32) Declaration public void Initialize(int jointCount) Parameters Type Name Description System.Int32 jointCount IsJointVisible(Int32) Indicates if a joint should be drawn Declaration public bool IsJointVisible(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Boolean"
  },
  "api/Oculus.Movement.Utils.BoneVisualizer-1.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizer-1.html",
    "title": "Class BoneVisualizer<BoneType> | Unity-Movement Documentation",
    "keywords": "Class BoneVisualizer<BoneType> Allows visualizing bones found in an OVRSkeleton or Animator component. should be an enum that maps to bone IDs. Inheritance System.Object BoneVisualizer BoneVisualizer<BoneType> AnimatorBoneVisualizer FullBodyOVRSkeletonBoneVisualizer OVRSkeletonBoneVisualizer Implements IListGenerating Inherited Members BoneVisualizer._LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._AXIS_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._whenToRender BoneVisualizer._boneTupleToLineRenderer BoneVisualizer._boneIdToAxisObject BoneVisualizer.OnNewAxis BoneVisualizer.OnNewLine BoneVisualizer.BoneVisualRenderers BoneVisualizer.JointVisualTransforms BoneVisualizer.EnableSkeletonProcessing BoneVisualizer.SkeletonProcessorLabel BoneVisualizer.SetBody(GameObject) BoneVisualizer.ProcessSkeleton(OVRSkeleton) Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public abstract class BoneVisualizer<BoneType> : BoneVisualizer, IListGenerating where BoneType : Enum Type Parameters Name Description BoneType Fields _axisRendererPrefab Axis renderer to use for visualization. Declaration protected GameObject _axisRendererPrefab Field Value Type Description GameObject _customBoneVisualData Custom bone visual data, which allows custom pairing of bones for line rendering. Declaration protected BoneVisualizer<BoneType>.CustomBoneVisualData _customBoneVisualData Field Value Type Description BoneVisualizer.CustomBoneVisualData <> _lineRendererPrefab Line renderer to use for visualization. Declaration protected GameObject _lineRendererPrefab Field Value Type Description GameObject _maskToVisualize Mask to use for visualization. Declaration protected AvatarMask _maskToVisualize Field Value Type Description AvatarMask _visualizationGuideType The type of guide used to visualize bones. Declaration protected BoneVisualizer.VisualizationGuideType _visualizationGuideType Field Value Type Description BoneVisualizer.VisualizationGuideType _visualType Indicates what kind of visual is desired. Declaration protected BoneVisualizer.VisualType _visualType Field Value Type Description BoneVisualizer.VisualType Properties IsShowingAxes Does _visualType include Declaration public bool IsShowingAxes { get; set; } Property Value Type Description System.Boolean IsShowingLines Does _visualType include Declaration public bool IsShowingLines { get; set; } Property Value Type Description System.Boolean Methods Awake() Declaration protected virtual void Awake() ClearBoneAxisVisualObjects() Declaration protected void ClearBoneAxisVisualObjects() ClearBoneTupleVisualObjects() Declaration protected void ClearBoneTupleVisualObjects() ClearList() Resets all visual data. Declaration public override void ClearList() Overrides BoneVisualizer.ClearList() CreateAllBonesMask() Declaration protected AvatarMask CreateAllBonesMask() Returns Type Description AvatarMask EnforceAxisRendererEnableState(Int32, Boolean) Declaration protected void EnforceAxisRendererEnableState(int bodyBone, bool enableValue) Parameters Type Name Description System.Int32 bodyBone System.Boolean enableValue EnforceCustomLineRendererEnableState(BoneVisualizer<BoneType>.BoneTuple, Boolean) Declaration protected void EnforceCustomLineRendererEnableState(BoneVisualizer<BoneType>.BoneTuple tuple, bool enableValue) Parameters Type Name Description BoneVisualizer.BoneTuple <> tuple System.Boolean enableValue GenerateList() Selects all bones for visualization. Declaration public override void GenerateList() Overrides BoneVisualizer.GenerateList() GetAvatarBodyPart(Int32) Used with Unity's , which selects specific parts of an avatar Declaration protected abstract AvatarMaskBodyPart GetAvatarBodyPart(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description AvatarMaskBodyPart the containing the given bone GetBoneCount() Should be a constant time function returning the count of possible bone/joints Declaration protected abstract int GetBoneCount() Returns Type Description System.Int32 number of bones/joints in this skeleton GetBoneTransform(Int32) Used to resolve a joint when rendering Axis Declaration protected abstract Transform GetBoneTransform(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description Transform the associated with the given bone ID GetBoneTransforms(BoneVisualizer<BoneType>.BoneTuple, out Transform, out Transform) Declaration protected bool GetBoneTransforms(BoneVisualizer<BoneType>.BoneTuple tupleItem, out Transform firstJoint, out Transform secondJoint) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem Transform firstJoint Transform secondJoint Returns Type Description System.Boolean GetBoneTuple(Int32) Gets standard begin and end joints of a bone Declaration protected abstract BoneVisualizer<BoneType>.BoneTuple GetBoneTuple(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description BoneVisualizer.BoneTuple <> the default BoneVisualizer<BoneType>.BoneTuple for this bone LateUpdate() MonoBehaviour.LateUpdate Declaration protected virtual void LateUpdate() OnDisable() Declaration protected virtual void OnDisable() ResetBoneVisuals() Clears existing bones. Prompts generation in Update() . Declaration protected void ResetBoneVisuals() SetUpAxisRenderer(Int32) Declaration protected void SetUpAxisRenderer(int currentBone) Parameters Type Name Description System.Int32 currentBone SetupBoneTupleLineRenderer(BoneVisualizer<BoneType>.BoneTuple) Declaration protected void SetupBoneTupleLineRenderer(BoneVisualizer<BoneType>.BoneTuple tupleItem) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem ShouldVisualizeJoint(Int32) Declaration protected bool ShouldVisualizeJoint(int bone) Parameters Type Name Description System.Int32 bone Returns Type Description System.Boolean Start() Declaration protected virtual void Start() TryGetBoneTransforms(BoneVisualizer<BoneType>.BoneTuple, out Transform, out Transform) Gets both bone transforms of the given BoneVisualizer<BoneType>.BoneTuple Declaration protected abstract bool TryGetBoneTransforms(BoneVisualizer<BoneType>.BoneTuple tupleItem, out Transform firstJoint, out Transform secondJoint) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem Transform firstJoint Transform secondJoint Returns Type Description System.Boolean true if the bones could be retrieved Update() Declaration protected virtual void Update() UseStandardBones() Declaration protected void UseStandardBones() Visualize() Declaration public override void Visualize() Overrides BoneVisualizer.Visualize() Implements IListGenerating"
  },
  "api/Oculus.Movement.Utils.BoneVisualizerLineColor.html": {
    "href": "api/Oculus.Movement.Utils.BoneVisualizerLineColor.html",
    "title": "Class BoneVisualizerLineColor | Unity-Movement Documentation",
    "keywords": "Class BoneVisualizerLineColor Add next to a BoneVisualizer script to change it's color. Inheritance System.Object BoneVisualizerLineColor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class BoneVisualizerLineColor : MonoBehaviour Properties LineColor gets/sets color of all Oculus.Movement.Utils.BoneVisualizerLineColor._boneVisualizer 's bones Declaration public Color LineColor { get; set; } Property Value Type Description Color Methods SetLineColor(Int32, Int32, GameObject) Will change every bone's color to Oculus.Movement.Utils.BoneVisualizerLineColor._lineColor Declaration public void SetLineColor(int boneA, int boneB, GameObject gameObject) Parameters Type Name Description System.Int32 boneA System.Int32 boneB GameObject gameObject"
  },
  "api/Oculus.Movement.Utils.DisplayIntAsEnumDrawer.html": {
    "href": "api/Oculus.Movement.Utils.DisplayIntAsEnumDrawer.html",
    "title": "Class DisplayIntAsEnumDrawer | Unity-Movement Documentation",
    "keywords": "Class DisplayIntAsEnumDrawer Int drawer that allows displaying an int like an enum. This is used for displaying ints that are bound to an AnimationStream but are functionally used as an enum. Inheritance System.Object DisplayIntAsEnumDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class DisplayIntAsEnumDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.EditorSkeletonControlsDrawer.html": {
    "href": "api/Oculus.Movement.Utils.EditorSkeletonControlsDrawer.html",
    "title": "Class EditorSkeletonControlsDrawer | Unity-Movement Documentation",
    "keywords": "Class EditorSkeletonControlsDrawer Used to create a single button hidden in a BoneVisualizer<BoneType>.CustomBoneVisualData element. Inheritance System.Object EditorSkeletonControlsDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class EditorSkeletonControlsDrawer : PropertyDrawer Methods GetPropertyInstance(SerializedProperty, Int32) Gets System.Object s out of a Declaration public object GetPropertyInstance(SerializedProperty property, int offset = 0) Parameters Type Name Description SerializedProperty property property to find the object instance of System.Int32 offset If zero, provides the raw (unserialized) object. -1 gives it's parent, if the property is in a serialized hierarchy. Returns Type Description System.Object OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.EnumNamedArrayAttribute.html": {
    "href": "api/Oculus.Movement.Utils.EnumNamedArrayAttribute.html",
    "title": "Class EnumNamedArrayAttribute | Unity-Movement Documentation",
    "keywords": "Class EnumNamedArrayAttribute Used to label lists and arrays with an Enum instead of the default 'Element #' Inheritance System.Object EnumNamedArrayAttribute Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class EnumNamedArrayAttribute : PropertyAttribute Constructors EnumNamedArrayAttribute(Type) Used to label lists and arrays with an Enum instead of the default 'Element #' Declaration public EnumNamedArrayAttribute(Type targetEnum) Parameters Type Name Description System.Type targetEnum Which System.Enum to use as a label Fields TargetEnum System.Enum values replacing \"Element X\" when rendering lists in Unity Editor Declaration public Type TargetEnum Field Value Type Description System.Type Methods GetNames() Get cached names of enums. This method reduces memory thrash at Unity editor time Declaration public string[] GetNames() Returns Type Description System.String []"
  },
  "api/Oculus.Movement.Utils.EnumNamedArrayDrawer.html": {
    "href": "api/Oculus.Movement.Utils.EnumNamedArrayDrawer.html",
    "title": "Class EnumNamedArrayDrawer | Unity-Movement Documentation",
    "keywords": "Class EnumNamedArrayDrawer Use this attribute on lists that are exposed in the Unity inspector to name the elements after enum values. Inheritance System.Object EnumNamedArrayDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class EnumNamedArrayDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description System.Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.FullBodyOVRSkeletonBoneVisualizer.html": {
    "href": "api/Oculus.Movement.Utils.FullBodyOVRSkeletonBoneVisualizer.html",
    "title": "Class FullBodyOVRSkeletonBoneVisualizer | Unity-Movement Documentation",
    "keywords": "Class FullBodyOVRSkeletonBoneVisualizer Allows visualizing bones found in an OVRSkeleton component for full-body characters. Inheritance System.Object BoneVisualizer BoneVisualizer < OVRHumanBodyBonesMappings.FullBodyTrackingBoneId > FullBodyOVRSkeletonBoneVisualizer Implements IListGenerating Inherited Members BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._visualizationGuideType BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._maskToVisualize BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._customBoneVisualData BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._lineRendererPrefab BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._axisRendererPrefab BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>._visualType BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.IsShowingLines BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.IsShowingAxes BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.OnDisable() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.ResetBoneVisuals() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.Update() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.LateUpdate() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.Visualize() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GenerateList() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.UseStandardBones() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.ClearList() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.ClearBoneTupleVisualObjects() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.ClearBoneAxisVisualObjects() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.CreateAllBonesMask() BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.ShouldVisualizeJoint(Int32) BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.SetupBoneTupleLineRenderer(BoneVisualizer.BoneTuple<>) BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GetBoneTransforms(BoneVisualizer.BoneTuple<>, Transform, Transform) BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.SetUpAxisRenderer(Int32) BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.EnforceCustomLineRendererEnableState(BoneVisualizer.BoneTuple<>, Boolean) BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.EnforceAxisRendererEnableState(Int32, Boolean) BoneVisualizer._LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._AXIS_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._whenToRender BoneVisualizer._boneTupleToLineRenderer BoneVisualizer._boneIdToAxisObject BoneVisualizer.OnNewAxis BoneVisualizer.OnNewLine BoneVisualizer.BoneVisualRenderers BoneVisualizer.JointVisualTransforms BoneVisualizer.EnableSkeletonProcessing BoneVisualizer.SkeletonProcessorLabel BoneVisualizer.ProcessSkeleton(OVRSkeleton) Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class FullBodyOVRSkeletonBoneVisualizer : BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>, IListGenerating Fields _ovrSkeletonComp OVRSkeleton component to visualize bones for. Declaration protected OVRSkeleton _ovrSkeletonComp Field Value Type Description OVRSkeleton _visualizeBindPose Whether to visualize bind pose or not. Declaration protected bool _visualizeBindPose Field Value Type Description System.Boolean Methods Awake() Declaration protected override void Awake() Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.Awake() GetAvatarBodyPart(Int32) Used with Unity's , which selects specific parts of an avatar Declaration protected override AvatarMaskBodyPart GetAvatarBodyPart(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description AvatarMaskBodyPart the containing the given bone Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GetAvatarBodyPart(System.Int32) GetBoneCount() Should be a constant time function returning the count of possible bone/joints Declaration protected override int GetBoneCount() Returns Type Description System.Int32 number of bones/joints in this skeleton Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GetBoneCount() GetBoneTransform(Int32) Used to resolve a joint when rendering Axis Declaration protected override Transform GetBoneTransform(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description Transform the associated with the given bone ID Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GetBoneTransform(System.Int32) GetBoneTuple(Int32) Gets standard begin and end joints of a bone Declaration protected override BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.BoneTuple GetBoneTuple(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description BoneVisualizer.BoneTuple <> the default BoneVisualizer<BoneType>.BoneTuple for this bone Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.GetBoneTuple(System.Int32) SetBody(GameObject) Can be used by UI to change the source of the skeleton visual data Declaration public override void SetBody(GameObject body) Parameters Type Name Description GameObject body Overrides BoneVisualizer.SetBody(GameObject) Start() Declaration protected override void Start() Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.Start() TryGetBoneTransforms(BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.BoneTuple, out Transform, out Transform) Gets both bone transforms of the given BoneVisualizer<BoneType>.BoneTuple Declaration protected override bool TryGetBoneTransforms(BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.BoneTuple tupleItem, out Transform firstJoint, out Transform secondJoint) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem Transform firstJoint Transform secondJoint Returns Type Description System.Boolean true if the bones could be retrieved Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.FullBodyTrackingBoneId>.TryGetBoneTransforms(Oculus.Movement.Utils.BoneVisualizer.BoneTuple<>, Transform, Transform) Implements IListGenerating"
  },
  "api/Oculus.Movement.Utils.FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer.html": {
    "href": "api/Oculus.Movement.Utils.FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer.html",
    "title": "Class FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer | Unity-Movement Documentation",
    "keywords": "Class FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] Inheritance System.Object FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer : PropertyDrawer Methods BoneTupleGUI(Rect, SerializedProperty, GUIContent) Call from OnGUI to draw a BoneVisualizer<BoneType>.BoneTuple . Declaration public static void BoneTupleGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.GenerateBuild.html": {
    "href": "api/Oculus.Movement.Utils.GenerateBuild.html",
    "title": "Class GenerateBuild | Unity-Movement Documentation",
    "keywords": "Class GenerateBuild This class contains useful menus used for generating sample builds. Inheritance System.Object GenerateBuild Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class GenerateBuild Methods CreateSamplesBuildAPK() Builds an APK with as many samples as possible, depending on whether or not those samples have been imported into the Assets folder or not. Declaration public static void CreateSamplesBuildAPK()"
  },
  "api/Oculus.Movement.Utils.HandleBuildErrors.html": {
    "href": "api/Oculus.Movement.Utils.HandleBuildErrors.html",
    "title": "Class HandleBuildErrors | Unity-Movement Documentation",
    "keywords": "Class HandleBuildErrors Handles errors after build process. This can be used to catch the edge case where builds don't actually succeed even if they are marked as doing so. Inheritance System.Object HandleBuildErrors Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public static class HandleBuildErrors Methods Check(Build.Reporting.BuildReport, Boolean, String[]) Check for build error edge cases. Declaration public static void Check(Build.Reporting.BuildReport buildReport, bool exitAfterBuild, string[] scenesBuilt) Parameters Type Name Description Build.Reporting.BuildReport buildReport Build report. System.Boolean exitAfterBuild If we need to exit after the build or not. System.String [] scenesBuilt Scenes built."
  },
  "api/Oculus.Movement.Utils.HelperMenusBody.html": {
    "href": "api/Oculus.Movement.Utils.HelperMenusBody.html",
    "title": "Class HelperMenusBody | Unity-Movement Documentation",
    "keywords": "Class HelperMenusBody Provides useful menus to help one set up body tracking technologies on characters. Inheritance System.Object HelperMenusBody Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public static class HelperMenusBody Methods SetupCharacterForAnimationRiggingRetargetingConstraints(GameObject, RestPoseObjectHumanoid, Boolean, Boolean, Boolean) Setup a character for retargeting with animation rigging constraints. Declaration public static void SetupCharacterForAnimationRiggingRetargetingConstraints(GameObject activeGameObject, RestPoseObjectHumanoid restPoseObjectHumanoid, bool addConstraints, bool isFullBody, bool runtimeInvocation = false) Parameters Type Name Description GameObject activeGameObject The character gameObject. RestPoseObjectHumanoid restPoseObjectHumanoid The rest pose closest to the character rest pose. System.Boolean addConstraints True if constraints should be added. System.Boolean isFullBody True if full body. System.Boolean runtimeInvocation True if in runtime."
  },
  "api/Oculus.Movement.Utils.html": {
    "href": "api/Oculus.Movement.Utils.html",
    "title": "Namespace Oculus.Movement.Utils | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Utils Classes ActivateToggle Designed to turn on/off objects with ActivateToggle.State Describes objects bound to a state and functionality triggered by state change ActivateToggle.TextChangeEvent Callback notifies UI text element of state change AddComponentsHelper Has functions that allow adding components via the editor or runtime. These functions detect if they are being called in the editor and if so, affect the undo state. AddComponentsRuntime Allow adding components at runtime. AnimatorBoneVisualizer Allows visualizing bones found in an Animator component. AnimatorBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] BindPoseObjectSkeleton Scriptable object that contains custom bind pose information that can be applied onto a bind pose to configure a custom bind pose. This can be used to fix artifacts that are a result of retargeting and deformation. BindPoseObjectSkeleton.BonePoseData Holds delta pose information for each bone. BodyTrackingFidelityToggle Allows setting body tracking fidelity. BoneVisualizer This class is a base class for BoneVisualizer<BoneType> , keeping type information that does not rely on a BoneType generic, and allowing all BoneVisualizer<BoneType> s to be accessed with a common type. BoneVisualizer<BoneType> Allows visualizing bones found in an OVRSkeleton or Animator component. should be an enum that maps to bone IDs. BoneVisualizer<BoneType>.BoneTuple Bone tuple class: pair of bone joint IDs that define a bone BoneVisualizer<BoneType>.CustomBoneVisualData Manages data defining which bones should be visualized BoneVisualizerLineColor Add next to a BoneVisualizer script to change it's color. DisplayIntAsEnumDrawer Int drawer that allows displaying an int like an enum. This is used for displaying ints that are bound to an AnimationStream but are functionally used as an enum. EditorSkeletonControlsDrawer Used to create a single button hidden in a BoneVisualizer<BoneType>.CustomBoneVisualData element. EnumNamedArrayAttribute Used to label lists and arrays with an Enum instead of the default 'Element #' EnumNamedArrayDrawer Use this attribute on lists that are exposed in the Unity inspector to name the elements after enum values. FullBodyOVRSkeletonBoneVisualizer Allows visualizing bones found in an OVRSkeleton component for full-body characters. FullBodyOVRSkeletonBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] GenerateBuild This class contains useful menus used for generating sample builds. HandleBuildErrors Handles errors after build process. This can be used to catch the edge case where builds don't actually succeed even if they are marked as doing so. HelperMenusBody Provides useful menus to help one set up body tracking technologies on characters. InspectorGuiHelper Use this class in custom s to simplify insertion of Inspector warnings or feature buttons. IntAsEnumAttribute Attribute used to display an int as an enum. JobCommons MovementAudioTrigger Trigger an audio clip on this audio source. Copied from Meta XR Interaction SDK OVR Samples. MovementSceneLoader Load different scenes. Copied from Meta XR Interaction SDK OVR Samples. OVRBodyTrackingStateListener Recognizes if runtime has functional body tracking, and notifies with callbacks. OVRBodyTrackingStateListener.StateListeners Named body tracking state listeners OVRInputBinding Reads inputs from and passes that input to Unity objects OVRInputBinding.ButtonBinding Data structure identifying an OVRInput to bind to a boolean event OVRInputBinding.JoystickBinding Data structure identifying an OVRInput to bind to a Vector2 event OVRInputBinding.UnityEvent_bool Triggered by changes to IsActive OVRInputBinding.UnityEvent_Vector2 Triggered by changes to Input OVRSkeletonBoneVisualizer Allows visualizing bones found in an OVRSkeleton component. OVRSkeletonBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] ProjectSettingsValidationWindow Editor window that displays information about configuring the project. ProjectValidation Validates various project settings for the samples to work correctly. ReorderInHierarchy Used to change hierarchy at runtime. Allows arrangement in a more intuitive manner during edit time. RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. RestPoseObjectHumanoid Stores the rest pose of a humanoid and allows querying properties of it. RestPoseObjectHumanoid.BonePoseData Holds pose information for each bone. ShaderBuildPreprocessor Process which shader variants get included in a build. SuggestBodyTrackingCalibrationButton Calls calibration to allow setting one's height. ToggleConstraintsSkeletonState If the bones are not valid then turn off constraints specified. This is useful if a constraint depends on the skeleton code to set the value of a bone every frame. Like a multi-position constraint that applies an offset. TransformsFollowMe Moves other transforms to this object constantly during LateUpdate TransformsFollowMe.Follower Used by objects being moved to mark who is moving them. UnityInputBinding Listens to Unity press and release, as well as \"Hoizontal\" and \"Vertical\" UnityInputBinding.KeyBinding Input binding meta data that wraps around UnityInputBinding.UnityEvent_bool UnityInputBinding.UnityEvent_bool Triggered by press and release UnityInputBinding.UnityEvent_Vector2 Triggered by \"Hoizontal\" and \"Vertical\" Structs JobCommons.GetPosesJob Job used to quickly store poses from transforms. JobCommons.WritePosesToTransformsJob Job used to apply stored poses to transforms. MovementAudioTrigger.MinMaxPair Struct that contains data about a min max pair of floats. Interfaces IListGenerating Allows list creation/destruction without referencing the type of list Enums BoneVisualizer.VisualizationGuideType Visualization guide type. Indicates if user wants to use the mask, the standard bone visual data, or their own custom data which allows custom bone pairings. BoneVisualizer.VisualType Visual types (lines, axes, etc). BoneVisualizer.WhenToRender When in the game loop to update the skeleton from it's source. Useful for debugging the state of the skeleton source at different stages of the game loop. InspectorGuiHelper.OptionalIcon What kind of warning icon to show OVRBodyTrackingStateListener.BodyInputState General availability state of body tracking ReorderInHierarchy.HowToReorder Delegates BoneVisualizer.InstantiateAxisEvent Callback for newly generated Axes BoneVisualizer.InstantiateLineEvent Callback for newly generated Lines"
  },
  "api/Oculus.Movement.Utils.IListGenerating.html": {
    "href": "api/Oculus.Movement.Utils.IListGenerating.html",
    "title": "Interface IListGenerating | Unity-Movement Documentation",
    "keywords": "Interface IListGenerating Allows list creation/destruction without referencing the type of list Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public interface IListGenerating Methods ClearList() Clears the generated list Declaration void ClearList() GenerateList() Generates a list Declaration void GenerateList()"
  },
  "api/Oculus.Movement.Utils.InspectorGuiHelper.html": {
    "href": "api/Oculus.Movement.Utils.InspectorGuiHelper.html",
    "title": "Class InspectorGuiHelper | Unity-Movement Documentation",
    "keywords": "Class InspectorGuiHelper Use this class in custom s to simplify insertion of Inspector warnings or feature buttons. Inheritance System.Object InspectorGuiHelper Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class InspectorGuiHelper Constructors InspectorGuiHelper(Func<Boolean>, Action, String, String, InspectorGuiHelper.OptionalIcon) Call DrawInInspector() to conditionally add an inspector GUI Declaration public InspectorGuiHelper(Func<bool> isRequired, Action activateHelp, string message, string button, InspectorGuiHelper.OptionalIcon icon) Parameters Type Name Description System.Func < System.Boolean > isRequired Delegate to test if this additional Inspector UI should be added System.Action activateHelp Delegate to trigger when the optional Inspector button is pressed System.String message Optional text of this additional Inspector UI System.String button Text for the button in this additional Inspector UI InspectorGuiHelper.OptionalIcon icon What kind of warning icon to show Methods DrawInInspector() Call this in the method of a custom Editor. Declaration public void DrawInInspector()"
  },
  "api/Oculus.Movement.Utils.InspectorGuiHelper.OptionalIcon.html": {
    "href": "api/Oculus.Movement.Utils.InspectorGuiHelper.OptionalIcon.html",
    "title": "Enum InspectorGuiHelper.OptionalIcon | Unity-Movement Documentation",
    "keywords": "Enum InspectorGuiHelper.OptionalIcon What kind of warning icon to show Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public enum OptionalIcon Fields Name Description None Warning"
  },
  "api/Oculus.Movement.Utils.IntAsEnumAttribute.html": {
    "href": "api/Oculus.Movement.Utils.IntAsEnumAttribute.html",
    "title": "Class IntAsEnumAttribute | Unity-Movement Documentation",
    "keywords": "Class IntAsEnumAttribute Attribute used to display an int as an enum. Inheritance System.Object IntAsEnumAttribute Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class IntAsEnumAttribute : PropertyAttribute Constructors IntAsEnumAttribute(Type) Declaration public IntAsEnumAttribute(Type type) Parameters Type Name Description System.Type type Properties Type Declaration public Type Type { get; } Property Value Type Description System.Type"
  },
  "api/Oculus.Movement.Utils.JobCommons.GetPosesJob.html": {
    "href": "api/Oculus.Movement.Utils.JobCommons.GetPosesJob.html",
    "title": "Struct JobCommons.GetPosesJob | Unity-Movement Documentation",
    "keywords": "Struct JobCommons.GetPosesJob Job used to quickly store poses from transforms. Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public struct GetPosesJob Fields Poses Poses to write to. Declaration public NativeArray<Pose> Poses Field Value Type Description NativeArray < Pose > Methods Execute(Int32, TransformAccess) Declaration public void Execute(int index, TransformAccess transform) Parameters Type Name Description System.Int32 index TransformAccess transform"
  },
  "api/Oculus.Movement.Utils.JobCommons.html": {
    "href": "api/Oculus.Movement.Utils.JobCommons.html",
    "title": "Class JobCommons | Unity-Movement Documentation",
    "keywords": "Class JobCommons Inheritance System.Object JobCommons Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class JobCommons"
  },
  "api/Oculus.Movement.Utils.JobCommons.WritePosesToTransformsJob.html": {
    "href": "api/Oculus.Movement.Utils.JobCommons.WritePosesToTransformsJob.html",
    "title": "Struct JobCommons.WritePosesToTransformsJob | Unity-Movement Documentation",
    "keywords": "Struct JobCommons.WritePosesToTransformsJob Job used to apply stored poses to transforms. Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public struct WritePosesToTransformsJob Fields SourcePoses Poses to read from. Declaration public NativeArray<Pose> SourcePoses Field Value Type Description NativeArray < Pose > Methods Execute(Int32, TransformAccess) Declaration public void Execute(int index, TransformAccess transform) Parameters Type Name Description System.Int32 index TransformAccess transform"
  },
  "api/Oculus.Movement.Utils.MovementAudioTrigger.html": {
    "href": "api/Oculus.Movement.Utils.MovementAudioTrigger.html",
    "title": "Class MovementAudioTrigger | Unity-Movement Documentation",
    "keywords": "Class MovementAudioTrigger Trigger an audio clip on this audio source. Copied from Meta XR Interaction SDK OVR Samples. Inheritance System.Object MovementAudioTrigger Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class MovementAudioTrigger : MonoBehaviour Properties ChanceToPlay Declaration public float ChanceToPlay { get; set; } Property Value Type Description System.Single Loop Declaration public bool Loop { get; set; } Property Value Type Description System.Boolean Pitch Declaration public float Pitch { get; set; } Property Value Type Description System.Single PitchRandomization Declaration public MovementAudioTrigger.MinMaxPair PitchRandomization { get; set; } Property Value Type Description MovementAudioTrigger.MinMaxPair Spatialize Declaration public bool Spatialize { get; set; } Property Value Type Description System.Boolean Volume Declaration public float Volume { get; set; } Property Value Type Description System.Single VolumeRandomization Declaration public MovementAudioTrigger.MinMaxPair VolumeRandomization { get; set; } Property Value Type Description MovementAudioTrigger.MinMaxPair Methods InjectAllAudioTrigger(AudioSource, AudioClip[]) Declaration public void InjectAllAudioTrigger(AudioSource audioSource, AudioClip[] audioClips) Parameters Type Name Description AudioSource audioSource AudioClip [] audioClips InjectAudioClips(AudioClip[]) Declaration public void InjectAudioClips(AudioClip[] audioClips) Parameters Type Name Description AudioClip [] audioClips InjectAudioSource(AudioSource) Declaration public void InjectAudioSource(AudioSource audioSource) Parameters Type Name Description AudioSource audioSource InjectOptionalPlayOnStart(Boolean) Declaration public void InjectOptionalPlayOnStart(bool playOnStart) Parameters Type Name Description System.Boolean playOnStart PlayAudio() Play the audio clip on this audio source. Declaration public void PlayAudio() Start() Declaration protected virtual void Start()"
  },
  "api/Oculus.Movement.Utils.MovementAudioTrigger.MinMaxPair.html": {
    "href": "api/Oculus.Movement.Utils.MovementAudioTrigger.MinMaxPair.html",
    "title": "Struct MovementAudioTrigger.MinMaxPair | Unity-Movement Documentation",
    "keywords": "Struct MovementAudioTrigger.MinMaxPair Struct that contains data about a min max pair of floats. Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public struct MinMaxPair Properties Max Declaration public readonly float Max { get; } Property Value Type Description System.Single Min Declaration public readonly float Min { get; } Property Value Type Description System.Single UseRandomRange Declaration public readonly bool UseRandomRange { get; } Property Value Type Description System.Boolean"
  },
  "api/Oculus.Movement.Utils.MovementSceneLoader.html": {
    "href": "api/Oculus.Movement.Utils.MovementSceneLoader.html",
    "title": "Class MovementSceneLoader | Unity-Movement Documentation",
    "keywords": "Class MovementSceneLoader Load different scenes. Copied from Meta XR Interaction SDK OVR Samples. Inheritance System.Object MovementSceneLoader Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class MovementSceneLoader : MonoBehaviour Fields WhenLoadingScene Delegate for when loading a scene. Declaration public Action<string> WhenLoadingScene Field Value Type Description System.Action < System.String > WhenSceneLoaded Delegate for when a scene is loaded. Declaration public Action<string> WhenSceneLoaded Field Value Type Description System.Action < System.String > Methods HandleReadyToLoad(String) Handles ready to load. This should be called after handling any pre-load tasks (e.g. fade to white) by anyone who registered with WhenLoadingScene in order for the loading to proceed Declaration public void HandleReadyToLoad(string sceneName) Parameters Type Name Description System.String sceneName Load(String) Loads a scene by name. Declaration public void Load(string sceneName) Parameters Type Name Description System.String sceneName The name of the scene to load."
  },
  "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.BodyInputState.html": {
    "href": "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.BodyInputState.html",
    "title": "Enum OVRBodyTrackingStateListener.BodyInputState | Unity-Movement Documentation",
    "keywords": "Enum OVRBodyTrackingStateListener.BodyInputState General availability state of body tracking Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public enum BodyInputState Fields Name Description BodyTrackingAvailable Body tracking data is available, all is well. BodyTrackingNotAvailable Headset is connected, but body tracking is missing (permissions, OS, Link version) HeadsetNotConnected The headset is not even connected None Calculation is not yet finished"
  },
  "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.html": {
    "href": "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.html",
    "title": "Class OVRBodyTrackingStateListener | Unity-Movement Documentation",
    "keywords": "Class OVRBodyTrackingStateListener Recognizes if runtime has functional body tracking, and notifies with callbacks. Inheritance System.Object OVRBodyTrackingStateListener Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class OVRBodyTrackingStateListener : MonoBehaviour Fields _stateListeners Named body tracking state listeners Declaration protected OVRBodyTrackingStateListener.StateListeners _stateListeners Field Value Type Description OVRBodyTrackingStateListener.StateListeners Methods IsHeadsetConnected() Check if the headset is connected in this scene. TODO validate with other experts Declaration public static bool IsHeadsetConnected() Returns Type Description System.Boolean"
  },
  "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.StateListeners.html": {
    "href": "api/Oculus.Movement.Utils.OVRBodyTrackingStateListener.StateListeners.html",
    "title": "Class OVRBodyTrackingStateListener.StateListeners | Unity-Movement Documentation",
    "keywords": "Class OVRBodyTrackingStateListener.StateListeners Named body tracking state listeners Inheritance System.Object OVRBodyTrackingStateListener.StateListeners Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class StateListeners Fields BodyTrackingNotWorking Declaration public UnityEvent BodyTrackingNotWorking Field Value Type Description UnityEvent BodyTrackingWorking Declaration public UnityEvent BodyTrackingWorking Field Value Type Description UnityEvent HeadsetNotConnected Declaration public UnityEvent HeadsetNotConnected Field Value Type Description UnityEvent Methods ExecuteCallbacksByState(OVRBodyTrackingStateListener.BodyInputState) Declaration public void ExecuteCallbacksByState(OVRBodyTrackingStateListener.BodyInputState state) Parameters Type Name Description OVRBodyTrackingStateListener.BodyInputState state"
  },
  "api/Oculus.Movement.Utils.OVRInputBinding.ButtonBinding.html": {
    "href": "api/Oculus.Movement.Utils.OVRInputBinding.ButtonBinding.html",
    "title": "Class OVRInputBinding.ButtonBinding | Unity-Movement Documentation",
    "keywords": "Class OVRInputBinding.ButtonBinding Data structure identifying an OVRInput to bind to a boolean event Inheritance System.Object OVRInputBinding.ButtonBinding Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class ButtonBinding Fields Button Declaration public OVRInput.Button Button Field Value Type Description OVRInput.Button Controller Declaration public OVRInput.Controller Controller Field Value Type Description OVRInput.Controller name Declaration public string name Field Value Type Description System.String Notify Declaration public OVRInputBinding.UnityEvent_bool Notify Field Value Type Description OVRInputBinding.UnityEvent_bool Properties IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Update() Declaration public void Update()"
  },
  "api/Oculus.Movement.Utils.OVRInputBinding.html": {
    "href": "api/Oculus.Movement.Utils.OVRInputBinding.html",
    "title": "Class OVRInputBinding | Unity-Movement Documentation",
    "keywords": "Class OVRInputBinding Reads inputs from and passes that input to Unity objects Inheritance System.Object OVRInputBinding Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class OVRInputBinding : MonoBehaviour"
  },
  "api/Oculus.Movement.Utils.OVRInputBinding.JoystickBinding.html": {
    "href": "api/Oculus.Movement.Utils.OVRInputBinding.JoystickBinding.html",
    "title": "Class OVRInputBinding.JoystickBinding | Unity-Movement Documentation",
    "keywords": "Class OVRInputBinding.JoystickBinding Data structure identifying an OVRInput to bind to a Vector2 event Inheritance System.Object OVRInputBinding.JoystickBinding Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class JoystickBinding Fields Axis Declaration public OVRInput.Axis2D Axis Field Value Type Description OVRInput.Axis2D name Declaration public string name Field Value Type Description System.String Notify Declaration public OVRInputBinding.UnityEvent_Vector2 Notify Field Value Type Description OVRInputBinding.UnityEvent_Vector2 Properties Input Declaration public Vector2 Input { get; } Property Value Type Description Vector2 Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Update() Declaration public void Update()"
  },
  "api/Oculus.Movement.Utils.OVRInputBinding.UnityEvent_bool.html": {
    "href": "api/Oculus.Movement.Utils.OVRInputBinding.UnityEvent_bool.html",
    "title": "Class OVRInputBinding.UnityEvent_bool | Unity-Movement Documentation",
    "keywords": "Class OVRInputBinding.UnityEvent_bool Triggered by changes to IsActive Inheritance System.Object OVRInputBinding.UnityEvent_bool Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnityEvent_bool : UnityEvent<bool>"
  },
  "api/Oculus.Movement.Utils.OVRInputBinding.UnityEvent_Vector2.html": {
    "href": "api/Oculus.Movement.Utils.OVRInputBinding.UnityEvent_Vector2.html",
    "title": "Class OVRInputBinding.UnityEvent_Vector2 | Unity-Movement Documentation",
    "keywords": "Class OVRInputBinding.UnityEvent_Vector2 Triggered by changes to Input Inheritance System.Object OVRInputBinding.UnityEvent_Vector2 Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnityEvent_Vector2 : UnityEvent<Vector2>"
  },
  "api/Oculus.Movement.Utils.OVRSkeletonBoneVisualizer.html": {
    "href": "api/Oculus.Movement.Utils.OVRSkeletonBoneVisualizer.html",
    "title": "Class OVRSkeletonBoneVisualizer | Unity-Movement Documentation",
    "keywords": "Class OVRSkeletonBoneVisualizer Allows visualizing bones found in an OVRSkeleton component. Inheritance System.Object BoneVisualizer BoneVisualizer < OVRHumanBodyBonesMappings.BodyTrackingBoneId > OVRSkeletonBoneVisualizer Implements IListGenerating Inherited Members BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._visualizationGuideType BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._maskToVisualize BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._customBoneVisualData BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._lineRendererPrefab BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._axisRendererPrefab BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>._visualType BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.IsShowingLines BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.IsShowingAxes BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.OnDisable() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.ResetBoneVisuals() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.Update() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.LateUpdate() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.Visualize() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GenerateList() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.UseStandardBones() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.ClearList() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.ClearBoneTupleVisualObjects() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.ClearBoneAxisVisualObjects() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.CreateAllBonesMask() BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.ShouldVisualizeJoint(Int32) BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.SetupBoneTupleLineRenderer(BoneVisualizer.BoneTuple<>) BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GetBoneTransforms(BoneVisualizer.BoneTuple<>, Transform, Transform) BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.SetUpAxisRenderer(Int32) BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.EnforceCustomLineRendererEnableState(BoneVisualizer.BoneTuple<>, Boolean) BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.EnforceAxisRendererEnableState(Int32, Boolean) BoneVisualizer._LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._CUSTOM_LINE_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._AXIS_VISUAL_NAME_SUFFIX_TOKEN BoneVisualizer._whenToRender BoneVisualizer._boneTupleToLineRenderer BoneVisualizer._boneIdToAxisObject BoneVisualizer.OnNewAxis BoneVisualizer.OnNewLine BoneVisualizer.BoneVisualRenderers BoneVisualizer.JointVisualTransforms BoneVisualizer.EnableSkeletonProcessing BoneVisualizer.SkeletonProcessorLabel BoneVisualizer.ProcessSkeleton(OVRSkeleton) Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class OVRSkeletonBoneVisualizer : BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>, IListGenerating Fields _ovrSkeletonComp OVRSkeleton component to visualize bones for. Declaration protected OVRSkeleton _ovrSkeletonComp Field Value Type Description OVRSkeleton _visualizeBindPose Whether to visualize bind pose or not. Declaration protected bool _visualizeBindPose Field Value Type Description System.Boolean Methods Awake() Declaration protected override void Awake() Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.Awake() GetAvatarBodyPart(Int32) Used with Unity's , which selects specific parts of an avatar Declaration protected override AvatarMaskBodyPart GetAvatarBodyPart(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description AvatarMaskBodyPart the containing the given bone Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GetAvatarBodyPart(System.Int32) GetBoneCount() Should be a constant time function returning the count of possible bone/joints Declaration protected override int GetBoneCount() Returns Type Description System.Int32 number of bones/joints in this skeleton Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GetBoneCount() GetBoneTransform(Int32) Used to resolve a joint when rendering Axis Declaration protected override Transform GetBoneTransform(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description Transform the associated with the given bone ID Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GetBoneTransform(System.Int32) GetBoneTuple(Int32) Gets standard begin and end joints of a bone Declaration protected override BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.BoneTuple GetBoneTuple(int currentBone) Parameters Type Name Description System.Int32 currentBone Returns Type Description BoneVisualizer.BoneTuple <> the default BoneVisualizer<BoneType>.BoneTuple for this bone Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.GetBoneTuple(System.Int32) SetBody(GameObject) Can be used by UI to change the source of the skeleton visual data Declaration public override void SetBody(GameObject body) Parameters Type Name Description GameObject body Overrides BoneVisualizer.SetBody(GameObject) Start() Declaration protected override void Start() Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.Start() TryGetBoneTransforms(BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.BoneTuple, out Transform, out Transform) Gets both bone transforms of the given BoneVisualizer<BoneType>.BoneTuple Declaration protected override bool TryGetBoneTransforms(BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.BoneTuple tupleItem, out Transform firstJoint, out Transform secondJoint) Parameters Type Name Description BoneVisualizer.BoneTuple <> tupleItem Transform firstJoint Transform secondJoint Returns Type Description System.Boolean true if the bones could be retrieved Overrides Oculus.Movement.Utils.BoneVisualizer<OVRHumanBodyBonesMappings.BodyTrackingBoneId>.TryGetBoneTransforms(Oculus.Movement.Utils.BoneVisualizer.BoneTuple<>, Transform, Transform) Implements IListGenerating"
  },
  "api/Oculus.Movement.Utils.OVRSkeletonBoneVisualizerBoneTupleDrawer.html": {
    "href": "api/Oculus.Movement.Utils.OVRSkeletonBoneVisualizerBoneTupleDrawer.html",
    "title": "Class OVRSkeletonBoneVisualizerBoneTupleDrawer | Unity-Movement Documentation",
    "keywords": "Class OVRSkeletonBoneVisualizerBoneTupleDrawer Used to draw a BoneVisualizer<BoneType>.BoneTuple like: [enabled] [FirstBone] [SecondBone] Inheritance System.Object OVRSkeletonBoneVisualizerBoneTupleDrawer Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class OVRSkeletonBoneVisualizerBoneTupleDrawer : PropertyDrawer Methods BoneTupleGUI(Rect, SerializedProperty, GUIContent) Call from OnGUI to draw a BoneVisualizer<BoneType>.BoneTuple . Declaration public static void BoneTupleGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Utils.ProjectSettingsValidationWindow.html": {
    "href": "api/Oculus.Movement.Utils.ProjectSettingsValidationWindow.html",
    "title": "Class ProjectSettingsValidationWindow | Unity-Movement Documentation",
    "keywords": "Class ProjectSettingsValidationWindow Editor window that displays information about configuring the project. Inheritance System.Object ProjectSettingsValidationWindow Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ProjectSettingsValidationWindow : EditorWindow Methods ShowProjectSettingsValidationWindow() Shows the project settings validation window. Declaration public static void ShowProjectSettingsValidationWindow()"
  },
  "api/Oculus.Movement.Utils.ProjectValidation.html": {
    "href": "api/Oculus.Movement.Utils.ProjectValidation.html",
    "title": "Class ProjectValidation | Unity-Movement Documentation",
    "keywords": "Class ProjectValidation Validates various project settings for the samples to work correctly. Inheritance System.Object ProjectValidation Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ProjectValidation Methods CheckProjectSettings() Declaration public static void CheckProjectSettings()"
  },
  "api/Oculus.Movement.Utils.ReorderInHierarchy.HowToReorder.html": {
    "href": "api/Oculus.Movement.Utils.ReorderInHierarchy.HowToReorder.html",
    "title": "Enum ReorderInHierarchy.HowToReorder | Unity-Movement Documentation",
    "keywords": "Enum ReorderInHierarchy.HowToReorder Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public enum HowToReorder Fields Name Description BecomeChildOf Move this to be a child of the given target BecomeChildOfAndLoseOldPosition Move this to be a child of the given target, and set position/rotation to zero BecomeParentOf Move the given target to be a child of this BecomeParentOfAndClearOldPosition Move the given target to be a child of this, set target's position/rotation to zero BecomeSiblingAfter Move this to be a child of the given target's parent, after the given target BecomeSiblingBefore Move this to be a child of the given target's parent, before the given target None Do not touch the hierarchy"
  },
  "api/Oculus.Movement.Utils.ReorderInHierarchy.html": {
    "href": "api/Oculus.Movement.Utils.ReorderInHierarchy.html",
    "title": "Class ReorderInHierarchy | Unity-Movement Documentation",
    "keywords": "Class ReorderInHierarchy Used to change hierarchy at runtime. Allows arrangement in a more intuitive manner during edit time. Inheritance System.Object ReorderInHierarchy Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ReorderInHierarchy : MonoBehaviour Properties Target Which object to reorder in relation to Declaration public Transform Target { get; set; } Property Value Type Description Transform Methods BecomeChildOf(Transform) Declaration public void BecomeChildOf(Transform newParent) Parameters Type Name Description Transform newParent BecomeChildOf(Transform, Transform) Declaration public static void BecomeChildOf(Transform transform, Transform newParent) Parameters Type Name Description Transform transform Transform newParent BecomeChildOfLoseOldPosition(Transform) Declaration public void BecomeChildOfLoseOldPosition(Transform newParent) Parameters Type Name Description Transform newParent BecomeChildOfLoseOldPosition(Transform, Transform) Declaration public static void BecomeChildOfLoseOldPosition(Transform transform, Transform newParent) Parameters Type Name Description Transform transform Transform newParent BecomeParentOf(Transform) Declaration public void BecomeParentOf(Transform newChild) Parameters Type Name Description Transform newChild BecomeParentOf(Transform, Transform) Declaration public static void BecomeParentOf(Transform transform, Transform newChild) Parameters Type Name Description Transform transform Transform newChild BecomeParentOfLoseOldPosition(Transform, Transform) Declaration public static void BecomeParentOfLoseOldPosition(Transform transform, Transform newChild) Parameters Type Name Description Transform transform Transform newChild BecomeSiblingAfter(Transform) Declaration public void BecomeSiblingAfter(Transform sibling) Parameters Type Name Description Transform sibling BecomeSiblingAfter(Transform, Transform) Declaration public static void BecomeSiblingAfter(Transform transform, Transform sibling) Parameters Type Name Description Transform transform Transform sibling BecomeSiblingBefore(Transform) Declaration public void BecomeSiblingBefore(Transform sibling) Parameters Type Name Description Transform sibling BecomeSiblingBefore(Transform, Transform) Declaration public static void BecomeSiblingBefore(Transform transform, Transform sibling) Parameters Type Name Description Transform transform Transform sibling DoActivateTrigger() Do the reordering defined by this component Declaration public void DoActivateTrigger()"
  },
  "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html": {
    "href": "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html",
    "title": "Class RequestMicrophonePermissions | Unity-Movement Documentation",
    "keywords": "Class RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. Inheritance System.Object RequestMicrophonePermissions Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class RequestMicrophonePermissions : MonoBehaviour Properties PermissionsFlowDone True when permissions done. Declaration public bool PermissionsFlowDone { get; } Property Value Type Description System.Boolean"
  },
  "api/Oculus.Movement.Utils.RestPoseObjectHumanoid.BonePoseData.html": {
    "href": "api/Oculus.Movement.Utils.RestPoseObjectHumanoid.BonePoseData.html",
    "title": "Class RestPoseObjectHumanoid.BonePoseData | Unity-Movement Documentation",
    "keywords": "Class RestPoseObjectHumanoid.BonePoseData Holds pose information for each bone. Inheritance System.Object RestPoseObjectHumanoid.BonePoseData Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class BonePoseData Constructors BonePoseData(Transform, HumanBodyBones) Declaration public BonePoseData(Transform boneTransform, HumanBodyBones humanBone) Parameters Type Name Description Transform boneTransform HumanBodyBones humanBone Fields HumanBone Human body bone enum, if any. If it's equal to , then it's not mapped to a humanoid bone in the original character's avatar description. These bones might still be useful to track since they describe all of the bones in-between mapped bones. Declaration public HumanBodyBones HumanBone Field Value Type Description HumanBodyBones LocalPose Local transform. Declaration public Pose LocalPose Field Value Type Description Pose WorldPose World transform. Declaration public Pose WorldPose Field Value Type Description Pose"
  },
  "api/Oculus.Movement.Utils.RestPoseObjectHumanoid.html": {
    "href": "api/Oculus.Movement.Utils.RestPoseObjectHumanoid.html",
    "title": "Class RestPoseObjectHumanoid | Unity-Movement Documentation",
    "keywords": "Class RestPoseObjectHumanoid Stores the rest pose of a humanoid and allows querying properties of it. Inheritance System.Object RestPoseObjectHumanoid Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class RestPoseObjectHumanoid : ScriptableObject Fields _bonePoseDataArray A flat array containing all bone pose data. There should be a dictionary mapping from body bone to pose data, but it's currently not possible to serialize dictionaries. Declaration protected RestPoseObjectHumanoid.BonePoseData[] _bonePoseDataArray Field Value Type Description RestPoseObjectHumanoid.BonePoseData [] Methods CalculateRotationDifferenceFromRestPoseToAnimatorBonePair(Animator, HumanBodyBones, HumanBodyBones, HumanBodyBones, HumanBodyBones) Calculates the rotation difference between the specified bone pair in the animator character and the bone pair in the reference rest pose. Declaration public Quaternion CalculateRotationDifferenceFromRestPoseToAnimatorBonePair(Animator otherAnimator, HumanBodyBones humanBodyBone, HumanBodyBones followingHumanBodyBone, HumanBodyBones targetHumanBodyBone, HumanBodyBones followingOtherHumanBodyBone) Parameters Type Name Description Animator otherAnimator Animator to compare against. HumanBodyBones humanBodyBone HumanBodyBones joint to be referenced for the angle comparison. HumanBodyBones followingHumanBodyBone Following HumanBodyBones joint to be referenced for the angle comparison. HumanBodyBones targetHumanBodyBone HumanBodyBones joint of the target to be referenced for the angle comparison. HumanBodyBones followingOtherHumanBodyBone Following HumanBodyBones joint of the target to be referenced for the angle comparison. Returns Type Description Quaternion Rotation difference. CalculateRotationDifferenceFromRestPoseToAnimatorJoint(Animator, HumanBodyBones) Calculates the rotation difference between the bone in the animator character and the bone in the reference rest pose. This script uses mappings from the SDK. This is angle from the rest pose to the animator. Declaration public Quaternion CalculateRotationDifferenceFromRestPoseToAnimatorJoint(Animator otherAnimator, HumanBodyBones humanBodyBone) Parameters Type Name Description Animator otherAnimator Animator to compare against. HumanBodyBones humanBodyBone HumanBodyBones joint to be referenced for the angle comparison. Returns Type Description Quaternion Rotation difference. GetBonePoseData(HumanBodyBones) Returns bone pose data for the given humanoid bone. Declaration public RestPoseObjectHumanoid.BonePoseData GetBonePoseData(HumanBodyBones humanBone) Parameters Type Name Description HumanBodyBones humanBone HumanBodyBones used for the query. Returns Type Description RestPoseObjectHumanoid.BonePoseData Bone pose data, if bone is found in the map. InitializePoseDataFromAnimator(Animator) Initializes the rest pose data for all bones from the animator. Declaration public void InitializePoseDataFromAnimator(Animator animator) Parameters Type Name Description Animator animator The humanoid animator. Exceptions Type Condition System.Exception Exception thrown if the incoming animator is invalid."
  },
  "api/Oculus.Movement.Utils.ShaderBuildPreprocessor.html": {
    "href": "api/Oculus.Movement.Utils.ShaderBuildPreprocessor.html",
    "title": "Class ShaderBuildPreprocessor | Unity-Movement Documentation",
    "keywords": "Class ShaderBuildPreprocessor Process which shader variants get included in a build. Inheritance System.Object ShaderBuildPreprocessor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ShaderBuildPreprocessor : IPreprocessShaders Properties callbackOrder Used to set when Unity calls this shader preprocessor. Declaration public int callbackOrder { get; } Property Value Type Description System.Int32 Methods OnProcessShader(Shader, ShaderSnippetData, IList<ShaderCompilerData>) Callback before each shader is compiled. Declaration public void OnProcessShader(Shader shader, ShaderSnippetData snippet, IList<ShaderCompilerData> data) Parameters Type Name Description Shader shader The shader about to be compiled. ShaderSnippetData snippet Shader details. IList < ShaderCompilerData > data List of shader variants."
  },
  "api/Oculus.Movement.Utils.SuggestBodyTrackingCalibrationButton.html": {
    "href": "api/Oculus.Movement.Utils.SuggestBodyTrackingCalibrationButton.html",
    "title": "Class SuggestBodyTrackingCalibrationButton | Unity-Movement Documentation",
    "keywords": "Class SuggestBodyTrackingCalibrationButton Calls calibration to allow setting one's height. Inheritance System.Object SuggestBodyTrackingCalibrationButton Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class SuggestBodyTrackingCalibrationButton : MonoBehaviour Fields _calibrateOnStartup Allows calibration on startup. Declaration protected bool _calibrateOnStartup Field Value Type Description System.Boolean _height The height to set in meters. Declaration protected float _height Field Value Type Description System.Single _worldText The text to modify once height is modified. Declaration protected TMPro.TextMeshPro _worldText Field Value Type Description TMPro.TextMeshPro Methods CalibrateHeight() Calibrates height to the value specified by this script's field. Declaration public void CalibrateHeight()"
  },
  "api/Oculus.Movement.Utils.ToggleConstraintsSkeletonState.html": {
    "href": "api/Oculus.Movement.Utils.ToggleConstraintsSkeletonState.html",
    "title": "Class ToggleConstraintsSkeletonState | Unity-Movement Documentation",
    "keywords": "Class ToggleConstraintsSkeletonState If the bones are not valid then turn off constraints specified. This is useful if a constraint depends on the skeleton code to set the value of a bone every frame. Like a multi-position constraint that applies an offset. Inheritance System.Object ToggleConstraintsSkeletonState Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ToggleConstraintsSkeletonState : MonoBehaviour"
  },
  "api/Oculus.Movement.Utils.TransformsFollowMe.Follower.html": {
    "href": "api/Oculus.Movement.Utils.TransformsFollowMe.Follower.html",
    "title": "Class TransformsFollowMe.Follower | Unity-Movement Documentation",
    "keywords": "Class TransformsFollowMe.Follower Used by objects being moved to mark who is moving them. Inheritance System.Object TransformsFollowMe.Follower Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class Follower : MonoBehaviour Fields following Declaration public TransformsFollowMe following Field Value Type Description TransformsFollowMe"
  },
  "api/Oculus.Movement.Utils.TransformsFollowMe.html": {
    "href": "api/Oculus.Movement.Utils.TransformsFollowMe.html",
    "title": "Class TransformsFollowMe | Unity-Movement Documentation",
    "keywords": "Class TransformsFollowMe Moves other transforms to this object constantly during LateUpdate Inheritance System.Object TransformsFollowMe Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class TransformsFollowMe : MonoBehaviour Methods DoFollowMe() Moves the target transforms positions and rotations to this transform Declaration public void DoFollowMe() LateUpdate() Declaration protected void LateUpdate() SetTransformsToZero() Used to reset transforms that are following this transform Declaration public void SetTransformsToZero()"
  },
  "api/Oculus.Movement.Utils.UnityInputBinding.html": {
    "href": "api/Oculus.Movement.Utils.UnityInputBinding.html",
    "title": "Class UnityInputBinding | Unity-Movement Documentation",
    "keywords": "Class UnityInputBinding Listens to Unity press and release, as well as \"Hoizontal\" and \"Vertical\" Inheritance System.Object UnityInputBinding Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class UnityInputBinding : MonoBehaviour"
  },
  "api/Oculus.Movement.Utils.UnityInputBinding.KeyBinding.html": {
    "href": "api/Oculus.Movement.Utils.UnityInputBinding.KeyBinding.html",
    "title": "Class UnityInputBinding.KeyBinding | Unity-Movement Documentation",
    "keywords": "Class UnityInputBinding.KeyBinding Input binding meta data that wraps around UnityInputBinding.UnityEvent_bool Inheritance System.Object UnityInputBinding.KeyBinding Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class KeyBinding Fields KeyCode Declaration public KeyCode KeyCode Field Value Type Description KeyCode name Declaration public string name Field Value Type Description System.String Notify Declaration public UnityInputBinding.UnityEvent_bool Notify Field Value Type Description UnityInputBinding.UnityEvent_bool Properties IsActive Declaration public bool IsActive { get; } Property Value Type Description System.Boolean Methods ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Update() Declaration public void Update()"
  },
  "api/Oculus.Movement.Utils.UnityInputBinding.UnityEvent_bool.html": {
    "href": "api/Oculus.Movement.Utils.UnityInputBinding.UnityEvent_bool.html",
    "title": "Class UnityInputBinding.UnityEvent_bool | Unity-Movement Documentation",
    "keywords": "Class UnityInputBinding.UnityEvent_bool Triggered by press and release Inheritance System.Object UnityInputBinding.UnityEvent_bool Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnityEvent_bool : UnityEvent<bool>"
  },
  "api/Oculus.Movement.Utils.UnityInputBinding.UnityEvent_Vector2.html": {
    "href": "api/Oculus.Movement.Utils.UnityInputBinding.UnityEvent_Vector2.html",
    "title": "Class UnityInputBinding.UnityEvent_Vector2 | Unity-Movement Documentation",
    "keywords": "Class UnityInputBinding.UnityEvent_Vector2 Triggered by \"Hoizontal\" and \"Vertical\" Inheritance System.Object UnityInputBinding.UnityEvent_Vector2 Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax [Serializable] public class UnityEvent_Vector2 : UnityEvent<Vector2>"
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity-Movement | Unity-Movement Documentation",
    "keywords": "Unity-Movement Unity-Movement is a package that uses OpenXRâ€™s tracking layer APIs to expose Meta Quest Proâ€™s Body Tracking (BT), Eye Tracking (ET), and Face Tracking (FT) capabilities. With this package, developers can leverage tracking to populate VR environments with custom avatars that bring the expressiveness of users into the virtual environments that they create. License The Unity-Movement package is released under the Oculus License . The MIT License applies to only certain, clearly marked documents. If an individual file does not indicate which license it is subject to, then the Oculus License applies. Requirements A version of Unity supported for Movement SDK installed: 2021.3.26f1 (2021 LTS or newer) 2022.3.11f2 (2022 LTS or newer) Unity 6 or newer v71.0 or newer of the Meta XR SDK. You will need the Meta XR Core SDK and the Meta XR Interaction SDK packages found on this page . A project set up with these steps . Getting Started First, ensure that all of the requirements are met. Then, bring this package into the project. In Package Manager, click on the add button below the window title and select Add package from git URLâ€¦ , using this URL: https://github.com/oculus-samples/Unity-Movement.git To grab a specific version of the package, append the version number with a # to the git URL (i.e. https://github.com/oculus-samples/Unity-Movement.git#1.2.0 ) Alternatively, in package manager, click on the add button below the window title and select Add package from disk... , using the package.json located after unzipping one of the releases here: https://github.com/oculus-samples/Unity-Movement/releases The sample scenes are located under the Samples/Scenes folder. Unity Setup If the new scene or an existing scene doesnâ€™t have a GameObject with the OVRCameraRig component, integrate body tracking as mentioned here and then follow these verification steps: From the Hierarchy tab, look for a Main Camera GameObject which comes in a new scene by default. If it it exists, then please delete it. Make sure a Camera Rig is in your scene, either by using the OVRCameraRig or by creating one using Building Blocks. To create a Camera Rig using Building Blocks, go to Meta->Tools->Building Blocks and select the (+) icon on the lower right of the Camera Rig option. Select the Camera Rig object in the Hierarchy, and in the Inspector tab, go to the OVRManager component and look for the \"Quest Features\" section. In the General tab, there are options to enable body, face, and eye tracking support. Make sure that Supported or Required is enabled for the type of tracking that you require. Under OVRManager's \"Permission Requests On Startup\" section, verify that Body, Face and Eye Tracking are enabled. Ensure that OVRManager's \"Tracking Origin Type\" is set to \"Floor Level\". In OVRManager's \"Movement Tracking\" verify that \"High\" for \"Body Tracking Fidelity\" is selected. In OVRManager's \"Movement Tracking\" verify that \"Full Body\" for \"Body Tracking Joint Set\" is selected. Layer index 10, layer index 11, and the HiddenMesh layer must be present in the project for RecalculateNormals to work correctly. Some Project Settings can be validated via Movement->Check Project Settings . For a more thorough check, please use Oculus->Tools->Project Setup Tool . Rendering Quality Navigate to your Project Settings ( Edit->Project Settings... ) and click on the \"Quality\" section. If your project uses URP, then some of these settings might be part the rendering pipeline asset currently in use. The pipeline picked will be shown in the Quality menu. The following settings are recommended: Four bones for Skin Weights. 2x or 4x Multi Sampling Anti Aliasing. Full resolution textures. Shadow settings: Hard and soft shadows. Very high shadow resolution. Stable fit. Shadow distance of 3 meters with cascades. This will allow viewing shadows nearby without experiencing poor quality. At least one pixel light. Samples The project contains several sample scenes. To test the samples, they must be imported into the project's Assets folder: Select the \"Meta Movement\" package in the package manager. Once selected, expand the Samples section and import the desired sample scenes. For more information about body tracking, please refer to this page . For more information about the samples, please refer to this page . Player Settings Make sure that the color space is set to Linear. Build Settings In order for the SceneSelectMenu buttons to work, add imported scenes in the Samples step to the Build Settings. Documentation The documentation for this package can be found here . The API reference for this package can be found here . License Unity-Movement is subject to the Oculus SDK License Agreement , as found in the LICENSE file."
  },
  "manual/overview.html": {
    "href": "manual/overview.html",
    "title": "Overview | Unity-Movement Documentation",
    "keywords": "Overview The overview for this package can be found here ."
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples | Unity-Movement Documentation",
    "keywords": "Samples The documentation for the samples in this package can be found here ."
  }
}